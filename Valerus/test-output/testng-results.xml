<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="34" ignored="66" total="261" passed="161">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="28046659" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-05T03:13:00 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="28046659" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-05T03:13:00 IST">
      <class name="testcases.ToursTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursTest@12405818]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="120803" started-at="2020-02-04T19:59:27 IST" finished-at="2020-02-04T20:01:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursTest@12405818]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T19:59:27 IST" finished-at="2020-02-04T19:59:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourTest" duration-ms="12495" started-at="2020-02-04T20:01:27 IST" finished-at="2020-02-04T20:01:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="655" started-at="2020-02-04T20:01:40 IST" finished-at="2020-02-04T20:01:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourTest status=SUCCESS method=ToursTest.AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="112377" started-at="2020-02-04T20:01:41 IST" finished-at="2020-02-04T20:03:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourWithAllParametersTest" duration-ms="55625" started-at="2020-02-04T20:03:33 IST" finished-at="2020-02-04T20:04:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithAllParametersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="551" started-at="2020-02-04T20:04:29 IST" finished-at="2020-02-04T20:04:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithAllParametersTest status=SUCCESS method=ToursTest.AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="102704" started-at="2020-02-04T20:50:07 IST" finished-at="2020-02-04T20:51:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddViewTest" duration-ms="31119" started-at="2020-02-04T20:51:50 IST" finished-at="2020-02-04T20:52:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="619" started-at="2020-02-04T20:52:21 IST" finished-at="2020-02-04T20:52:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewTest status=SUCCESS method=ToursTest.AddViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="101866" started-at="2020-02-04T21:56:02 IST" finished-at="2020-02-04T21:57:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeNameTest" duration-ms="29335" started-at="2020-02-04T21:57:44 IST" finished-at="2020-02-04T21:58:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="817" started-at="2020-02-04T21:58:13 IST" finished-at="2020-02-04T21:58:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=ToursTest.ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="119459" started-at="2020-02-04T22:00:50 IST" finished-at="2020-02-04T22:02:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeOrderForViewTest" duration-ms="5805" started-at="2020-02-04T22:02:49 IST" finished-at="2020-02-04T22:02:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeOrderForViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="656" started-at="2020-02-04T22:02:55 IST" finished-at="2020-02-04T22:02:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeOrderForViewTest status=SUCCESS method=ToursTest.ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="106595" started-at="2020-02-04T22:49:19 IST" finished-at="2020-02-04T22:51:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeRemarksTest" duration-ms="24283" started-at="2020-02-04T22:51:05 IST" finished-at="2020-02-04T22:51:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="543" started-at="2020-02-04T22:51:30 IST" finished-at="2020-02-04T22:51:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ToursTest.ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="104037" started-at="2020-02-04T23:35:19 IST" finished-at="2020-02-04T23:37:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeBySpinnersTest" duration-ms="55827" started-at="2020-02-04T23:37:03 IST" finished-at="2020-02-04T23:37:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="636" started-at="2020-02-04T23:37:59 IST" finished-at="2020-02-04T23:37:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersTest status=SUCCESS method=ToursTest.ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="116642" started-at="2020-02-04T23:44:30 IST" finished-at="2020-02-04T23:46:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="FAIL" signature="ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeTest" duration-ms="12727" started-at="2020-02-04T23:46:26 IST" finished-at="2020-02-04T23:46:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [68109] but found [6810]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [68109] but found [6810]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.ToursTest.ChangeViewTimeTest(ToursTest.java:750)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="1207" started-at="2020-02-04T23:46:39 IST" finished-at="2020-02-04T23:46:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeTest status=FAILURE method=ToursTest.ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="179273" started-at="2020-02-04T23:46:40 IST" finished-at="2020-02-04T23:49:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToLessThanMinValueTest" duration-ms="5996" started-at="2020-02-04T23:49:40 IST" finished-at="2020-02-04T23:49:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToLessThanMinValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="1004" started-at="2020-02-04T23:49:46 IST" finished-at="2020-02-04T23:49:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToLessThanMinValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="121472" started-at="2020-02-04T23:49:47 IST" finished-at="2020-02-04T23:51:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToMoreThanMaxValueTest" duration-ms="6533" started-at="2020-02-04T23:51:48 IST" finished-at="2020-02-04T23:51:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToMoreThanMaxValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="676" started-at="2020-02-04T23:51:55 IST" finished-at="2020-02-04T23:51:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToMoreThanMaxValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103039" started-at="2020-02-05T00:10:18 IST" finished-at="2020-02-05T00:12:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeVisibilityStatusTest" duration-ms="34625" started-at="2020-02-05T00:12:01 IST" finished-at="2020-02-05T00:12:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="613" started-at="2020-02-05T00:12:36 IST" finished-at="2020-02-05T00:12:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ToursTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="104420" started-at="2020-02-05T00:41:50 IST" finished-at="2020-02-05T00:43:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteAllViewsTest" duration-ms="2013" started-at="2020-02-05T00:43:34 IST" finished-at="2020-02-05T00:43:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="997" started-at="2020-02-05T00:43:36 IST" finished-at="2020-02-05T00:43:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsTest status=SUCCESS method=ToursTest.DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103746" started-at="2020-02-05T00:53:59 IST" finished-at="2020-02-05T00:55:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonAndPressNoTest" duration-ms="22007" started-at="2020-02-05T00:55:43 IST" finished-at="2020-02-05T00:56:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="585" started-at="2020-02-05T00:56:05 IST" finished-at="2020-02-05T00:56:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="102200" started-at="2020-02-05T00:56:06 IST" finished-at="2020-02-05T00:57:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonTest" duration-ms="31122" started-at="2020-02-05T00:57:48 IST" finished-at="2020-02-05T00:58:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-05T00:58:19 IST" finished-at="2020-02-05T00:58:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonTest status=SUCCESS method=ToursTest.DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="114533" started-at="2020-02-05T00:58:19 IST" finished-at="2020-02-05T01:00:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconAndPressNoTest" duration-ms="17976" started-at="2020-02-05T01:00:14 IST" finished-at="2020-02-05T01:00:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-05T01:00:32 IST" finished-at="2020-02-05T01:00:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="119996" started-at="2020-02-05T01:00:32 IST" finished-at="2020-02-05T01:02:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconTest" duration-ms="29397" started-at="2020-02-05T01:02:32 IST" finished-at="2020-02-05T01:03:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="550" started-at="2020-02-05T01:03:02 IST" finished-at="2020-02-05T01:03:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconTest status=SUCCESS method=ToursTest.DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="118286" started-at="2020-02-05T01:13:46 IST" finished-at="2020-02-05T01:15:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewFromViewsPageTest" duration-ms="55407" started-at="2020-02-05T01:15:45 IST" finished-at="2020-02-05T01:16:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewFromViewsPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="909" started-at="2020-02-05T01:16:40 IST" finished-at="2020-02-05T01:16:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewFromViewsPageTest status=SUCCESS method=ToursTest.DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103076" started-at="2020-02-05T01:16:41 IST" finished-at="2020-02-05T01:18:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewTest" duration-ms="5936" started-at="2020-02-05T01:18:24 IST" finished-at="2020-02-05T01:18:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="1040" started-at="2020-02-05T01:18:30 IST" finished-at="2020-02-05T01:18:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewTest status=SUCCESS method=ToursTest.DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="101908" started-at="2020-02-05T01:28:47 IST" finished-at="2020-02-05T01:30:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterToursTest" duration-ms="3206" started-at="2020-02-05T01:30:29 IST" finished-at="2020-02-05T01:30:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterToursTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="772" started-at="2020-02-05T01:30:32 IST" finished-at="2020-02-05T01:30:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterToursTest status=SUCCESS method=ToursTest.FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="102786" started-at="2020-02-05T01:30:33 IST" finished-at="2020-02-05T01:32:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterViewsTest" duration-ms="4645" started-at="2020-02-05T01:32:16 IST" finished-at="2020-02-05T01:32:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="664" started-at="2020-02-05T01:32:20 IST" finished-at="2020-02-05T01:32:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterViewsTest status=SUCCESS method=ToursTest.FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="118317" started-at="2020-02-05T01:47:59 IST" finished-at="2020-02-05T01:49:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="NewTourWithEmptyViewTest" duration-ms="17658" started-at="2020-02-05T01:49:57 IST" finished-at="2020-02-05T01:50:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewTourWithEmptyViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="810" started-at="2020-02-05T01:50:15 IST" finished-at="2020-02-05T01:50:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewTourWithEmptyViewTest status=SUCCESS method=ToursTest.NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursTest@12405818]" name="endReport" is-config="true" duration-ms="69" started-at="2020-02-05T01:50:15 IST" finished-at="2020-02-05T01:50:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursTest -->
      <class name="testcases.NVRsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="setup" is-config="true" duration-ms="4" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="90972" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:27:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddAlreadyUsedNVRManuallyTest" duration-ms="15482" started-at="2020-02-04T19:27:05 IST" finished-at="2020-02-04T19:27:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddAlreadyUsedNVRManuallyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="690" started-at="2020-02-04T19:27:20 IST" finished-at="2020-02-04T19:27:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddAlreadyUsedNVRManuallyTest status=SUCCESS method=NVRsTest.AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="57282" started-at="2020-02-04T19:30:22 IST" finished-at="2020-02-04T19:31:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndCheckStatusVTest" duration-ms="76083" started-at="2020-02-04T19:31:19 IST" finished-at="2020-02-04T19:32:35 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRAndCheckStatusVTest(NVRsTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndCheckStatusVTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1071" started-at="2020-02-04T19:32:35 IST" finished-at="2020-02-04T19:32:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndCheckStatusVTest status=FAILURE method=NVRsTest.AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="57429" started-at="2020-02-04T19:32:36 IST" finished-at="2020-02-04T19:33:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndPressApplyTest" duration-ms="36985" started-at="2020-02-04T19:33:34 IST" finished-at="2020-02-04T19:34:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="941" started-at="2020-02-04T19:34:11 IST" finished-at="2020-02-04T19:34:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52126" started-at="2020-02-04T19:34:12 IST" finished-at="2020-02-04T19:35:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressApplyTest" duration-ms="33297" started-at="2020-02-04T19:35:04 IST" finished-at="2020-02-04T19:35:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-04T19:35:37 IST" finished-at="2020-02-04T19:35:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51743" started-at="2020-02-04T19:35:38 IST" finished-at="2020-02-04T19:36:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressCloseTest" duration-ms="16412" started-at="2020-02-04T19:36:30 IST" finished-at="2020-02-04T19:36:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressCloseTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="900" started-at="2020-02-04T19:36:46 IST" finished-at="2020-02-04T19:36:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressCloseTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="57546" started-at="2020-02-04T19:36:47 IST" finished-at="2020-02-04T19:37:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndSwitchONSecuredTest" duration-ms="47707" started-at="2020-02-04T19:37:44 IST" finished-at="2020-02-04T19:38:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-04T19:38:32 IST" finished-at="2020-02-04T19:38:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndSwitchONSecuredTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="56261" started-at="2020-02-04T19:38:33 IST" finished-at="2020-02-04T19:39:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyCheckStatusTest" duration-ms="70403" started-at="2020-02-04T19:39:29 IST" finished-at="2020-02-04T19:40:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyCheckStatusTest(NVRsTest.java:507)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1035" started-at="2020-02-04T19:40:39 IST" finished-at="2020-02-04T19:40:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyCheckStatusTest status=FAILURE method=NVRsTest.AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53427" started-at="2020-02-04T19:40:40 IST" finished-at="2020-02-04T19:41:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest" duration-ms="71395" started-at="2020-02-04T19:41:34 IST" finished-at="2020-02-04T19:42:45 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest(NVRsTest.java:884)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1077" started-at="2020-02-04T19:42:45 IST" finished-at="2020-02-04T19:42:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest status=FAILURE method=NVRsTest.AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54581" started-at="2020-02-04T19:42:46 IST" finished-at="2020-02-04T19:43:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortTest" duration-ms="208498" started-at="2020-02-04T19:43:41 IST" finished-at="2020-02-04T19:47:09 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Communication Failure] but found [Connecting...]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Communication Failure] but found [Connecting...]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyWithSecuredPortTest(NVRsTest.java:812)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1010" started-at="2020-02-04T19:47:09 IST" finished-at="2020-02-04T19:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortTest status=FAILURE method=NVRsTest.AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55271" started-at="2020-02-04T19:47:10 IST" finished-at="2020-02-04T19:48:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRWithSecuredPortTest" duration-ms="129112" started-at="2020-02-04T19:48:06 IST" finished-at="2020-02-04T19:50:15 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRWithSecuredPortTest(NVRsTest.java:163)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="650" started-at="2020-02-04T19:50:15 IST" finished-at="2020-02-04T19:50:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRWithSecuredPortTest status=FAILURE method=NVRsTest.AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54736" started-at="2020-02-04T20:52:22 IST" finished-at="2020-02-04T20:53:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByButtonTest" duration-ms="14460" started-at="2020-02-04T20:53:17 IST" finished-at="2020-02-04T20:53:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1030" started-at="2020-02-04T20:53:31 IST" finished-at="2020-02-04T20:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByButtonTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54514" started-at="2020-02-04T20:53:32 IST" finished-at="2020-02-04T20:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByIconTest" duration-ms="10112" started-at="2020-02-04T20:54:27 IST" finished-at="2020-02-04T20:54:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="923" started-at="2020-02-04T20:54:37 IST" finished-at="2020-02-04T20:54:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByIconTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="68116" started-at="2020-02-04T20:59:18 IST" finished-at="2020-02-04T21:00:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeIPAdressAndCheckStatusTest" duration-ms="186009" started-at="2020-02-04T21:00:27 IST" finished-at="2020-02-04T21:03:33 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP] but found [IP]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP] but found [IP]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeIPAdressAndCheckStatusTest(NVRsTest.java:1356)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1213" started-at="2020-02-04T21:03:33 IST" finished-at="2020-02-04T21:03:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53109" started-at="2020-02-04T21:54:44 IST" finished-at="2020-02-04T21:55:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeNameTest" duration-ms="23625" started-at="2020-02-04T21:55:37 IST" finished-at="2020-02-04T21:56:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-04T21:56:01 IST" finished-at="2020-02-04T21:56:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=NVRsTest.ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55891" started-at="2020-02-04T22:02:56 IST" finished-at="2020-02-04T22:03:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePasswordToInvalidAndCheckStatusTest" duration-ms="196926" started-at="2020-02-04T22:03:51 IST" finished-at="2020-02-04T22:07:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePasswordToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="728" started-at="2020-02-04T22:07:08 IST" finished-at="2020-02-04T22:07:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePasswordToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="70597" started-at="2020-02-04T22:07:09 IST" finished-at="2020-02-04T22:08:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePortAndCheckStatusTest" duration-ms="158516" started-at="2020-02-04T22:08:20 IST" finished-at="2020-02-04T22:10:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="673" started-at="2020-02-04T22:10:58 IST" finished-at="2020-02-04T22:10:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55325" started-at="2020-02-04T22:53:45 IST" finished-at="2020-02-04T22:54:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeSecuredAndCheckStatusTest" duration-ms="256764" started-at="2020-02-04T22:54:40 IST" finished-at="2020-02-04T22:58:57 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeSecuredAndCheckStatusTest(NVRsTest.java:1533)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeSecuredAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="908" started-at="2020-02-04T22:58:57 IST" finished-at="2020-02-04T22:58:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeSecuredAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="57562" started-at="2020-02-04T23:19:44 IST" finished-at="2020-02-04T23:20:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeUserNameToInvalidAndCheckStatusTest" duration-ms="202475" started-at="2020-02-04T23:20:42 IST" finished-at="2020-02-04T23:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-04T23:24:04 IST" finished-at="2020-02-04T23:24:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54151" started-at="2020-02-05T00:48:55 IST" finished-at="2020-02-05T00:49:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest" duration-ms="24534" started-at="2020-02-05T00:49:49 IST" finished-at="2020-02-05T00:50:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="732" started-at="2020-02-05T00:50:14 IST" finished-at="2020-02-05T00:50:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest status=SUCCESS method=NVRsTest.DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54718" started-at="2020-02-05T01:26:31 IST" finished-at="2020-02-05T01:27:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterDiscoveredNVRsTest" duration-ms="19985" started-at="2020-02-05T01:27:26 IST" finished-at="2020-02-05T01:27:46 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsTest.FilterDiscoveredNVRsTest(NVRsTest.java:285)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="3449" started-at="2020-02-05T01:27:46 IST" finished-at="2020-02-05T01:27:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterDiscoveredNVRsTest status=FAILURE method=NVRsTest.FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53217" started-at="2020-02-05T01:27:49 IST" finished-at="2020-02-05T01:28:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterNVRsTest" duration-ms="3798" started-at="2020-02-05T01:28:43 IST" finished-at="2020-02-05T01:28:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="548" started-at="2020-02-05T01:28:46 IST" finished-at="2020-02-05T01:28:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterNVRsTest status=SUCCESS method=NVRsTest.FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54826" started-at="2020-02-05T01:39:45 IST" finished-at="2020-02-05T01:40:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidIPAdressInAddNVRManualyTest" duration-ms="21758" started-at="2020-02-05T01:40:40 IST" finished-at="2020-02-05T01:41:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidIPAdressInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="806" started-at="2020-02-05T01:41:01 IST" finished-at="2020-02-05T01:41:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidIPAdressInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55004" started-at="2020-02-05T01:41:02 IST" finished-at="2020-02-05T01:41:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPasswordInAddNVRManualyTest" duration-ms="38496" started-at="2020-02-05T01:41:57 IST" finished-at="2020-02-05T01:42:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPasswordInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="674" started-at="2020-02-05T01:42:36 IST" finished-at="2020-02-05T01:42:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPasswordInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53129" started-at="2020-02-05T01:42:36 IST" finished-at="2020-02-05T01:43:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPortInAddNVRManualyTest" duration-ms="44797" started-at="2020-02-05T01:43:30 IST" finished-at="2020-02-05T01:44:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPortInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="574" started-at="2020-02-05T01:44:14 IST" finished-at="2020-02-05T01:44:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPortInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53479" started-at="2020-02-05T01:44:15 IST" finished-at="2020-02-05T01:45:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidUserNameInAddNVRManualyTest" duration-ms="38023" started-at="2020-02-05T01:45:08 IST" finished-at="2020-02-05T01:45:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidUserNameInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="741" started-at="2020-02-05T01:45:46 IST" finished-at="2020-02-05T01:45:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidUserNameInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53751" started-at="2020-02-05T01:45:47 IST" finished-at="2020-02-05T01:46:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="MultipleNVRsAdditingTest" duration-ms="77108" started-at="2020-02-05T01:46:41 IST" finished-at="2020-02-05T01:47:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleNVRsAdditingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="649" started-at="2020-02-05T01:47:58 IST" finished-at="2020-02-05T01:47:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MultipleNVRsAdditingTest status=SUCCESS method=NVRsTest.MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="70999" started-at="2020-02-05T01:50:16 IST" finished-at="2020-02-05T01:51:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByIconTest" duration-ms="21570" started-at="2020-02-05T01:51:27 IST" finished-at="2020-02-05T01:51:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="708" started-at="2020-02-05T01:51:48 IST" finished-at="2020-02-05T01:51:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByIconTest status=SUCCESS method=NVRsTest.RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53319" started-at="2020-02-05T02:41:20 IST" finished-at="2020-02-05T02:42:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SelectNVRandPressCancelTest" duration-ms="22524" started-at="2020-02-05T02:42:13 IST" finished-at="2020-02-05T02:42:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectNVRandPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-05T02:42:36 IST" finished-at="2020-02-05T02:42:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectNVRandPressCancelTest status=SUCCESS method=NVRsTest.SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53407" started-at="2020-02-05T02:42:36 IST" finished-at="2020-02-05T02:43:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingDiscoveredNVRsTest" duration-ms="23380" started-at="2020-02-05T02:43:30 IST" finished-at="2020-02-05T02:43:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="708" started-at="2020-02-05T02:43:53 IST" finished-at="2020-02-05T02:43:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingDiscoveredNVRsTest status=SUCCESS method=NVRsTest.SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54459" started-at="2020-02-05T02:43:54 IST" finished-at="2020-02-05T02:44:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByIPAdressTest" duration-ms="141512" started-at="2020-02-05T02:44:48 IST" finished-at="2020-02-05T02:47:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="906" started-at="2020-02-05T02:47:10 IST" finished-at="2020-02-05T02:47:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByIPAdressTest status=SUCCESS method=NVRsTest.SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52750" started-at="2020-02-05T02:47:11 IST" finished-at="2020-02-05T02:48:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByNameTest" duration-ms="10800" started-at="2020-02-05T02:48:03 IST" finished-at="2020-02-05T02:48:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-05T02:48:14 IST" finished-at="2020-02-05T02:48:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByNameTest status=SUCCESS method=NVRsTest.SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53371" started-at="2020-02-05T02:48:15 IST" finished-at="2020-02-05T02:49:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByVersionTest" duration-ms="9076" started-at="2020-02-05T02:49:08 IST" finished-at="2020-02-05T02:49:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByVersionTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1038" started-at="2020-02-05T02:49:17 IST" finished-at="2020-02-05T02:49:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByVersionTest status=SUCCESS method=NVRsTest.SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51460" started-at="2020-02-05T02:49:18 IST" finished-at="2020-02-05T02:50:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchOffStorageDefinitionsAndPressNoTest" duration-ms="38296" started-at="2020-02-05T02:50:10 IST" finished-at="2020-02-05T02:50:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchOffStorageDefinitionsAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T02:50:48 IST" finished-at="2020-02-05T02:50:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchOffStorageDefinitionsAndPressNoTest status=SUCCESS method=NVRsTest.SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53634" started-at="2020-02-05T02:58:26 IST" finished-at="2020-02-05T02:59:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchStorageDefinitionsTest" duration-ms="14482" started-at="2020-02-05T02:59:20 IST" finished-at="2020-02-05T02:59:35 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsTest.SwitchStorageDefinitionsTest(NVRsTest.java:1833)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="859" started-at="2020-02-05T02:59:35 IST" finished-at="2020-02-05T02:59:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsTest status=FAILURE method=NVRsTest.SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53462" started-at="2020-02-05T03:11:36 IST" finished-at="2020-02-05T03:12:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByButtonTest" duration-ms="30063" started-at="2020-02-05T03:12:30 IST" finished-at="2020-02-05T03:13:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="672" started-at="2020-02-05T03:13:00 IST" finished-at="2020-02-05T03:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByButtonTest status=SUCCESS method=NVRsTest.RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="endReport" is-config="true" duration-ms="38" started-at="2020-02-05T03:13:00 IST" finished-at="2020-02-05T03:13:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsTest -->
      <class name="testcases.WebPagesTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T20:37:24 IST" finished-at="2020-02-04T20:37:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104283" started-at="2020-02-04T20:37:24 IST" finished-at="2020-02-04T20:39:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="AddNewWebPageTest" duration-ms="904" started-at="2020-02-04T20:39:08 IST" finished-at="2020-02-04T20:39:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewWebPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="556" started-at="2020-02-04T20:39:09 IST" finished-at="2020-02-04T20:39:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewWebPageTest status=SUCCESS method=WebPagesTest.AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="100487" started-at="2020-02-04T20:54:38 IST" finished-at="2020-02-04T20:56:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByButtonTest" duration-ms="30725" started-at="2020-02-04T20:56:18 IST" finished-at="2020-02-04T20:56:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-04T20:56:49 IST" finished-at="2020-02-04T20:56:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByButtonTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="115928" started-at="2020-02-04T20:56:49 IST" finished-at="2020-02-04T20:58:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByIconTest" duration-ms="32222" started-at="2020-02-04T20:58:45 IST" finished-at="2020-02-04T20:59:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="1015" started-at="2020-02-04T20:59:17 IST" finished-at="2020-02-04T20:59:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByIconTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="121240" started-at="2020-02-04T21:58:14 IST" finished-at="2020-02-04T22:00:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="FAIL" signature="ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeNameTest" duration-ms="33956" started-at="2020-02-04T22:00:15 IST" finished-at="2020-02-04T22:00:49 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //div[@class='ui-grid-cell-contents ng-binding ng-scope'][contains(text(), 'NewName8974')] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:40308/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 4063e7e4-e024-4be4-a97e-f087a8d7dbd8
*** Element info: {Using=xpath, value=//div[@class='ui-grid-cell-contents ng-binding ng-scope'][contains(text(), 'NewName8974')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //div[@class='ui-grid-cell-contents ng-binding ng-scope'][contains(text(), 'NewName8974')] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:40308/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 4063e7e4-e024-4be4-a97e-f087a8d7dbd8
*** Element info: {Using=xpath, value=//div[@class='ui-grid-cell-contents ng-binding ng-scope'][contains(text(), 'NewName8974')]}
at sun.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at pageObjects.WebPagesPage.ClickOnWebPageByName(WebPagesPage.java:180)
at testcases.WebPagesTest.ChangeNameTest(WebPagesTest.java:262)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="800" started-at="2020-02-04T22:00:49 IST" finished-at="2020-02-04T22:00:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=FAILURE method=WebPagesTest.ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="100847" started-at="2020-02-04T22:23:22 IST" finished-at="2020-02-04T22:25:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeStatusTest" duration-ms="23038" started-at="2020-02-04T22:25:03 IST" finished-at="2020-02-04T22:25:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="991" started-at="2020-02-04T22:25:26 IST" finished-at="2020-02-04T22:25:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeStatusTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104563" started-at="2020-02-04T22:25:27 IST" finished-at="2020-02-04T22:27:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueBySpinnerTest" duration-ms="79679" started-at="2020-02-04T22:27:12 IST" finished-at="2020-02-04T22:28:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueBySpinnerTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="923" started-at="2020-02-04T22:28:31 IST" finished-at="2020-02-04T22:28:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueBySpinnerTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="180127" started-at="2020-02-04T22:28:32 IST" finished-at="2020-02-04T22:31:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueTest" duration-ms="31384" started-at="2020-02-04T22:31:32 IST" finished-at="2020-02-04T22:32:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-04T22:32:04 IST" finished-at="2020-02-04T22:32:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="103392" started-at="2020-02-04T22:51:30 IST" finished-at="2020-02-04T22:53:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRemarksTest" duration-ms="31079" started-at="2020-02-04T22:53:13 IST" finished-at="2020-02-04T22:53:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-04T22:53:45 IST" finished-at="2020-02-04T22:53:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=WebPagesTest.ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="103145" started-at="2020-02-04T22:58:58 IST" finished-at="2020-02-04T23:00:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeURLTest" duration-ms="28955" started-at="2020-02-04T23:00:41 IST" finished-at="2020-02-04T23:01:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="642" started-at="2020-02-04T23:01:10 IST" finished-at="2020-02-04T23:01:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeURLTest status=SUCCESS method=WebPagesTest.ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="103004" started-at="2020-02-05T00:12:36 IST" finished-at="2020-02-05T00:14:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeVisibilityStatusTest" duration-ms="31788" started-at="2020-02-05T00:14:19 IST" finished-at="2020-02-05T00:14:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="774" started-at="2020-02-05T00:14:51 IST" finished-at="2020-02-05T00:14:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=WebPagesTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="120790" started-at="2020-02-05T01:03:02 IST" finished-at="2020-02-05T01:05:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteURLTest" duration-ms="9323" started-at="2020-02-05T01:05:03 IST" finished-at="2020-02-05T01:05:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="862" started-at="2020-02-05T01:05:13 IST" finished-at="2020-02-05T01:05:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteURLTest status=SUCCESS method=WebPagesTest.DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="106115" started-at="2020-02-05T01:18:31 IST" finished-at="2020-02-05T01:20:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByButtonTest" duration-ms="49845" started-at="2020-02-05T01:20:17 IST" finished-at="2020-02-05T01:21:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="780" started-at="2020-02-05T01:21:07 IST" finished-at="2020-02-05T01:21:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByButtonTest status=SUCCESS method=WebPagesTest.DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="102616" started-at="2020-02-05T01:21:08 IST" finished-at="2020-02-05T01:22:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByIconTest" duration-ms="51040" started-at="2020-02-05T01:22:50 IST" finished-at="2020-02-05T01:23:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="707" started-at="2020-02-05T01:23:41 IST" finished-at="2020-02-05T01:23:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByIconTest status=SUCCESS method=WebPagesTest.DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="177975" started-at="2020-02-05T03:01:22 IST" finished-at="2020-02-05T03:04:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="WebPagesFilterTest" duration-ms="4480" started-at="2020-02-05T03:04:20 IST" finished-at="2020-02-05T03:04:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebPagesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="879" started-at="2020-02-05T03:04:24 IST" finished-at="2020-02-05T03:04:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebPagesFilterTest status=SUCCESS method=WebPagesTest.WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="endReport" is-config="true" duration-ms="85" started-at="2020-02-05T03:04:25 IST" finished-at="2020-02-05T03:04:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.WebPagesTest -->
      <class name="testcases.GroupsHierarchyTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="startReport" is-config="true" duration-ms="117" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T19:27:21 IST" finished-at="2020-02-04T19:27:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="115837" started-at="2020-02-04T19:27:21 IST" finished-at="2020-02-04T19:29:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddGroupAndCheckInMonitoringTest" duration-ms="64683" started-at="2020-02-04T19:29:17 IST" finished-at="2020-02-04T19:30:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="545" started-at="2020-02-04T19:30:22 IST" finished-at="2020-02-04T19:30:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="104157" started-at="2020-02-04T20:39:10 IST" finished-at="2020-02-04T20:40:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddSubGroupTest" duration-ms="22186" started-at="2020-02-04T20:40:54 IST" finished-at="2020-02-04T20:41:16 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.GroupsHierarchyTest.AddSubGroupTest(GroupsHierarchyTest.java:828)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddSubGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="1056" started-at="2020-02-04T20:41:16 IST" finished-at="2020-02-04T20:41:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddSubGroupTest status=FAILURE method=GroupsHierarchyTest.AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103433" started-at="2020-02-05T00:43:37 IST" finished-at="2020-02-05T00:45:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndCheckInMonitoringTest" duration-ms="79506" started-at="2020-02-05T00:45:20 IST" finished-at="2020-02-05T00:46:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="831" started-at="2020-02-05T00:46:40 IST" finished-at="2020-02-05T00:46:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103762" started-at="2020-02-05T00:46:41 IST" finished-at="2020-02-05T00:48:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndPressNoTest" duration-ms="30077" started-at="2020-02-05T00:48:24 IST" finished-at="2020-02-05T00:48:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="757" started-at="2020-02-05T00:48:55 IST" finished-at="2020-02-05T00:48:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndPressNoTest status=SUCCESS method=GroupsHierarchyTest.DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="110951" started-at="2020-02-05T00:50:15 IST" finished-at="2020-02-05T00:52:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCancelRemovingTest" duration-ms="5283" started-at="2020-02-05T00:52:06 IST" finished-at="2020-02-05T00:52:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCancelRemovingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="772" started-at="2020-02-05T00:52:11 IST" finished-at="2020-02-05T00:52:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCancelRemovingTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="102625" started-at="2020-02-05T00:52:12 IST" finished-at="2020-02-05T00:53:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCheckInMonitoringTest" duration-ms="4163" started-at="2020-02-05T00:53:54 IST" finished-at="2020-02-05T00:53:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="707" started-at="2020-02-05T00:53:59 IST" finished-at="2020-02-05T00:53:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="118756" started-at="2020-02-05T01:23:42 IST" finished-at="2020-02-05T01:25:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DragResourceToGroupTest" duration-ms="49353" started-at="2020-02-05T01:25:41 IST" finished-at="2020-02-05T01:26:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DragResourceToGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="1016" started-at="2020-02-05T01:26:30 IST" finished-at="2020-02-05T01:26:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DragResourceToGroupTest status=SUCCESS method=GroupsHierarchyTest.DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="158121" started-at="2020-02-05T01:51:49 IST" finished-at="2020-02-05T01:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndCheckInMonitoringTest" duration-ms="47925" started-at="2020-02-05T01:54:27 IST" finished-at="2020-02-05T01:55:15 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest(GroupsHierarchyTest.java:309)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="743" started-at="2020-02-05T01:55:15 IST" finished-at="2020-02-05T01:55:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndCheckInMonitoringTest status=FAILURE method=GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="111868" started-at="2020-02-05T01:55:16 IST" finished-at="2020-02-05T01:57:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndClickCancelIconTest" duration-ms="3633" started-at="2020-02-05T01:57:07 IST" finished-at="2020-02-05T01:57:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndClickCancelIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="1012" started-at="2020-02-05T01:57:11 IST" finished-at="2020-02-05T01:57:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndClickCancelIconTest status=SUCCESS method=GroupsHierarchyTest.RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="115164" started-at="2020-02-05T01:57:12 IST" finished-at="2020-02-05T01:59:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="ResourcesFilterTest" duration-ms="3786" started-at="2020-02-05T01:59:07 IST" finished-at="2020-02-05T01:59:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourcesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="743" started-at="2020-02-05T01:59:11 IST" finished-at="2020-02-05T01:59:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourcesFilterTest status=SUCCESS method=GroupsHierarchyTest.ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="endReport" is-config="true" duration-ms="37" started-at="2020-02-05T01:59:12 IST" finished-at="2020-02-05T01:59:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.GroupsHierarchyTest -->
      <class name="testcases.WebPagesElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T20:34:36 IST" finished-at="2020-02-04T20:34:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="165107" started-at="2020-02-04T20:34:36 IST" finished-at="2020-02-04T20:37:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="AddNewWebPageExitAndSaveTest()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="AddNewWebPageExitAndSaveTest" duration-ms="1023" started-at="2020-02-04T20:37:21 IST" finished-at="2020-02-04T20:37:23 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testcases.WebPagesElementsTest.AddNewWebPageExitAndSaveTest(WebPagesElementsTest.java:171)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewWebPageExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="afterMethod" is-config="true" duration-ms="872" started-at="2020-02-04T20:37:23 IST" finished-at="2020-02-04T20:37:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewWebPageExitAndSaveTest status=FAILURE method=WebPagesElementsTest.AddNewWebPageExitAndSaveTest()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="endReport" is-config="true" duration-ms="543" started-at="2020-02-04T20:37:23 IST" finished-at="2020-02-04T20:37:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.WebPagesElementsTest -->
      <class name="testcases.NVRsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T21:03:34 IST" finished-at="2020-02-04T21:03:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56200" started-at="2020-02-04T21:03:34 IST" finished-at="2020-02-04T21:04:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitCancelUnsavedChangesTest" duration-ms="180979" started-at="2020-02-04T21:04:30 IST" finished-at="2020-02-04T21:07:31 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP23] but found [IP23]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP23] but found [IP23]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest(NVRsElementsTest.java:377)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="927" started-at="2020-02-04T21:07:31 IST" finished-at="2020-02-04T21:07:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="70201" started-at="2020-02-04T21:07:32 IST" finished-at="2020-02-04T21:08:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitPressDontSaveUnsavedChangesTest" duration-ms="69905" started-at="2020-02-04T21:08:42 IST" finished-at="2020-02-04T21:09:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-04T21:09:52 IST" finished-at="2020-02-04T21:09:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54963" started-at="2020-02-04T21:09:53 IST" finished-at="2020-02-04T21:10:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitPressSaveUnsavedChangesTest" duration-ms="232393" started-at="2020-02-04T21:10:48 IST" finished-at="2020-02-04T21:14:40 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testcases.NVRsElementsTest.ChangeIPAdressExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:472)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="698" started-at="2020-02-04T21:14:40 IST" finished-at="2020-02-04T21:14:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeIPAdressExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56362" started-at="2020-02-04T21:14:41 IST" finished-at="2020-02-04T21:15:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressPressCancelExitTest" duration-ms="183722" started-at="2020-02-04T21:15:37 IST" finished-at="2020-02-04T21:18:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressPressCancelExitTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="823" started-at="2020-02-04T21:18:41 IST" finished-at="2020-02-04T21:18:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressPressCancelExitTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="71263" started-at="2020-02-04T21:45:54 IST" finished-at="2020-02-04T21:47:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressDontSaveUnsavedChangesTest" duration-ms="67624" started-at="2020-02-04T21:47:06 IST" finished-at="2020-02-04T21:48:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="922" started-at="2020-02-04T21:48:13 IST" finished-at="2020-02-04T21:48:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="70831" started-at="2020-02-04T21:48:14 IST" finished-at="2020-02-04T21:49:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressSaveUnsavedChangesTest" duration-ms="251613" started-at="2020-02-04T21:49:25 IST" finished-at="2020-02-04T21:53:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-04T21:53:37 IST" finished-at="2020-02-04T21:53:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55607" started-at="2020-02-04T21:53:37 IST" finished-at="2020-02-04T21:54:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNamePressCancelTest" duration-ms="10998" started-at="2020-02-04T21:54:33 IST" finished-at="2020-02-04T21:54:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNamePressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="649" started-at="2020-02-04T21:54:44 IST" finished-at="2020-02-04T21:54:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNamePressCancelTest status=SUCCESS method=NVRsElementsTest.ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55289" started-at="2020-02-04T22:10:59 IST" finished-at="2020-02-04T22:11:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitCancelUnsavedChangesTest" duration-ms="28166" started-at="2020-02-04T22:11:54 IST" finished-at="2020-02-04T22:12:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-04T22:12:22 IST" finished-at="2020-02-04T22:12:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54125" started-at="2020-02-04T22:12:23 IST" finished-at="2020-02-04T22:13:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressDontSaveUnsavedChangesTest" duration-ms="237485" started-at="2020-02-04T22:13:17 IST" finished-at="2020-02-04T22:17:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-04T22:17:15 IST" finished-at="2020-02-04T22:17:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54918" started-at="2020-02-04T22:17:15 IST" finished-at="2020-02-04T22:18:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressSaveUnsavedChangesTest" duration-ms="235996" started-at="2020-02-04T22:18:10 IST" finished-at="2020-02-04T22:22:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="733" started-at="2020-02-04T22:22:06 IST" finished-at="2020-02-04T22:22:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53025" started-at="2020-02-04T22:22:07 IST" finished-at="2020-02-04T22:23:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortPressCancelTest" duration-ms="21628" started-at="2020-02-04T22:23:00 IST" finished-at="2020-02-04T22:23:21 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [80] but found [288]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [80] but found [288]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangePortPressCancelTest(NVRsElementsTest.java:557)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="751" started-at="2020-02-04T22:23:21 IST" finished-at="2020-02-04T22:23:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortPressCancelTest status=FAILURE method=NVRsElementsTest.ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54673" started-at="2020-02-04T23:01:11 IST" finished-at="2020-02-04T23:02:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameAndPressCancel" duration-ms="184987" started-at="2020-02-04T23:02:06 IST" finished-at="2020-02-04T23:05:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameAndPressCancel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1022" started-at="2020-02-04T23:05:11 IST" finished-at="2020-02-04T23:05:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameAndPressCancel status=SUCCESS method=NVRsElementsTest.ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54945" started-at="2020-02-04T23:05:12 IST" finished-at="2020-02-04T23:06:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitCancelUnsavedChangesTest" duration-ms="224356" started-at="2020-02-04T23:06:06 IST" finished-at="2020-02-04T23:09:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="958" started-at="2020-02-04T23:09:51 IST" finished-at="2020-02-04T23:09:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54362" started-at="2020-02-04T23:09:52 IST" finished-at="2020-02-04T23:10:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressDontSaveUnsavedChangesTest" duration-ms="236168" started-at="2020-02-04T23:10:46 IST" finished-at="2020-02-04T23:14:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-04T23:14:42 IST" finished-at="2020-02-04T23:14:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69574" started-at="2020-02-04T23:14:43 IST" finished-at="2020-02-04T23:15:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressSaveUnsavedChangesTest" duration-ms="231255" started-at="2020-02-04T23:15:52 IST" finished-at="2020-02-04T23:19:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [UserName] but found [ADMIN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [UserName] but found [ADMIN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangeUserNameExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:1083)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="747" started-at="2020-02-04T23:19:44 IST" finished-at="2020-02-04T23:19:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54395" started-at="2020-02-05T00:14:52 IST" finished-at="2020-02-05T00:15:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeIPAdressTest" duration-ms="54713" started-at="2020-02-05T00:15:46 IST" finished-at="2020-02-05T00:16:41 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest(NVRsElementsTest.java:522)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="873" started-at="2020-02-05T00:16:41 IST" finished-at="2020-02-05T00:16:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeIPAdressTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55116" started-at="2020-02-05T00:16:42 IST" finished-at="2020-02-05T00:17:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeNameTest" duration-ms="52705" started-at="2020-02-05T00:17:37 IST" finished-at="2020-02-05T00:18:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="877" started-at="2020-02-05T00:18:30 IST" finished-at="2020-02-05T00:18:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeNameTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53540" started-at="2020-02-05T00:18:31 IST" finished-at="2020-02-05T00:19:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePasswordTest" duration-ms="55777" started-at="2020-02-05T00:19:24 IST" finished-at="2020-02-05T00:20:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [UserName] but found [ADMIN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [UserName] but found [ADMIN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangePasswordTest(NVRsElementsTest.java:1175)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePasswordTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1180" started-at="2020-02-05T00:20:20 IST" finished-at="2020-02-05T00:20:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePasswordTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="51802" started-at="2020-02-05T00:20:21 IST" finished-at="2020-02-05T00:21:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePortTest" duration-ms="69950" started-at="2020-02-05T00:21:13 IST" finished-at="2020-02-05T00:22:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="718" started-at="2020-02-05T00:22:23 IST" finished-at="2020-02-05T00:22:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePortTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54386" started-at="2020-02-05T00:22:23 IST" finished-at="2020-02-05T00:23:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeUserNameTest" duration-ms="54808" started-at="2020-02-05T00:23:18 IST" finished-at="2020-02-05T00:24:13 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest(NVRsElementsTest.java:1126)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeUserNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="986" started-at="2020-02-05T00:24:13 IST" finished-at="2020-02-05T00:24:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeUserNameTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53537" started-at="2020-02-05T00:32:48 IST" finished-at="2020-02-05T00:33:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="DecreasePortExitCancelUnsavedChangesTest" duration-ms="11720" started-at="2020-02-05T00:33:41 IST" finished-at="2020-02-05T00:33:53 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest(NVRsElementsTest.java:811)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DecreasePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1007" started-at="2020-02-05T00:33:53 IST" finished-at="2020-02-05T00:33:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DecreasePortExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="72572" started-at="2020-02-05T01:32:21 IST" finished-at="2020-02-05T01:33:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="IncreasePortAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="IncreasePortAndPressCancel" duration-ms="130606" started-at="2020-02-05T01:33:33 IST" finished-at="2020-02-05T01:35:44 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for value to contain "false". Current value: "null" (tried for 15 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:38110/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 668c70db-3b20-4d68-aafc-9388b5359558]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for value to contain "false". Current value: "null" (tried for 15 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:38110/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 668c70db-3b20-4d68-aafc-9388b5359558
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at pageObjects.NVRsPage.CancelChangesButton(NVRsPage.java:432)
at testcases.NVRsElementsTest.IncreasePortAndPressCancel(NVRsElementsTest.java:776)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IncreasePortAndPressCancel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="983" started-at="2020-02-05T01:35:44 IST" finished-at="2020-02-05T01:35:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IncreasePortAndPressCancel status=FAILURE method=NVRsElementsTest.IncreasePortAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54145" started-at="2020-02-05T01:35:45 IST" finished-at="2020-02-05T01:36:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="IncreasePortExitPressDontSaveUnsavedChangesTest" duration-ms="184990" started-at="2020-02-05T01:36:39 IST" finished-at="2020-02-05T01:39:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest(NVRsElementsTest.java:851)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IncreasePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="656" started-at="2020-02-05T01:39:44 IST" finished-at="2020-02-05T01:39:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IncreasePortExitPressDontSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53769" started-at="2020-02-05T02:50:49 IST" finished-at="2020-02-05T02:51:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsAndPressCancelTest" duration-ms="25879" started-at="2020-02-05T02:51:42 IST" finished-at="2020-02-05T02:52:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="793" started-at="2020-02-05T02:52:08 IST" finished-at="2020-02-05T02:52:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="68577" started-at="2020-02-05T02:52:09 IST" finished-at="2020-02-05T02:53:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressCancelTest" duration-ms="41876" started-at="2020-02-05T02:53:18 IST" finished-at="2020-02-05T02:53:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1002" started-at="2020-02-05T02:53:59 IST" finished-at="2020-02-05T02:54:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="68361" started-at="2020-02-05T02:54:00 IST" finished-at="2020-02-05T02:55:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest" duration-ms="63276" started-at="2020-02-05T02:55:09 IST" finished-at="2020-02-05T02:56:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressDontSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="535" started-at="2020-02-05T02:56:12 IST" finished-at="2020-02-05T02:56:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressDontSaveButtonTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="68091" started-at="2020-02-05T02:56:13 IST" finished-at="2020-02-05T02:57:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressSaveButtonTest" duration-ms="64711" started-at="2020-02-05T02:57:21 IST" finished-at="2020-02-05T02:58:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1005" started-at="2020-02-05T02:58:25 IST" finished-at="2020-02-05T02:58:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressSaveButtonTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54329" started-at="2020-02-05T03:06:13 IST" finished-at="2020-02-05T03:07:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="uDecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="uDecreasePortExitPressSaveUnsavedChangesTest" duration-ms="187314" started-at="2020-02-05T03:07:07 IST" finished-at="2020-02-05T03:10:14 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.uDecreasePortExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:901)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uDecreasePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="861" started-at="2020-02-05T03:10:14 IST" finished-at="2020-02-05T03:10:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=uDecreasePortExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.uDecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56031" started-at="2020-02-05T03:10:15 IST" finished-at="2020-02-05T03:11:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitCancelUnsavedChangesExitCancelTest" duration-ms="24184" started-at="2020-02-05T03:11:11 IST" finished-at="2020-02-05T03:11:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitCancelUnsavedChangesExitCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="577" started-at="2020-02-05T03:11:35 IST" finished-at="2020-02-05T03:11:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitCancelUnsavedChangesExitCancelTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="endReport" is-config="true" duration-ms="38" started-at="2020-02-05T03:11:36 IST" finished-at="2020-02-05T03:11:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsElementsTest -->
      <class name="testcases.ViewsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="startReport" is-config="true" duration-ms="4" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T01:59:12 IST" finished-at="2020-02-05T01:59:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="167450" started-at="2020-02-05T01:59:12 IST" finished-at="2020-02-05T02:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewTest" duration-ms="15802" started-at="2020-02-05T02:01:59 IST" finished-at="2020-02-05T02:02:15 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
at java.util.ArrayList.rangeCheck(ArrayList.java:657)
at java.util.ArrayList.get(ArrayList.java:433)
at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy15.get(Unknown Source)
at pageObjects.ViewsPage.GetResourcesIDByIndex(ViewsPage.java:319)
at testcases.ViewsTest.AddNewViewTest(ViewsTest.java:173)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="1072" started-at="2020-02-05T02:02:15 IST" finished-at="2020-02-05T02:02:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewTest status=FAILURE method=ViewsTest.AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="182361" started-at="2020-02-05T02:02:16 IST" finished-at="2020-02-05T02:05:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewWithoutLayoutTest" duration-ms="11757" started-at="2020-02-05T02:05:19 IST" finished-at="2020-02-05T02:05:30 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
at java.util.ArrayList.rangeCheck(ArrayList.java:657)
at java.util.ArrayList.get(ArrayList.java:433)
at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy15.get(Unknown Source)
at pageObjects.ViewsPage.GetResourcesIDByIndex(ViewsPage.java:319)
at testcases.ViewsTest.AddNewViewWithoutLayoutTest(ViewsTest.java:613)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="891" started-at="2020-02-05T02:05:30 IST" finished-at="2020-02-05T02:05:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutTest status=FAILURE method=ViewsTest.AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="165077" started-at="2020-02-05T02:05:31 IST" finished-at="2020-02-05T02:08:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelDeletingViewByButton" duration-ms="29513" started-at="2020-02-05T02:08:16 IST" finished-at="2020-02-05T02:08:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelDeletingViewByButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="542" started-at="2020-02-05T02:08:46 IST" finished-at="2020-02-05T02:08:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelDeletingViewByButton status=SUCCESS method=ViewsTest.CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="117407" started-at="2020-02-05T02:08:46 IST" finished-at="2020-02-05T02:10:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelRemovingViewByIconTest" duration-ms="33101" started-at="2020-02-05T02:10:44 IST" finished-at="2020-02-05T02:11:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovingViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="771" started-at="2020-02-05T02:11:17 IST" finished-at="2020-02-05T02:11:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovingViewByIconTest status=SUCCESS method=ViewsTest.CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="166224" started-at="2020-02-05T02:11:18 IST" finished-at="2020-02-05T02:14:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeLayoutTest" duration-ms="85792" started-at="2020-02-05T02:14:04 IST" finished-at="2020-02-05T02:15:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="566" started-at="2020-02-05T02:15:30 IST" finished-at="2020-02-05T02:15:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutTest status=SUCCESS method=ViewsTest.ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="106650" started-at="2020-02-05T02:15:30 IST" finished-at="2020-02-05T02:17:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeNameTest" duration-ms="76378" started-at="2020-02-05T02:17:17 IST" finished-at="2020-02-05T02:18:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="663" started-at="2020-02-05T02:18:33 IST" finished-at="2020-02-05T02:18:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=ViewsTest.ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="128607" started-at="2020-02-05T02:18:34 IST" finished-at="2020-02-05T02:20:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeRemarksTest" duration-ms="75173" started-at="2020-02-05T02:20:42 IST" finished-at="2020-02-05T02:21:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="817" started-at="2020-02-05T02:21:58 IST" finished-at="2020-02-05T02:21:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ViewsTest.ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="129747" started-at="2020-02-05T02:21:58 IST" finished-at="2020-02-05T02:24:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeVisibilityStatusTest" duration-ms="73685" started-at="2020-02-05T02:24:08 IST" finished-at="2020-02-05T02:25:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="848" started-at="2020-02-05T02:25:22 IST" finished-at="2020-02-05T02:25:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ViewsTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="122030" started-at="2020-02-05T02:25:23 IST" finished-at="2020-02-05T02:27:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewAndDragResourceTest" duration-ms="76376" started-at="2020-02-05T02:27:25 IST" finished-at="2020-02-05T02:28:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndDragResourceTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="961" started-at="2020-02-05T02:28:41 IST" finished-at="2020-02-05T02:28:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndDragResourceTest status=SUCCESS method=ViewsTest.ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="131304" started-at="2020-02-05T02:28:42 IST" finished-at="2020-02-05T02:30:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewTest" duration-ms="73273" started-at="2020-02-05T02:30:53 IST" finished-at="2020-02-05T02:32:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="725" started-at="2020-02-05T02:32:07 IST" finished-at="2020-02-05T02:32:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewTest status=SUCCESS method=ViewsTest.ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="120718" started-at="2020-02-05T02:32:07 IST" finished-at="2020-02-05T02:34:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByButtonTest" duration-ms="43420" started-at="2020-02-05T02:34:08 IST" finished-at="2020-02-05T02:34:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="549" started-at="2020-02-05T02:34:52 IST" finished-at="2020-02-05T02:34:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByButtonTest status=SUCCESS method=ViewsTest.DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="166938" started-at="2020-02-05T02:34:52 IST" finished-at="2020-02-05T02:37:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByIconTest" duration-ms="42582" started-at="2020-02-05T02:37:39 IST" finished-at="2020-02-05T02:38:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-05T02:38:22 IST" finished-at="2020-02-05T02:38:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByIconTest status=SUCCESS method=ViewsTest.DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="165169" started-at="2020-02-05T02:38:22 IST" finished-at="2020-02-05T02:41:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ResourceFilterTest" duration-ms="11541" started-at="2020-02-05T02:41:07 IST" finished-at="2020-02-05T02:41:19 IST">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 0, Size: 0]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
at java.util.ArrayList.rangeCheck(ArrayList.java:657)
at java.util.ArrayList.get(ArrayList.java:433)
at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
at com.sun.proxy.$Proxy15.get(Unknown Source)
at pageObjects.ViewsPage.GetResourcesNameByIndex(ViewsPage.java:328)
at testcases.ViewsTest.ResourceFilterTest(ViewsTest.java:461)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="1086" started-at="2020-02-05T02:41:19 IST" finished-at="2020-02-05T02:41:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourceFilterTest status=FAILURE method=ViewsTest.ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="103066" started-at="2020-02-05T02:59:35 IST" finished-at="2020-02-05T03:01:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ViewsFilterTest" duration-ms="2425" started-at="2020-02-05T03:01:19 IST" finished-at="2020-02-05T03:01:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewsFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="592" started-at="2020-02-05T03:01:21 IST" finished-at="2020-02-05T03:01:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewsFilterTest status=SUCCESS method=ViewsTest.ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="endReport" is-config="true" duration-ms="54" started-at="2020-02-05T03:01:22 IST" finished-at="2020-02-05T03:01:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsTest -->
      <class name="testcases.ViewsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T20:12:38 IST" finished-at="2020-02-04T20:12:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="121967" started-at="2020-02-04T20:12:38 IST" finished-at="2020-02-04T20:14:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewAndPressCancelTest" duration-ms="11379" started-at="2020-02-04T20:14:40 IST" finished-at="2020-02-04T20:14:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="857" started-at="2020-02-04T20:14:51 IST" finished-at="2020-02-04T20:14:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="119815" started-at="2020-02-04T20:14:52 IST" finished-at="2020-02-04T20:16:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressCancelTest" duration-ms="21224" started-at="2020-02-04T20:16:52 IST" finished-at="2020-02-04T20:17:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="1038" started-at="2020-02-04T20:17:13 IST" finished-at="2020-02-04T20:17:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107443" started-at="2020-02-04T20:17:14 IST" finished-at="2020-02-04T20:19:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressDoNotSaveTest" duration-ms="29557" started-at="2020-02-04T20:19:02 IST" finished-at="2020-02-04T20:19:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="543" started-at="2020-02-04T20:19:31 IST" finished-at="2020-02-04T20:19:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107993" started-at="2020-02-04T20:19:32 IST" finished-at="2020-02-04T20:21:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressSaveTest" duration-ms="29595" started-at="2020-02-04T20:21:20 IST" finished-at="2020-02-04T20:21:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="1035" started-at="2020-02-04T20:21:49 IST" finished-at="2020-02-04T20:21:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="115592" started-at="2020-02-04T20:21:50 IST" finished-at="2020-02-04T20:23:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndCancelTest" duration-ms="19826" started-at="2020-02-04T20:23:46 IST" finished-at="2020-02-04T20:24:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="699" started-at="2020-02-04T20:24:06 IST" finished-at="2020-02-04T20:24:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="106027" started-at="2020-02-04T20:24:07 IST" finished-at="2020-02-04T20:25:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndDoNotSaveTest" duration-ms="25588" started-at="2020-02-04T20:25:53 IST" finished-at="2020-02-04T20:26:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="642" started-at="2020-02-04T20:26:18 IST" finished-at="2020-02-04T20:26:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="112112" started-at="2020-02-04T20:26:19 IST" finished-at="2020-02-04T20:28:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndSaveTest" duration-ms="5101" started-at="2020-02-04T20:28:11 IST" finished-at="2020-02-04T20:28:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="736" started-at="2020-02-04T20:28:16 IST" finished-at="2020-02-04T20:28:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105109" started-at="2020-02-04T20:28:17 IST" finished-at="2020-02-04T20:30:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndCancelTest" duration-ms="17215" started-at="2020-02-04T20:30:02 IST" finished-at="2020-02-04T20:30:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="846" started-at="2020-02-04T20:30:19 IST" finished-at="2020-02-04T20:30:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105796" started-at="2020-02-04T20:30:20 IST" finished-at="2020-02-04T20:32:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest" duration-ms="24344" started-at="2020-02-04T20:32:06 IST" finished-at="2020-02-04T20:32:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="542" started-at="2020-02-04T20:32:30 IST" finished-at="2020-02-04T20:32:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107409" started-at="2020-02-04T20:32:31 IST" finished-at="2020-02-04T20:34:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndSaveTest" duration-ms="17712" started-at="2020-02-04T20:34:18 IST" finished-at="2020-02-04T20:34:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="639" started-at="2020-02-04T20:34:36 IST" finished-at="2020-02-04T20:34:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="119786" started-at="2020-02-04T21:18:42 IST" finished-at="2020-02-04T21:20:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutAndPressCancelTest" duration-ms="15133" started-at="2020-02-04T21:20:41 IST" finished-at="2020-02-04T21:20:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testcases.ViewsElementsTest.ChangeLayoutAndPressCancelTest(ViewsElementsTest.java:1320)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="695" started-at="2020-02-04T21:20:56 IST" finished-at="2020-02-04T21:20:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutAndPressCancelTest status=FAILURE method=ViewsElementsTest.ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="124194" started-at="2020-02-04T21:20:57 IST" finished-at="2020-02-04T21:23:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressCancelTest" duration-ms="31996" started-at="2020-02-04T21:23:01 IST" finished-at="2020-02-04T21:23:33 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [36] but found [6]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [36] but found [6]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutExitAndPressCancelTest(ViewsElementsTest.java:1403)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="759" started-at="2020-02-04T21:23:33 IST" finished-at="2020-02-04T21:23:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressCancelTest status=FAILURE method=ViewsElementsTest.ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107261" started-at="2020-02-04T21:23:34 IST" finished-at="2020-02-04T21:25:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressDontSaveTest" duration-ms="39211" started-at="2020-02-04T21:25:21 IST" finished-at="2020-02-04T21:26:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressDontSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="629" started-at="2020-02-04T21:26:01 IST" finished-at="2020-02-04T21:26:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressDontSaveTest status=SUCCESS method=ViewsElementsTest.ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="106732" started-at="2020-02-04T21:26:01 IST" finished-at="2020-02-04T21:27:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressSaveTest" duration-ms="39051" started-at="2020-02-04T21:27:48 IST" finished-at="2020-02-04T21:28:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [4]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutExitAndPressSaveTest(ViewsElementsTest.java:1560)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="910" started-at="2020-02-04T21:28:27 IST" finished-at="2020-02-04T21:28:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressSaveTest status=FAILURE method=ViewsElementsTest.ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="122591" started-at="2020-02-04T21:30:28 IST" finished-at="2020-02-04T21:32:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameAndPressCancelTest" duration-ms="8539" started-at="2020-02-04T21:32:30 IST" finished-at="2020-02-04T21:32:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="1022" started-at="2020-02-04T21:32:39 IST" finished-at="2020-02-04T21:32:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104686" started-at="2020-02-04T21:36:59 IST" finished-at="2020-02-04T21:38:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressCancelTest" duration-ms="21508" started-at="2020-02-04T21:38:44 IST" finished-at="2020-02-04T21:39:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="1031" started-at="2020-02-04T21:39:05 IST" finished-at="2020-02-04T21:39:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105839" started-at="2020-02-04T21:39:06 IST" finished-at="2020-02-04T21:40:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressDoNotSaveTest" duration-ms="26208" started-at="2020-02-04T21:40:52 IST" finished-at="2020-02-04T21:41:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="641" started-at="2020-02-04T21:41:18 IST" finished-at="2020-02-04T21:41:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107129" started-at="2020-02-04T21:41:19 IST" finished-at="2020-02-04T21:43:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressSaveTest" duration-ms="24109" started-at="2020-02-04T21:43:06 IST" finished-at="2020-02-04T21:43:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="827" started-at="2020-02-04T21:43:30 IST" finished-at="2020-02-04T21:43:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104031" started-at="2020-02-04T22:33:55 IST" finished-at="2020-02-04T22:35:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksAndPressCancelTest" duration-ms="7327" started-at="2020-02-04T22:35:39 IST" finished-at="2020-02-04T22:35:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="639" started-at="2020-02-04T22:35:46 IST" finished-at="2020-02-04T22:35:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="119594" started-at="2020-02-04T22:40:02 IST" finished-at="2020-02-04T22:42:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressCancelTest" duration-ms="19841" started-at="2020-02-04T22:42:01 IST" finished-at="2020-02-04T22:42:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="574" started-at="2020-02-04T22:42:21 IST" finished-at="2020-02-04T22:42:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="121373" started-at="2020-02-04T22:42:22 IST" finished-at="2020-02-04T22:44:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressDoNotSaveTest" duration-ms="27788" started-at="2020-02-04T22:44:23 IST" finished-at="2020-02-04T22:44:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="545" started-at="2020-02-04T22:44:51 IST" finished-at="2020-02-04T22:44:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103169" started-at="2020-02-04T22:44:52 IST" finished-at="2020-02-04T22:46:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressSaveTest" duration-ms="27736" started-at="2020-02-04T22:46:35 IST" finished-at="2020-02-04T22:47:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="659" started-at="2020-02-04T22:47:03 IST" finished-at="2020-02-04T22:47:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105531" started-at="2020-02-04T23:54:01 IST" finished-at="2020-02-04T23:55:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusAndPressCancelTest" duration-ms="7385" started-at="2020-02-04T23:55:46 IST" finished-at="2020-02-04T23:55:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="948" started-at="2020-02-04T23:55:54 IST" finished-at="2020-02-04T23:55:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="122452" started-at="2020-02-05T00:00:27 IST" finished-at="2020-02-05T00:02:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressCancelTest" duration-ms="19344" started-at="2020-02-05T00:02:29 IST" finished-at="2020-02-05T00:02:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T00:02:49 IST" finished-at="2020-02-05T00:02:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="122496" started-at="2020-02-05T00:02:49 IST" finished-at="2020-02-05T00:04:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressDoNotSaveTest" duration-ms="25972" started-at="2020-02-05T00:04:52 IST" finished-at="2020-02-05T00:05:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-05T00:05:18 IST" finished-at="2020-02-05T00:05:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="122865" started-at="2020-02-05T00:05:18 IST" finished-at="2020-02-05T00:07:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressSaveTest" duration-ms="24818" started-at="2020-02-05T00:07:21 IST" finished-at="2020-02-05T00:07:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="539" started-at="2020-02-05T00:07:46 IST" finished-at="2020-02-05T00:07:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103325" started-at="2020-02-05T00:24:14 IST" finished-at="2020-02-05T00:25:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewAndPressCancelTest" duration-ms="12645" started-at="2020-02-05T00:25:57 IST" finished-at="2020-02-05T00:26:10 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ClearViewAndPressCancelTest(ViewsElementsTest.java:1107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="997" started-at="2020-02-05T00:26:10 IST" finished-at="2020-02-05T00:26:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndPressCancelTest status=FAILURE method=ViewsElementsTest.ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103607" started-at="2020-02-05T00:26:11 IST" finished-at="2020-02-05T00:27:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressCancelTest" duration-ms="32950" started-at="2020-02-05T00:27:54 IST" finished-at="2020-02-05T00:28:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="667" started-at="2020-02-05T00:28:27 IST" finished-at="2020-02-05T00:28:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105769" started-at="2020-02-05T00:28:28 IST" finished-at="2020-02-05T00:30:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressDoNotSaveTest" duration-ms="32763" started-at="2020-02-05T00:30:14 IST" finished-at="2020-02-05T00:30:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="872" started-at="2020-02-05T00:30:46 IST" finished-at="2020-02-05T00:30:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105354" started-at="2020-02-05T00:30:47 IST" finished-at="2020-02-05T00:32:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressSaveTest" duration-ms="14295" started-at="2020-02-05T00:32:33 IST" finished-at="2020-02-05T00:32:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="644" started-at="2020-02-05T00:32:47 IST" finished-at="2020-02-05T00:32:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="endReport" is-config="true" duration-ms="169" started-at="2020-02-05T00:32:48 IST" finished-at="2020-02-05T00:32:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsElementsTest -->
      <class name="testcases.MonitoringView">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="startReport" is-config="true" duration-ms="3" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="setup" is-config="true" duration-ms="65972" started-at="2020-02-05T03:04:25 IST" finished-at="2020-02-05T03:05:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="GoToViewPage" is-config="true" duration-ms="11698" started-at="2020-02-05T03:05:31 IST" finished-at="2020-02-05T03:05:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="addViewTest" duration-ms="24901" started-at="2020-02-05T03:05:43 IST" finished-at="2020-02-05T03:06:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addViewTest -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="endReport" is-config="true" duration-ms="5195" started-at="2020-02-05T03:06:08 IST" finished-at="2020-02-05T03:06:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-05T03:06:08 IST" finished-at="2020-02-05T03:06:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addViewTest status=SUCCESS method=MonitoringView.addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.MonitoringView -->
      <class name="testcases.ToursElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-04T19:25:34 IST" finished-at="2020-02-04T19:25:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-04T19:50:15 IST" finished-at="2020-02-04T19:50:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105530" started-at="2020-02-04T19:50:15 IST" finished-at="2020-02-04T19:52:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="FAIL" signature="AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourAndCancelTest" duration-ms="11695" started-at="2020-02-04T19:52:01 IST" finished-at="2020-02-04T19:52:13 IST">
          <exception class="org.openqa.selenium.ElementNotVisibleException">
            <message>
              <![CDATA[Cannot click on element (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:46803/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: d6350fda-3250-4cd6-8831-478583fe6d06]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotVisibleException: Cannot click on element (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:46803/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: d6350fda-3250-4cd6-8831-478583fe6d06
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy14.click(Unknown Source)
at Utilities.Page.ClickOnElement(Page.java:752)
at pageObjects.ToursPage.PressCancelButton(ToursPage.java:204)
at testcases.ToursElementsTest.AddNewTourAndCancelTest(ToursElementsTest.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotVisibleException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1096" started-at="2020-02-04T19:52:13 IST" finished-at="2020-02-04T19:52:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourAndCancelTest status=FAILURE method=ToursElementsTest.AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104576" started-at="2020-02-04T19:52:14 IST" finished-at="2020-02-04T19:53:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndCancelTest" duration-ms="28368" started-at="2020-02-04T19:53:58 IST" finished-at="2020-02-04T19:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="705" started-at="2020-02-04T19:54:27 IST" finished-at="2020-02-04T19:54:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102798" started-at="2020-02-04T19:54:27 IST" finished-at="2020-02-04T19:56:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndDoNotSaveTest" duration-ms="39931" started-at="2020-02-04T19:56:10 IST" finished-at="2020-02-04T19:56:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="983" started-at="2020-02-04T19:56:50 IST" finished-at="2020-02-04T19:56:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="119735" started-at="2020-02-04T19:56:51 IST" finished-at="2020-02-04T19:58:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndSaveTest" duration-ms="35032" started-at="2020-02-04T19:58:51 IST" finished-at="2020-02-04T19:59:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="833" started-at="2020-02-04T19:59:26 IST" finished-at="2020-02-04T19:59:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104241" started-at="2020-02-04T20:04:29 IST" finished-at="2020-02-04T20:06:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewAndCancelTest" duration-ms="3309" started-at="2020-02-04T20:06:13 IST" finished-at="2020-02-04T20:06:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1032" started-at="2020-02-04T20:06:17 IST" finished-at="2020-02-04T20:06:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103492" started-at="2020-02-04T20:06:18 IST" finished-at="2020-02-04T20:08:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndCancelTest" duration-ms="17799" started-at="2020-02-04T20:08:01 IST" finished-at="2020-02-04T20:08:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="960" started-at="2020-02-04T20:08:19 IST" finished-at="2020-02-04T20:08:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="106772" started-at="2020-02-04T20:08:20 IST" finished-at="2020-02-04T20:10:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndDoNotSaveTest" duration-ms="24547" started-at="2020-02-04T20:10:07 IST" finished-at="2020-02-04T20:10:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="666" started-at="2020-02-04T20:10:31 IST" finished-at="2020-02-04T20:10:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="120094" started-at="2020-02-04T20:10:32 IST" finished-at="2020-02-04T20:12:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndSaveTest" duration-ms="4977" started-at="2020-02-04T20:12:32 IST" finished-at="2020-02-04T20:12:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="959" started-at="2020-02-04T20:12:37 IST" finished-at="2020-02-04T20:12:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104140" started-at="2020-02-04T20:41:17 IST" finished-at="2020-02-04T20:43:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewAndCancelTest" duration-ms="7774" started-at="2020-02-04T20:43:01 IST" finished-at="2020-02-04T20:43:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="617" started-at="2020-02-04T20:43:09 IST" finished-at="2020-02-04T20:43:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105327" started-at="2020-02-04T20:43:10 IST" finished-at="2020-02-04T20:44:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndCancelTest" duration-ms="23135" started-at="2020-02-04T20:44:55 IST" finished-at="2020-02-04T20:45:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="752" started-at="2020-02-04T20:45:18 IST" finished-at="2020-02-04T20:45:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="113604" started-at="2020-02-04T20:45:19 IST" finished-at="2020-02-04T20:47:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndDoNotSaveTest" duration-ms="32337" started-at="2020-02-04T20:47:12 IST" finished-at="2020-02-04T20:47:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="841" started-at="2020-02-04T20:47:45 IST" finished-at="2020-02-04T20:47:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103432" started-at="2020-02-04T20:47:46 IST" finished-at="2020-02-04T20:49:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndSaveTest" duration-ms="37553" started-at="2020-02-04T20:49:29 IST" finished-at="2020-02-04T20:50:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="747" started-at="2020-02-04T20:50:07 IST" finished-at="2020-02-04T20:50:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="113476" started-at="2020-02-04T21:28:28 IST" finished-at="2020-02-04T21:30:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameAndCancelTest" duration-ms="5517" started-at="2020-02-04T21:30:21 IST" finished-at="2020-02-04T21:30:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="904" started-at="2020-02-04T21:30:27 IST" finished-at="2020-02-04T21:30:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104531" started-at="2020-02-04T21:32:40 IST" finished-at="2020-02-04T21:34:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndCancelTest" duration-ms="19895" started-at="2020-02-04T21:34:24 IST" finished-at="2020-02-04T21:34:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="541" started-at="2020-02-04T21:34:44 IST" finished-at="2020-02-04T21:34:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102259" started-at="2020-02-04T21:34:45 IST" finished-at="2020-02-04T21:36:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndDoNotSaveTest" duration-ms="31215" started-at="2020-02-04T21:36:27 IST" finished-at="2020-02-04T21:36:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="828" started-at="2020-02-04T21:36:58 IST" finished-at="2020-02-04T21:36:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="115002" started-at="2020-02-04T21:43:31 IST" finished-at="2020-02-04T21:45:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndSaveTest" duration-ms="27625" started-at="2020-02-04T21:45:26 IST" finished-at="2020-02-04T21:45:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-04T21:45:54 IST" finished-at="2020-02-04T21:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104102" started-at="2020-02-04T22:32:04 IST" finished-at="2020-02-04T22:33:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksAndCancelTest" duration-ms="6156" started-at="2020-02-04T22:33:48 IST" finished-at="2020-02-04T22:33:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="543" started-at="2020-02-04T22:33:54 IST" finished-at="2020-02-04T22:33:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103591" started-at="2020-02-04T22:35:47 IST" finished-at="2020-02-04T22:37:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndCancelTest" duration-ms="20523" started-at="2020-02-04T22:37:31 IST" finished-at="2020-02-04T22:37:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="774" started-at="2020-02-04T22:37:51 IST" finished-at="2020-02-04T22:37:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101526" started-at="2020-02-04T22:37:52 IST" finished-at="2020-02-04T22:39:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndDoNotSaveTest" duration-ms="27952" started-at="2020-02-04T22:39:33 IST" finished-at="2020-02-04T22:40:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="544" started-at="2020-02-04T22:40:01 IST" finished-at="2020-02-04T22:40:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103826" started-at="2020-02-04T22:47:03 IST" finished-at="2020-02-04T22:48:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndSaveTest" duration-ms="31132" started-at="2020-02-04T22:48:47 IST" finished-at="2020-02-04T22:49:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="539" started-at="2020-02-04T22:49:18 IST" finished-at="2020-02-04T22:49:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103588" started-at="2020-02-04T23:24:05 IST" finished-at="2020-02-04T23:25:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeAndCancelTest" duration-ms="5252" started-at="2020-02-04T23:25:49 IST" finished-at="2020-02-04T23:25:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="900" started-at="2020-02-04T23:25:54 IST" finished-at="2020-02-04T23:25:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="106851" started-at="2020-02-04T23:25:55 IST" finished-at="2020-02-04T23:27:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersAndCancelTest" duration-ms="10818" started-at="2020-02-04T23:27:42 IST" finished-at="2020-02-04T23:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="572" started-at="2020-02-04T23:27:52 IST" finished-at="2020-02-04T23:27:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101825" started-at="2020-02-04T23:27:53 IST" finished-at="2020-02-04T23:29:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndCancelTest" duration-ms="40133" started-at="2020-02-04T23:29:35 IST" finished-at="2020-02-04T23:30:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="633" started-at="2020-02-04T23:30:15 IST" finished-at="2020-02-04T23:30:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102768" started-at="2020-02-04T23:30:16 IST" finished-at="2020-02-04T23:31:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndDoNotSaveTest" duration-ms="48188" started-at="2020-02-04T23:31:58 IST" finished-at="2020-02-04T23:32:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-04T23:32:47 IST" finished-at="2020-02-04T23:32:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105379" started-at="2020-02-04T23:32:47 IST" finished-at="2020-02-04T23:34:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndSaveTest" duration-ms="45888" started-at="2020-02-04T23:34:32 IST" finished-at="2020-02-04T23:35:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-04T23:35:18 IST" finished-at="2020-02-04T23:35:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103686" started-at="2020-02-04T23:37:59 IST" finished-at="2020-02-04T23:39:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndCancelTest" duration-ms="21701" started-at="2020-02-04T23:39:43 IST" finished-at="2020-02-04T23:40:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="766" started-at="2020-02-04T23:40:05 IST" finished-at="2020-02-04T23:40:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100860" started-at="2020-02-04T23:40:06 IST" finished-at="2020-02-04T23:41:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndDoNotSaveTest" duration-ms="29127" started-at="2020-02-04T23:41:46 IST" finished-at="2020-02-04T23:42:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="970" started-at="2020-02-04T23:42:15 IST" finished-at="2020-02-04T23:42:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102454" started-at="2020-02-04T23:42:16 IST" finished-at="2020-02-04T23:43:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="FAIL" signature="ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndSaveTest" duration-ms="29648" started-at="2020-02-04T23:43:59 IST" finished-at="2020-02-04T23:44:29 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [81917] but found [8191]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [81917] but found [8191]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.ToursElementsTest.ChangeViewTimeExitAndSaveTest(ToursElementsTest.java:1549)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1163" started-at="2020-02-04T23:44:29 IST" finished-at="2020-02-04T23:44:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndSaveTest status=FAILURE method=ToursElementsTest.ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="119992" started-at="2020-02-04T23:51:55 IST" finished-at="2020-02-04T23:53:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusAndCancelTest" duration-ms="4458" started-at="2020-02-04T23:53:55 IST" finished-at="2020-02-04T23:54:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1000" started-at="2020-02-04T23:54:00 IST" finished-at="2020-02-04T23:54:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104701" started-at="2020-02-04T23:55:55 IST" finished-at="2020-02-04T23:57:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndCancelTest" duration-ms="20548" started-at="2020-02-04T23:57:39 IST" finished-at="2020-02-04T23:58:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="541" started-at="2020-02-04T23:58:00 IST" finished-at="2020-02-04T23:58:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="120417" started-at="2020-02-04T23:58:00 IST" finished-at="2020-02-05T00:00:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndDoNotSaveTest" duration-ms="25435" started-at="2020-02-05T00:00:01 IST" finished-at="2020-02-05T00:00:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-05T00:00:26 IST" finished-at="2020-02-05T00:00:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="122525" started-at="2020-02-05T00:07:46 IST" finished-at="2020-02-05T00:09:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndSaveTest" duration-ms="28607" started-at="2020-02-05T00:09:49 IST" finished-at="2020-02-05T00:10:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T00:10:17 IST" finished-at="2020-02-05T00:10:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105085" started-at="2020-02-05T00:33:54 IST" finished-at="2020-02-05T00:35:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsAndCancelTest" duration-ms="5775" started-at="2020-02-05T00:35:39 IST" finished-at="2020-02-05T00:35:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="866" started-at="2020-02-05T00:35:45 IST" finished-at="2020-02-05T00:35:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104394" started-at="2020-02-05T00:35:46 IST" finished-at="2020-02-05T00:37:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndCancelTest" duration-ms="23440" started-at="2020-02-05T00:37:30 IST" finished-at="2020-02-05T00:37:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="691" started-at="2020-02-05T00:37:54 IST" finished-at="2020-02-05T00:37:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103835" started-at="2020-02-05T00:37:54 IST" finished-at="2020-02-05T00:39:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndDoNotSaveTest" duration-ms="22180" started-at="2020-02-05T00:39:38 IST" finished-at="2020-02-05T00:40:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="575" started-at="2020-02-05T00:40:00 IST" finished-at="2020-02-05T00:40:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103912" started-at="2020-02-05T00:40:01 IST" finished-at="2020-02-05T00:41:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndSaveTest" duration-ms="4078" started-at="2020-02-05T00:41:45 IST" finished-at="2020-02-05T00:41:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="709" started-at="2020-02-05T00:41:49 IST" finished-at="2020-02-05T00:41:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="118617" started-at="2020-02-05T01:05:13 IST" finished-at="2020-02-05T01:07:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewAndCancelTest" duration-ms="3311" started-at="2020-02-05T01:07:12 IST" finished-at="2020-02-05T01:07:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-05T01:07:15 IST" finished-at="2020-02-05T01:07:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105269" started-at="2020-02-05T01:07:16 IST" finished-at="2020-02-05T01:09:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndCancelTest" duration-ms="17392" started-at="2020-02-05T01:09:01 IST" finished-at="2020-02-05T01:09:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="620" started-at="2020-02-05T01:09:19 IST" finished-at="2020-02-05T01:09:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102451" started-at="2020-02-05T01:09:19 IST" finished-at="2020-02-05T01:11:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndDoNotSaveTest" duration-ms="20490" started-at="2020-02-05T01:11:02 IST" finished-at="2020-02-05T01:11:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1015" started-at="2020-02-05T01:11:22 IST" finished-at="2020-02-05T01:11:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="119243" started-at="2020-02-05T01:11:23 IST" finished-at="2020-02-05T01:13:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndSaveTest" duration-ms="23412" started-at="2020-02-05T01:13:22 IST" finished-at="2020-02-05T01:13:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-05T01:13:46 IST" finished-at="2020-02-05T01:13:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="endReport" is-config="true" duration-ms="78" started-at="2020-02-05T01:13:46 IST" finished-at="2020-02-05T01:13:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursElementsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
