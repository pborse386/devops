<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="26" ignored="69" total="261" passed="166">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="26909588" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T21:05:39 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="26909588" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T21:05:39 IST">
      <class name="testcases.ToursTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursTest@12405818]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursTest@12405818]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T14:08:03 IST" finished-at="2020-02-06T14:08:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99294" started-at="2020-02-06T14:08:03 IST" finished-at="2020-02-06T14:09:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourTest" duration-ms="10953" started-at="2020-02-06T14:09:42 IST" finished-at="2020-02-06T14:09:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="618" started-at="2020-02-06T14:09:53 IST" finished-at="2020-02-06T14:09:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourTest status=SUCCESS method=ToursTest.AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="98405" started-at="2020-02-06T14:09:54 IST" finished-at="2020-02-06T14:11:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourWithAllParametersTest" duration-ms="113209" started-at="2020-02-06T14:11:32 IST" finished-at="2020-02-06T14:13:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithAllParametersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="704" started-at="2020-02-06T14:13:26 IST" finished-at="2020-02-06T14:13:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithAllParametersTest status=SUCCESS method=ToursTest.AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="98746" started-at="2020-02-06T14:54:26 IST" finished-at="2020-02-06T14:56:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddViewTest" duration-ms="34154" started-at="2020-02-06T14:56:05 IST" finished-at="2020-02-06T14:56:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="943" started-at="2020-02-06T14:56:39 IST" finished-at="2020-02-06T14:56:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewTest status=SUCCESS method=ToursTest.AddViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="117975" started-at="2020-02-06T15:58:45 IST" finished-at="2020-02-06T16:00:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeNameTest" duration-ms="38083" started-at="2020-02-06T16:00:43 IST" finished-at="2020-02-06T16:01:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T16:01:21 IST" finished-at="2020-02-06T16:01:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=ToursTest.ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="121375" started-at="2020-02-06T16:04:04 IST" finished-at="2020-02-06T16:06:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeOrderForViewTest" duration-ms="3225" started-at="2020-02-06T16:06:05 IST" finished-at="2020-02-06T16:06:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeOrderForViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="839" started-at="2020-02-06T16:06:08 IST" finished-at="2020-02-06T16:06:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeOrderForViewTest status=SUCCESS method=ToursTest.ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="100396" started-at="2020-02-06T16:50:20 IST" finished-at="2020-02-06T16:52:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeRemarksTest" duration-ms="28208" started-at="2020-02-06T16:52:01 IST" finished-at="2020-02-06T16:52:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="578" started-at="2020-02-06T16:52:29 IST" finished-at="2020-02-06T16:52:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ToursTest.ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="104103" started-at="2020-02-06T17:36:25 IST" finished-at="2020-02-06T17:38:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeBySpinnersTest" duration-ms="45458" started-at="2020-02-06T17:38:09 IST" finished-at="2020-02-06T17:38:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="623" started-at="2020-02-06T17:38:54 IST" finished-at="2020-02-06T17:38:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersTest status=SUCCESS method=ToursTest.ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="100949" started-at="2020-02-06T17:45:05 IST" finished-at="2020-02-06T17:46:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeTest" duration-ms="6138" started-at="2020-02-06T17:46:46 IST" finished-at="2020-02-06T17:46:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-06T17:46:52 IST" finished-at="2020-02-06T17:46:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeTest status=SUCCESS method=ToursTest.ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99368" started-at="2020-02-06T17:46:53 IST" finished-at="2020-02-06T17:48:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToLessThanMinValueTest" duration-ms="6078" started-at="2020-02-06T17:48:32 IST" finished-at="2020-02-06T17:48:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToLessThanMinValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="678" started-at="2020-02-06T17:48:38 IST" finished-at="2020-02-06T17:48:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToLessThanMinValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="102581" started-at="2020-02-06T17:48:39 IST" finished-at="2020-02-06T17:50:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToMoreThanMaxValueTest" duration-ms="6180" started-at="2020-02-06T17:50:21 IST" finished-at="2020-02-06T17:50:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToMoreThanMaxValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="999" started-at="2020-02-06T17:50:27 IST" finished-at="2020-02-06T17:50:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToMoreThanMaxValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="111012" started-at="2020-02-06T18:08:34 IST" finished-at="2020-02-06T18:10:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeVisibilityStatusTest" duration-ms="5854" started-at="2020-02-06T18:10:25 IST" finished-at="2020-02-06T18:10:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="737" started-at="2020-02-06T18:10:31 IST" finished-at="2020-02-06T18:10:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ToursTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103476" started-at="2020-02-06T18:45:54 IST" finished-at="2020-02-06T18:47:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteAllViewsTest" duration-ms="1847" started-at="2020-02-06T18:47:38 IST" finished-at="2020-02-06T18:47:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="588" started-at="2020-02-06T18:47:40 IST" finished-at="2020-02-06T18:47:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsTest status=SUCCESS method=ToursTest.DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="102113" started-at="2020-02-06T18:58:57 IST" finished-at="2020-02-06T19:00:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonAndPressNoTest" duration-ms="25831" started-at="2020-02-06T19:00:39 IST" finished-at="2020-02-06T19:01:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T19:01:05 IST" finished-at="2020-02-06T19:01:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99783" started-at="2020-02-06T19:01:05 IST" finished-at="2020-02-06T19:02:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonTest" duration-ms="29275" started-at="2020-02-06T19:02:45 IST" finished-at="2020-02-06T19:03:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T19:03:15 IST" finished-at="2020-02-06T19:03:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonTest status=SUCCESS method=ToursTest.DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="100846" started-at="2020-02-06T19:03:15 IST" finished-at="2020-02-06T19:04:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconAndPressNoTest" duration-ms="18457" started-at="2020-02-06T19:04:56 IST" finished-at="2020-02-06T19:05:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="917" started-at="2020-02-06T19:05:14 IST" finished-at="2020-02-06T19:05:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99027" started-at="2020-02-06T19:05:15 IST" finished-at="2020-02-06T19:06:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconTest" duration-ms="29296" started-at="2020-02-06T19:06:54 IST" finished-at="2020-02-06T19:07:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T19:07:24 IST" finished-at="2020-02-06T19:07:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconTest status=SUCCESS method=ToursTest.DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103314" started-at="2020-02-06T19:16:36 IST" finished-at="2020-02-06T19:18:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewFromViewsPageTest" duration-ms="58987" started-at="2020-02-06T19:18:19 IST" finished-at="2020-02-06T19:19:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewFromViewsPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="527" started-at="2020-02-06T19:19:18 IST" finished-at="2020-02-06T19:19:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewFromViewsPageTest status=SUCCESS method=ToursTest.DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99861" started-at="2020-02-06T19:19:19 IST" finished-at="2020-02-06T19:20:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewTest" duration-ms="35521" started-at="2020-02-06T19:20:59 IST" finished-at="2020-02-06T19:21:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T19:21:34 IST" finished-at="2020-02-06T19:21:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewTest status=SUCCESS method=ToursTest.DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99853" started-at="2020-02-06T19:31:33 IST" finished-at="2020-02-06T19:33:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterToursTest" duration-ms="2686" started-at="2020-02-06T19:33:13 IST" finished-at="2020-02-06T19:33:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterToursTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="958" started-at="2020-02-06T19:33:15 IST" finished-at="2020-02-06T19:33:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterToursTest status=SUCCESS method=ToursTest.FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="99182" started-at="2020-02-06T19:33:16 IST" finished-at="2020-02-06T19:34:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterViewsTest" duration-ms="4800" started-at="2020-02-06T19:34:55 IST" finished-at="2020-02-06T19:35:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="717" started-at="2020-02-06T19:35:00 IST" finished-at="2020-02-06T19:35:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterViewsTest status=SUCCESS method=ToursTest.FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="162678" started-at="2020-02-06T19:47:07 IST" finished-at="2020-02-06T19:49:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="NewTourWithEmptyViewTest" duration-ms="17992" started-at="2020-02-06T19:49:49 IST" finished-at="2020-02-06T19:50:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewTourWithEmptyViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T19:50:07 IST" finished-at="2020-02-06T19:50:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewTourWithEmptyViewTest status=SUCCESS method=ToursTest.NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursTest@12405818]" name="endReport" is-config="true" duration-ms="66" started-at="2020-02-06T19:50:08 IST" finished-at="2020-02-06T19:50:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursTest -->
      <class name="testcases.NVRsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="setup" is-config="true" duration-ms="3" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51349" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:38:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddAlreadyUsedNVRManuallyTest" duration-ms="14992" started-at="2020-02-06T13:38:01 IST" finished-at="2020-02-06T13:38:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddAlreadyUsedNVRManuallyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="978" started-at="2020-02-06T13:38:16 IST" finished-at="2020-02-06T13:38:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddAlreadyUsedNVRManuallyTest status=SUCCESS method=NVRsTest.AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="68410" started-at="2020-02-06T13:41:13 IST" finished-at="2020-02-06T13:42:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndCheckStatusVTest" duration-ms="40734" started-at="2020-02-06T13:42:21 IST" finished-at="2020-02-06T13:43:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndCheckStatusVTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T13:43:02 IST" finished-at="2020-02-06T13:43:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndCheckStatusVTest status=SUCCESS method=NVRsTest.AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="67315" started-at="2020-02-06T13:43:02 IST" finished-at="2020-02-06T13:44:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndPressApplyTest" duration-ms="37629" started-at="2020-02-06T13:44:10 IST" finished-at="2020-02-06T13:44:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T13:44:47 IST" finished-at="2020-02-06T13:44:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="50545" started-at="2020-02-06T13:44:48 IST" finished-at="2020-02-06T13:45:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressApplyTest" duration-ms="34860" started-at="2020-02-06T13:45:38 IST" finished-at="2020-02-06T13:46:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="543" started-at="2020-02-06T13:46:13 IST" finished-at="2020-02-06T13:46:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="49584" started-at="2020-02-06T13:46:14 IST" finished-at="2020-02-06T13:47:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressCloseTest" duration-ms="16067" started-at="2020-02-06T13:47:03 IST" finished-at="2020-02-06T13:47:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressCloseTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T13:47:19 IST" finished-at="2020-02-06T13:47:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressCloseTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53620" started-at="2020-02-06T13:47:20 IST" finished-at="2020-02-06T13:48:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndSwitchONSecuredTest" duration-ms="50020" started-at="2020-02-06T13:48:13 IST" finished-at="2020-02-06T13:49:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="845" started-at="2020-02-06T13:49:03 IST" finished-at="2020-02-06T13:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndSwitchONSecuredTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51655" started-at="2020-02-06T13:49:04 IST" finished-at="2020-02-06T13:49:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyCheckStatusTest" duration-ms="30494" started-at="2020-02-06T13:49:56 IST" finished-at="2020-02-06T13:50:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T13:50:26 IST" finished-at="2020-02-06T13:50:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyCheckStatusTest status=SUCCESS method=NVRsTest.AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="50586" started-at="2020-02-06T13:50:27 IST" finished-at="2020-02-06T13:51:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest" duration-ms="89599" started-at="2020-02-06T13:51:18 IST" finished-at="2020-02-06T13:52:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T13:52:47 IST" finished-at="2020-02-06T13:52:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest status=SUCCESS method=NVRsTest.AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53512" started-at="2020-02-06T13:52:48 IST" finished-at="2020-02-06T13:53:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortTest" duration-ms="197331" started-at="2020-02-06T13:53:41 IST" finished-at="2020-02-06T13:56:59 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Communication Failure] but found [Connecting...]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Communication Failure] but found [Connecting...]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyWithSecuredPortTest(NVRsTest.java:812)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="811" started-at="2020-02-06T13:56:59 IST" finished-at="2020-02-06T13:56:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortTest status=FAILURE method=NVRsTest.AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51800" started-at="2020-02-06T13:56:59 IST" finished-at="2020-02-06T13:57:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRWithSecuredPortTest" duration-ms="99295" started-at="2020-02-06T13:57:51 IST" finished-at="2020-02-06T13:59:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T13:59:30 IST" finished-at="2020-02-06T13:59:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRWithSecuredPortTest status=SUCCESS method=NVRsTest.AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51179" started-at="2020-02-06T14:56:40 IST" finished-at="2020-02-06T14:57:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByButtonTest" duration-ms="11373" started-at="2020-02-06T14:57:31 IST" finished-at="2020-02-06T14:57:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T14:57:42 IST" finished-at="2020-02-06T14:57:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByButtonTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="65920" started-at="2020-02-06T14:57:43 IST" finished-at="2020-02-06T14:58:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByIconTest" duration-ms="11523" started-at="2020-02-06T14:58:49 IST" finished-at="2020-02-06T14:59:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1031" started-at="2020-02-06T14:59:00 IST" finished-at="2020-02-06T14:59:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByIconTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="56450" started-at="2020-02-06T15:03:36 IST" finished-at="2020-02-06T15:04:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeIPAdressAndCheckStatusTest" duration-ms="9035" started-at="2020-02-06T15:04:32 IST" finished-at="2020-02-06T15:04:41 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP] but found [IP]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP] but found [IP]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeIPAdressAndCheckStatusTest(NVRsTest.java:1356)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="638" started-at="2020-02-06T15:04:41 IST" finished-at="2020-02-06T15:04:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="72905" started-at="2020-02-06T15:57:09 IST" finished-at="2020-02-06T15:58:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeNameTest" duration-ms="22835" started-at="2020-02-06T15:58:22 IST" finished-at="2020-02-06T15:58:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T15:58:44 IST" finished-at="2020-02-06T15:58:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=NVRsTest.ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55008" started-at="2020-02-06T16:06:09 IST" finished-at="2020-02-06T16:07:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePasswordToInvalidAndCheckStatusTest" duration-ms="193214" started-at="2020-02-06T16:07:04 IST" finished-at="2020-02-06T16:10:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePasswordToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="617" started-at="2020-02-06T16:10:17 IST" finished-at="2020-02-06T16:10:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePasswordToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51507" started-at="2020-02-06T16:10:18 IST" finished-at="2020-02-06T16:11:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePortAndCheckStatusTest" duration-ms="145396" started-at="2020-02-06T16:11:09 IST" finished-at="2020-02-06T16:13:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="628" started-at="2020-02-06T16:13:35 IST" finished-at="2020-02-06T16:13:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52821" started-at="2020-02-06T16:54:34 IST" finished-at="2020-02-06T16:55:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeSecuredAndCheckStatusTest" duration-ms="241527" started-at="2020-02-06T16:55:27 IST" finished-at="2020-02-06T16:59:28 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeSecuredAndCheckStatusTest(NVRsTest.java:1533)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeSecuredAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="927" started-at="2020-02-06T16:59:28 IST" finished-at="2020-02-06T16:59:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeSecuredAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="66358" started-at="2020-02-06T17:18:17 IST" finished-at="2020-02-06T17:19:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeUserNameToInvalidAndCheckStatusTest" duration-ms="186961" started-at="2020-02-06T17:19:24 IST" finished-at="2020-02-06T17:22:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="763" started-at="2020-02-06T17:22:31 IST" finished-at="2020-02-06T17:22:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52231" started-at="2020-02-06T18:52:48 IST" finished-at="2020-02-06T18:53:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest" duration-ms="21830" started-at="2020-02-06T18:53:40 IST" finished-at="2020-02-06T18:54:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T18:54:02 IST" finished-at="2020-02-06T18:54:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest status=SUCCESS method=NVRsTest.DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52306" started-at="2020-02-06T19:29:30 IST" finished-at="2020-02-06T19:30:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterDiscoveredNVRsTest" duration-ms="15441" started-at="2020-02-06T19:30:23 IST" finished-at="2020-02-06T19:30:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T19:30:38 IST" finished-at="2020-02-06T19:30:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterDiscoveredNVRsTest status=SUCCESS method=NVRsTest.FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="50431" started-at="2020-02-06T19:30:38 IST" finished-at="2020-02-06T19:31:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterNVRsTest" duration-ms="3219" started-at="2020-02-06T19:31:29 IST" finished-at="2020-02-06T19:31:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T19:31:32 IST" finished-at="2020-02-06T19:31:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterNVRsTest status=SUCCESS method=NVRsTest.FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55855" started-at="2020-02-06T19:38:45 IST" finished-at="2020-02-06T19:39:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidIPAdressInAddNVRManualyTest" duration-ms="20155" started-at="2020-02-06T19:39:41 IST" finished-at="2020-02-06T19:40:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidIPAdressInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T19:40:01 IST" finished-at="2020-02-06T19:40:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidIPAdressInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55270" started-at="2020-02-06T19:40:01 IST" finished-at="2020-02-06T19:40:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPasswordInAddNVRManualyTest" duration-ms="39763" started-at="2020-02-06T19:40:57 IST" finished-at="2020-02-06T19:41:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPasswordInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="658" started-at="2020-02-06T19:41:36 IST" finished-at="2020-02-06T19:41:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPasswordInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54562" started-at="2020-02-06T19:41:37 IST" finished-at="2020-02-06T19:42:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPortInAddNVRManualyTest" duration-ms="47909" started-at="2020-02-06T19:42:32 IST" finished-at="2020-02-06T19:43:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPortInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="861" started-at="2020-02-06T19:43:19 IST" finished-at="2020-02-06T19:43:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPortInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="57492" started-at="2020-02-06T19:43:20 IST" finished-at="2020-02-06T19:44:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidUserNameInAddNVRManualyTest" duration-ms="38000" started-at="2020-02-06T19:44:18 IST" finished-at="2020-02-06T19:44:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidUserNameInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="644" started-at="2020-02-06T19:44:56 IST" finished-at="2020-02-06T19:44:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidUserNameInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54481" started-at="2020-02-06T19:44:56 IST" finished-at="2020-02-06T19:45:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="MultipleNVRsAdditingTest" duration-ms="75156" started-at="2020-02-06T19:45:51 IST" finished-at="2020-02-06T19:47:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleNVRsAdditingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="668" started-at="2020-02-06T19:47:06 IST" finished-at="2020-02-06T19:47:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MultipleNVRsAdditingTest status=SUCCESS method=NVRsTest.MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54783" started-at="2020-02-06T19:50:08 IST" finished-at="2020-02-06T19:51:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByIconTest" duration-ms="21305" started-at="2020-02-06T19:51:03 IST" finished-at="2020-02-06T19:51:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="855" started-at="2020-02-06T19:51:24 IST" finished-at="2020-02-06T19:51:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByIconTest status=SUCCESS method=NVRsTest.RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="70796" started-at="2020-02-06T20:39:29 IST" finished-at="2020-02-06T20:40:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SelectNVRandPressCancelTest" duration-ms="24102" started-at="2020-02-06T20:40:40 IST" finished-at="2020-02-06T20:41:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectNVRandPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T20:41:04 IST" finished-at="2020-02-06T20:41:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectNVRandPressCancelTest status=SUCCESS method=NVRsTest.SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="68770" started-at="2020-02-06T20:41:05 IST" finished-at="2020-02-06T20:42:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingDiscoveredNVRsTest" duration-ms="20971" started-at="2020-02-06T20:42:14 IST" finished-at="2020-02-06T20:42:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="581" started-at="2020-02-06T20:42:35 IST" finished-at="2020-02-06T20:42:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingDiscoveredNVRsTest status=SUCCESS method=NVRsTest.SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="71876" started-at="2020-02-06T20:42:35 IST" finished-at="2020-02-06T20:43:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByIPAdressTest" duration-ms="115204" started-at="2020-02-06T20:43:47 IST" finished-at="2020-02-06T20:45:42 IST">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:37701/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: b27461fa-f68d-4136-b057-de9b80a0a441]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:37701/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: b27461fa-f68d-4136-b057-de9b80a0a441
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:537)
at Utilities.Page.JavaScriptClick(Page.java:757)
at pageObjects.NVRsPage.AddDiscoveredNVRs(NVRsPage.java:934)
at pageObjects.NVRsPage.IfNVRIsNotExistAddIt(NVRsPage.java:955)
at testcases.NVRsTest.SortingNVRsByIPAdressTest(NVRsTest.java:1226)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="3479" started-at="2020-02-06T20:45:42 IST" finished-at="2020-02-06T20:45:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByIPAdressTest status=FAILURE method=NVRsTest.SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55400" started-at="2020-02-06T20:45:46 IST" finished-at="2020-02-06T20:46:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByNameTest" duration-ms="41686" started-at="2020-02-06T20:46:41 IST" finished-at="2020-02-06T20:47:23 IST">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:15575/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: ba232456-6bd3-403d-92e7-f1e7dfe2392a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:15575/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: ba232456-6bd3-403d-92e7-f1e7dfe2392a
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:537)
at Utilities.Page.JavaScriptClick(Page.java:757)
at pageObjects.NVRsPage.AddDiscoveredNVRs(NVRsPage.java:934)
at pageObjects.NVRsPage.IfNVRIsNotExistAddIt(NVRsPage.java:955)
at testcases.NVRsTest.SortingNVRsByNameTest(NVRsTest.java:1250)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="3658" started-at="2020-02-06T20:47:23 IST" finished-at="2020-02-06T20:47:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByNameTest status=FAILURE method=NVRsTest.SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55772" started-at="2020-02-06T20:47:26 IST" finished-at="2020-02-06T20:48:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByVersionTest" duration-ms="7794" started-at="2020-02-06T20:48:22 IST" finished-at="2020-02-06T20:48:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByVersionTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="839" started-at="2020-02-06T20:48:30 IST" finished-at="2020-02-06T20:48:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByVersionTest status=SUCCESS method=NVRsTest.SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53869" started-at="2020-02-06T20:48:31 IST" finished-at="2020-02-06T20:49:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchOffStorageDefinitionsAndPressNoTest" duration-ms="19697" started-at="2020-02-06T20:49:25 IST" finished-at="2020-02-06T20:49:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsTest.SwitchOffStorageDefinitionsAndPressNoTest(NVRsTest.java:1775)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchOffStorageDefinitionsAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="734" started-at="2020-02-06T20:49:44 IST" finished-at="2020-02-06T20:49:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchOffStorageDefinitionsAndPressNoTest status=FAILURE method=NVRsTest.SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="56141" started-at="2020-02-06T20:56:06 IST" finished-at="2020-02-06T20:57:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchStorageDefinitionsTest" duration-ms="11086" started-at="2020-02-06T20:57:02 IST" finished-at="2020-02-06T20:57:13 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testcases.NVRsTest.SwitchStorageDefinitionsTest(NVRsTest.java:1837)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="838" started-at="2020-02-06T20:57:13 IST" finished-at="2020-02-06T20:57:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsTest status=FAILURE method=NVRsTest.SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53204" started-at="2020-02-06T21:04:15 IST" finished-at="2020-02-06T21:05:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByButtonTest" duration-ms="30291" started-at="2020-02-06T21:05:08 IST" finished-at="2020-02-06T21:05:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T21:05:38 IST" finished-at="2020-02-06T21:05:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByButtonTest status=SUCCESS method=NVRsTest.RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="endReport" is-config="true" duration-ms="61" started-at="2020-02-06T21:05:39 IST" finished-at="2020-02-06T21:05:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsTest -->
      <class name="testcases.WebPagesTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="97413" started-at="2020-02-06T14:41:51 IST" finished-at="2020-02-06T14:43:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T14:41:51 IST" finished-at="2020-02-06T14:41:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="AddNewWebPageTest" duration-ms="502" started-at="2020-02-06T14:43:28 IST" finished-at="2020-02-06T14:43:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewWebPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="671" started-at="2020-02-06T14:43:29 IST" finished-at="2020-02-06T14:43:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewWebPageTest status=SUCCESS method=WebPagesTest.AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104416" started-at="2020-02-06T14:59:01 IST" finished-at="2020-02-06T15:00:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByButtonTest" duration-ms="31728" started-at="2020-02-06T15:00:46 IST" finished-at="2020-02-06T15:01:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T15:01:18 IST" finished-at="2020-02-06T15:01:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByButtonTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104470" started-at="2020-02-06T15:01:18 IST" finished-at="2020-02-06T15:03:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByIconTest" duration-ms="32426" started-at="2020-02-06T15:03:03 IST" finished-at="2020-02-06T15:03:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="962" started-at="2020-02-06T15:03:35 IST" finished-at="2020-02-06T15:03:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByIconTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="122649" started-at="2020-02-06T16:01:22 IST" finished-at="2020-02-06T16:03:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeNameTest" duration-ms="38851" started-at="2020-02-06T16:03:24 IST" finished-at="2020-02-06T16:04:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T16:04:03 IST" finished-at="2020-02-06T16:04:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=WebPagesTest.ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="98623" started-at="2020-02-06T16:24:59 IST" finished-at="2020-02-06T16:26:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeStatusTest" duration-ms="25665" started-at="2020-02-06T16:26:38 IST" finished-at="2020-02-06T16:27:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="700" started-at="2020-02-06T16:27:03 IST" finished-at="2020-02-06T16:27:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeStatusTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="98874" started-at="2020-02-06T16:27:04 IST" finished-at="2020-02-06T16:28:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueBySpinnerTest" duration-ms="10946" started-at="2020-02-06T16:28:43 IST" finished-at="2020-02-06T16:28:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueBySpinnerTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T16:28:54 IST" finished-at="2020-02-06T16:28:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueBySpinnerTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="99024" started-at="2020-02-06T16:28:54 IST" finished-at="2020-02-06T16:30:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueTest" duration-ms="26363" started-at="2020-02-06T16:30:33 IST" finished-at="2020-02-06T16:31:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="580" started-at="2020-02-06T16:31:00 IST" finished-at="2020-02-06T16:31:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="98951" started-at="2020-02-06T16:52:29 IST" finished-at="2020-02-06T16:54:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRemarksTest" duration-ms="24947" started-at="2020-02-06T16:54:08 IST" finished-at="2020-02-06T16:54:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T16:54:33 IST" finished-at="2020-02-06T16:54:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=WebPagesTest.ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="95850" started-at="2020-02-06T16:59:29 IST" finished-at="2020-02-06T17:01:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeURLTest" duration-ms="22702" started-at="2020-02-06T17:01:05 IST" finished-at="2020-02-06T17:01:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="1041" started-at="2020-02-06T17:01:28 IST" finished-at="2020-02-06T17:01:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeURLTest status=SUCCESS method=WebPagesTest.ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104236" started-at="2020-02-06T18:10:32 IST" finished-at="2020-02-06T18:12:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeVisibilityStatusTest" duration-ms="43251" started-at="2020-02-06T18:12:16 IST" finished-at="2020-02-06T18:12:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T18:12:59 IST" finished-at="2020-02-06T18:13:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=WebPagesTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="96841" started-at="2020-02-06T19:07:24 IST" finished-at="2020-02-06T19:09:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteURLTest" duration-ms="6304" started-at="2020-02-06T19:09:01 IST" finished-at="2020-02-06T19:09:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="795" started-at="2020-02-06T19:09:07 IST" finished-at="2020-02-06T19:09:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteURLTest status=SUCCESS method=WebPagesTest.DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="114806" started-at="2020-02-06T19:21:35 IST" finished-at="2020-02-06T19:23:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByButtonTest" duration-ms="50688" started-at="2020-02-06T19:23:29 IST" finished-at="2020-02-06T19:24:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="870" started-at="2020-02-06T19:24:20 IST" finished-at="2020-02-06T19:24:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByButtonTest status=SUCCESS method=WebPagesTest.DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="116045" started-at="2020-02-06T19:24:21 IST" finished-at="2020-02-06T19:26:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByIconTest" duration-ms="45723" started-at="2020-02-06T19:26:17 IST" finished-at="2020-02-06T19:27:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="836" started-at="2020-02-06T19:27:03 IST" finished-at="2020-02-06T19:27:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByIconTest status=SUCCESS method=WebPagesTest.DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="117454" started-at="2020-02-06T20:59:00 IST" finished-at="2020-02-06T21:00:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="WebPagesFilterTest" duration-ms="5433" started-at="2020-02-06T21:00:57 IST" finished-at="2020-02-06T21:01:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebPagesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T21:01:03 IST" finished-at="2020-02-06T21:01:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebPagesFilterTest status=SUCCESS method=WebPagesTest.WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="endReport" is-config="true" duration-ms="71" started-at="2020-02-06T21:01:03 IST" finished-at="2020-02-06T21:01:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.WebPagesTest -->
      <class name="testcases.GroupsHierarchyTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="startReport" is-config="true" duration-ms="95" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-06T13:38:17 IST" finished-at="2020-02-06T13:38:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="112333" started-at="2020-02-06T13:38:17 IST" finished-at="2020-02-06T13:40:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddGroupAndCheckInMonitoringTest" duration-ms="62991" started-at="2020-02-06T13:40:09 IST" finished-at="2020-02-06T13:41:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="638" started-at="2020-02-06T13:41:12 IST" finished-at="2020-02-06T13:41:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="97739" started-at="2020-02-06T14:43:29 IST" finished-at="2020-02-06T14:45:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddSubGroupTest" duration-ms="36354" started-at="2020-02-06T14:45:07 IST" finished-at="2020-02-06T14:45:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddSubGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="634" started-at="2020-02-06T14:45:43 IST" finished-at="2020-02-06T14:45:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddSubGroupTest status=SUCCESS method=GroupsHierarchyTest.AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="97978" started-at="2020-02-06T18:47:40 IST" finished-at="2020-02-06T18:49:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndCheckInMonitoringTest" duration-ms="74735" started-at="2020-02-06T18:49:18 IST" finished-at="2020-02-06T18:50:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T18:50:33 IST" finished-at="2020-02-06T18:50:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="101308" started-at="2020-02-06T18:50:34 IST" finished-at="2020-02-06T18:52:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndPressNoTest" duration-ms="32266" started-at="2020-02-06T18:52:15 IST" finished-at="2020-02-06T18:52:47 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.GroupsHierarchyTest.DeleteGroupAndPressNoTest(GroupsHierarchyTest.java:500)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="924" started-at="2020-02-06T18:52:47 IST" finished-at="2020-02-06T18:52:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndPressNoTest status=FAILURE method=GroupsHierarchyTest.DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="111344" started-at="2020-02-06T18:54:03 IST" finished-at="2020-02-06T18:55:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCancelRemovingTest" duration-ms="19269" started-at="2020-02-06T18:55:54 IST" finished-at="2020-02-06T18:56:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCancelRemovingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="909" started-at="2020-02-06T18:56:13 IST" finished-at="2020-02-06T18:56:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCancelRemovingTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="114704" started-at="2020-02-06T18:56:14 IST" finished-at="2020-02-06T18:58:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCheckInMonitoringTest" duration-ms="47476" started-at="2020-02-06T18:58:09 IST" finished-at="2020-02-06T18:58:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="569" started-at="2020-02-06T18:58:56 IST" finished-at="2020-02-06T18:58:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="101625" started-at="2020-02-06T19:27:04 IST" finished-at="2020-02-06T19:28:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DragResourceToGroupTest" duration-ms="44435" started-at="2020-02-06T19:28:45 IST" finished-at="2020-02-06T19:29:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DragResourceToGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T19:29:30 IST" finished-at="2020-02-06T19:29:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DragResourceToGroupTest status=SUCCESS method=GroupsHierarchyTest.DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="108506" started-at="2020-02-06T19:51:25 IST" finished-at="2020-02-06T19:53:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndCheckInMonitoringTest" duration-ms="42672" started-at="2020-02-06T19:53:14 IST" finished-at="2020-02-06T19:53:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [false] but found [true]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertFalse(Assert.java:65)
at org.testng.Assert.assertFalse(Assert.java:75)
at testcases.GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest(GroupsHierarchyTest.java:307)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="607" started-at="2020-02-06T19:53:56 IST" finished-at="2020-02-06T19:53:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndCheckInMonitoringTest status=FAILURE method=GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103814" started-at="2020-02-06T19:53:57 IST" finished-at="2020-02-06T19:55:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndClickCancelIconTest" duration-ms="4626" started-at="2020-02-06T19:55:41 IST" finished-at="2020-02-06T19:55:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndClickCancelIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="548" started-at="2020-02-06T19:55:45 IST" finished-at="2020-02-06T19:55:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndClickCancelIconTest status=SUCCESS method=GroupsHierarchyTest.RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="159538" started-at="2020-02-06T19:55:46 IST" finished-at="2020-02-06T19:58:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="ResourcesFilterTest" duration-ms="4742" started-at="2020-02-06T19:58:25 IST" finished-at="2020-02-06T19:58:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourcesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T19:58:30 IST" finished-at="2020-02-06T19:58:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourcesFilterTest status=SUCCESS method=GroupsHierarchyTest.ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="endReport" is-config="true" duration-ms="55" started-at="2020-02-06T19:58:31 IST" finished-at="2020-02-06T19:58:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.GroupsHierarchyTest -->
      <class name="testcases.WebPagesElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
      </class> <!-- testcases.WebPagesElementsTest -->
      <class name="testcases.NVRsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T15:04:42 IST" finished-at="2020-02-06T15:04:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56526" started-at="2020-02-06T15:04:42 IST" finished-at="2020-02-06T15:05:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitCancelUnsavedChangesTest" duration-ms="189100" started-at="2020-02-06T15:05:39 IST" finished-at="2020-02-06T15:08:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP10] but found [IP10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP10] but found [IP10]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest(NVRsElementsTest.java:377)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="934" started-at="2020-02-06T15:08:48 IST" finished-at="2020-02-06T15:08:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="58103" started-at="2020-02-06T15:08:49 IST" finished-at="2020-02-06T15:09:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitPressDontSaveUnsavedChangesTest" duration-ms="243232" started-at="2020-02-06T15:09:47 IST" finished-at="2020-02-06T15:13:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T15:13:50 IST" finished-at="2020-02-06T15:13:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55904" started-at="2020-02-06T15:13:51 IST" finished-at="2020-02-06T15:14:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressPressCancelExitTest" duration-ms="208575" started-at="2020-02-06T15:14:46 IST" finished-at="2020-02-06T15:18:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressPressCancelExitTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T15:18:15 IST" finished-at="2020-02-06T15:18:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressPressCancelExitTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="57886" started-at="2020-02-06T15:48:56 IST" finished-at="2020-02-06T15:49:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressDontSaveUnsavedChangesTest" duration-ms="70105" started-at="2020-02-06T15:49:54 IST" finished-at="2020-02-06T15:51:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="870" started-at="2020-02-06T15:51:04 IST" finished-at="2020-02-06T15:51:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53822" started-at="2020-02-06T15:51:05 IST" finished-at="2020-02-06T15:51:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressSaveUnsavedChangesTest" duration-ms="244400" started-at="2020-02-06T15:51:59 IST" finished-at="2020-02-06T15:56:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T15:56:04 IST" finished-at="2020-02-06T15:56:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="57240" started-at="2020-02-06T15:56:04 IST" finished-at="2020-02-06T15:57:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNamePressCancelTest" duration-ms="6932" started-at="2020-02-06T15:57:01 IST" finished-at="2020-02-06T15:57:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNamePressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T15:57:08 IST" finished-at="2020-02-06T15:57:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNamePressCancelTest status=SUCCESS method=NVRsElementsTest.ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="51751" started-at="2020-02-06T16:13:35 IST" finished-at="2020-02-06T16:14:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitCancelUnsavedChangesTest" duration-ms="22502" started-at="2020-02-06T16:14:27 IST" finished-at="2020-02-06T16:14:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="642" started-at="2020-02-06T16:14:50 IST" finished-at="2020-02-06T16:14:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="49541" started-at="2020-02-06T16:14:50 IST" finished-at="2020-02-06T16:15:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressDontSaveUnsavedChangesTest" duration-ms="219511" started-at="2020-02-06T16:15:40 IST" finished-at="2020-02-06T16:19:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T16:19:19 IST" finished-at="2020-02-06T16:19:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="51210" started-at="2020-02-06T16:19:20 IST" finished-at="2020-02-06T16:20:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressSaveUnsavedChangesTest" duration-ms="217623" started-at="2020-02-06T16:20:11 IST" finished-at="2020-02-06T16:23:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T16:23:49 IST" finished-at="2020-02-06T16:23:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="51156" started-at="2020-02-06T16:23:49 IST" finished-at="2020-02-06T16:24:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortPressCancelTest" duration-ms="17791" started-at="2020-02-06T16:24:40 IST" finished-at="2020-02-06T16:24:58 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [80] but found [548]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [80] but found [548]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangePortPressCancelTest(NVRsElementsTest.java:557)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="747" started-at="2020-02-06T16:24:58 IST" finished-at="2020-02-06T16:24:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortPressCancelTest status=FAILURE method=NVRsElementsTest.ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52362" started-at="2020-02-06T17:01:29 IST" finished-at="2020-02-06T17:02:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameAndPressCancel" duration-ms="174455" started-at="2020-02-06T17:02:21 IST" finished-at="2020-02-06T17:05:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameAndPressCancel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="622" started-at="2020-02-06T17:05:15 IST" finished-at="2020-02-06T17:05:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameAndPressCancel status=SUCCESS method=NVRsElementsTest.ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="50936" started-at="2020-02-06T17:05:16 IST" finished-at="2020-02-06T17:06:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitCancelUnsavedChangesTest" duration-ms="202983" started-at="2020-02-06T17:06:07 IST" finished-at="2020-02-06T17:09:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="915" started-at="2020-02-06T17:09:30 IST" finished-at="2020-02-06T17:09:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="49800" started-at="2020-02-06T17:09:31 IST" finished-at="2020-02-06T17:10:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressDontSaveUnsavedChangesTest" duration-ms="213278" started-at="2020-02-06T17:10:21 IST" finished-at="2020-02-06T17:13:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1034" started-at="2020-02-06T17:13:54 IST" finished-at="2020-02-06T17:13:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="49907" started-at="2020-02-06T17:13:55 IST" finished-at="2020-02-06T17:14:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressSaveUnsavedChangesTest" duration-ms="211590" started-at="2020-02-06T17:14:45 IST" finished-at="2020-02-06T17:18:16 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [UserName] but found [ADMIN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [UserName] but found [ADMIN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangeUserNameExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:1083)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="895" started-at="2020-02-06T17:18:16 IST" finished-at="2020-02-06T17:18:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="57299" started-at="2020-02-06T18:13:00 IST" finished-at="2020-02-06T18:13:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeIPAdressTest" duration-ms="51901" started-at="2020-02-06T18:13:57 IST" finished-at="2020-02-06T18:14:49 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest(NVRsElementsTest.java:522)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="873" started-at="2020-02-06T18:14:49 IST" finished-at="2020-02-06T18:14:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeIPAdressTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55176" started-at="2020-02-06T18:14:50 IST" finished-at="2020-02-06T18:15:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeNameTest" duration-ms="50659" started-at="2020-02-06T18:15:45 IST" finished-at="2020-02-06T18:16:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T18:16:36 IST" finished-at="2020-02-06T18:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeNameTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56594" started-at="2020-02-06T18:16:36 IST" finished-at="2020-02-06T18:17:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePasswordTest" duration-ms="59635" started-at="2020-02-06T18:17:33 IST" finished-at="2020-02-06T18:18:32 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [UserName] but found [ADMIN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [UserName] but found [ADMIN]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangePasswordTest(NVRsElementsTest.java:1175)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePasswordTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="700" started-at="2020-02-06T18:18:32 IST" finished-at="2020-02-06T18:18:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePasswordTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55989" started-at="2020-02-06T18:18:33 IST" finished-at="2020-02-06T18:19:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePortTest" duration-ms="68817" started-at="2020-02-06T18:19:29 IST" finished-at="2020-02-06T18:20:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="752" started-at="2020-02-06T18:20:38 IST" finished-at="2020-02-06T18:20:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePortTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="58507" started-at="2020-02-06T18:20:39 IST" finished-at="2020-02-06T18:21:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeUserNameTest" duration-ms="58025" started-at="2020-02-06T18:21:37 IST" finished-at="2020-02-06T18:22:35 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest(NVRsElementsTest.java:1126)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeUserNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="926" started-at="2020-02-06T18:22:35 IST" finished-at="2020-02-06T18:22:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeUserNameTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="57953" started-at="2020-02-06T18:32:52 IST" finished-at="2020-02-06T18:33:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="DecreasePortExitCancelUnsavedChangesTest" duration-ms="10969" started-at="2020-02-06T18:33:50 IST" finished-at="2020-02-06T18:34:01 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest(NVRsElementsTest.java:811)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DecreasePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="730" started-at="2020-02-06T18:34:01 IST" finished-at="2020-02-06T18:34:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DecreasePortExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56317" started-at="2020-02-06T18:34:02 IST" finished-at="2020-02-06T18:34:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="DecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="DecreasePortExitPressSaveUnsavedChangesTest" duration-ms="185822" started-at="2020-02-06T18:34:58 IST" finished-at="2020-02-06T18:38:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.DecreasePortExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:901)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DecreasePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="841" started-at="2020-02-06T18:38:04 IST" finished-at="2020-02-06T18:38:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DecreasePortExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.DecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56562" started-at="2020-02-06T19:35:01 IST" finished-at="2020-02-06T19:35:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="IncreasePortExitPressDontSaveUnsavedChangesTest" duration-ms="166733" started-at="2020-02-06T19:35:57 IST" finished-at="2020-02-06T19:38:44 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest(NVRsElementsTest.java:851)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IncreasePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="611" started-at="2020-02-06T19:38:44 IST" finished-at="2020-02-06T19:38:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IncreasePortExitPressDontSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53017" started-at="2020-02-06T20:49:45 IST" finished-at="2020-02-06T20:50:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsAndPressCancelTest" duration-ms="9611" started-at="2020-02-06T20:50:38 IST" finished-at="2020-02-06T20:50:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="933" started-at="2020-02-06T20:50:48 IST" finished-at="2020-02-06T20:50:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54946" started-at="2020-02-06T20:50:49 IST" finished-at="2020-02-06T20:51:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressCancelTest" duration-ms="24238" started-at="2020-02-06T20:51:44 IST" finished-at="2020-02-06T20:52:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T20:52:08 IST" finished-at="2020-02-06T20:52:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69263" started-at="2020-02-06T20:52:08 IST" finished-at="2020-02-06T20:53:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest" duration-ms="47373" started-at="2020-02-06T20:53:18 IST" finished-at="2020-02-06T20:54:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressDontSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-06T20:54:05 IST" finished-at="2020-02-06T20:54:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressDontSaveButtonTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="68821" started-at="2020-02-06T20:54:06 IST" finished-at="2020-02-06T20:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressSaveButtonTest" duration-ms="50538" started-at="2020-02-06T20:55:14 IST" finished-at="2020-02-06T20:56:05 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.SwitchStorageDefinitionsExitAndPressSaveButtonTest(NVRsElementsTest.java:1578)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="693" started-at="2020-02-06T20:56:05 IST" finished-at="2020-02-06T20:56:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressSaveButtonTest status=FAILURE method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55011" started-at="2020-02-06T21:02:34 IST" finished-at="2020-02-06T21:03:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitCancelUnsavedChangesExitCancelTest" duration-ms="41751" started-at="2020-02-06T21:03:29 IST" finished-at="2020-02-06T21:04:11 IST">
          <exception class="org.openqa.selenium.JavascriptException">
            <message>
              <![CDATA[JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:43342/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: c2d40a57-49f8-4f9a-832f-16027b6127c1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.JavascriptException: JavaScript error (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:43342/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: c2d40a57-49f8-4f9a-832f-16027b6127c1
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:537)
at Utilities.Page.JavaScriptClick(Page.java:757)
at pageObjects.NVRsPage.AddDiscoveredNVRs(NVRsPage.java:934)
at pageObjects.NVRsPage.IfNVRIsNotExistAddIt(NVRsPage.java:955)
at testcases.NVRsElementsTest.ChangeNameExitCancelUnsavedChangesExitCancelTest(NVRsElementsTest.java:131)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.JavascriptException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitCancelUnsavedChangesExitCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="3574" started-at="2020-02-06T21:04:11 IST" finished-at="2020-02-06T21:04:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitCancelUnsavedChangesExitCancelTest status=FAILURE method=NVRsElementsTest.ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="endReport" is-config="true" duration-ms="82" started-at="2020-02-06T21:04:15 IST" finished-at="2020-02-06T21:04:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsElementsTest -->
      <class name="testcases.ViewsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T19:58:31 IST" finished-at="2020-02-06T19:58:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="106280" started-at="2020-02-06T19:58:31 IST" finished-at="2020-02-06T20:00:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewTest" duration-ms="62538" started-at="2020-02-06T20:00:17 IST" finished-at="2020-02-06T20:01:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T20:01:19 IST" finished-at="2020-02-06T20:01:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewTest status=SUCCESS method=ViewsTest.AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="171046" started-at="2020-02-06T20:01:20 IST" finished-at="2020-02-06T20:04:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewWithoutLayoutTest" duration-ms="5826" started-at="2020-02-06T20:04:11 IST" finished-at="2020-02-06T20:04:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="847" started-at="2020-02-06T20:04:17 IST" finished-at="2020-02-06T20:04:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutTest status=SUCCESS method=ViewsTest.AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="168129" started-at="2020-02-06T20:04:18 IST" finished-at="2020-02-06T20:07:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelDeletingViewByButton" duration-ms="33038" started-at="2020-02-06T20:07:06 IST" finished-at="2020-02-06T20:07:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelDeletingViewByButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="768" started-at="2020-02-06T20:07:39 IST" finished-at="2020-02-06T20:07:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelDeletingViewByButton status=SUCCESS method=ViewsTest.CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="107329" started-at="2020-02-06T20:07:40 IST" finished-at="2020-02-06T20:09:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelRemovingViewByIconTest" duration-ms="32105" started-at="2020-02-06T20:09:27 IST" finished-at="2020-02-06T20:09:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovingViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-06T20:09:59 IST" finished-at="2020-02-06T20:10:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovingViewByIconTest status=SUCCESS method=ViewsTest.CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="116579" started-at="2020-02-06T20:10:00 IST" finished-at="2020-02-06T20:11:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeLayoutTest" duration-ms="99177" started-at="2020-02-06T20:11:56 IST" finished-at="2020-02-06T20:13:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="650" started-at="2020-02-06T20:13:35 IST" finished-at="2020-02-06T20:13:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutTest status=SUCCESS method=ViewsTest.ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="105171" started-at="2020-02-06T20:13:36 IST" finished-at="2020-02-06T20:15:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeNameTest" duration-ms="102540" started-at="2020-02-06T20:15:21 IST" finished-at="2020-02-06T20:17:04 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //div[@class='ui-grid-canvas']//div[@title='new view name54057'] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:10526/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 1285eb69-9312-4eaa-b2ee-a8ee8a99c7fa
*** Element info: {Using=xpath, value=//div[@class='ui-grid-canvas']//div[@title='new view name54057']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //div[@class='ui-grid-canvas']//div[@title='new view name54057'] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:10526/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 1285eb69-9312-4eaa-b2ee-a8ee8a99c7fa
*** Element info: {Using=xpath, value=//div[@class='ui-grid-canvas']//div[@title='new view name54057']}
at sun.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at pageObjects.ViewsPage.ClickOnViewByName(ViewsPage.java:378)
at testcases.ViewsTest.ChangeNameTest(ViewsTest.java:283)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="850" started-at="2020-02-06T20:17:04 IST" finished-at="2020-02-06T20:17:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=FAILURE method=ViewsTest.ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="109675" started-at="2020-02-06T20:17:05 IST" finished-at="2020-02-06T20:18:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeRemarksTest" duration-ms="85177" started-at="2020-02-06T20:18:54 IST" finished-at="2020-02-06T20:20:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T20:20:19 IST" finished-at="2020-02-06T20:20:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ViewsTest.ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="106368" started-at="2020-02-06T20:20:20 IST" finished-at="2020-02-06T20:22:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeVisibilityStatusTest" duration-ms="84487" started-at="2020-02-06T20:22:06 IST" finished-at="2020-02-06T20:23:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T20:23:31 IST" finished-at="2020-02-06T20:23:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ViewsTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="166339" started-at="2020-02-06T20:23:31 IST" finished-at="2020-02-06T20:26:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewAndDragResourceTest" duration-ms="68185" started-at="2020-02-06T20:26:18 IST" finished-at="2020-02-06T20:27:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndDragResourceTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T20:27:26 IST" finished-at="2020-02-06T20:27:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndDragResourceTest status=SUCCESS method=ViewsTest.ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="169498" started-at="2020-02-06T20:27:26 IST" finished-at="2020-02-06T20:30:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewTest" duration-ms="15633" started-at="2020-02-06T20:30:16 IST" finished-at="2020-02-06T20:30:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="587" started-at="2020-02-06T20:30:32 IST" finished-at="2020-02-06T20:30:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewTest status=SUCCESS method=ViewsTest.ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="166715" started-at="2020-02-06T20:30:32 IST" finished-at="2020-02-06T20:33:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByButtonTest" duration-ms="45977" started-at="2020-02-06T20:33:19 IST" finished-at="2020-02-06T20:34:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="541" started-at="2020-02-06T20:34:05 IST" finished-at="2020-02-06T20:34:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByButtonTest status=SUCCESS method=ViewsTest.DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="107430" started-at="2020-02-06T20:34:05 IST" finished-at="2020-02-06T20:35:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByIconTest" duration-ms="41198" started-at="2020-02-06T20:35:53 IST" finished-at="2020-02-06T20:36:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="546" started-at="2020-02-06T20:36:34 IST" finished-at="2020-02-06T20:36:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByIconTest status=SUCCESS method=ViewsTest.DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="166484" started-at="2020-02-06T20:36:35 IST" finished-at="2020-02-06T20:39:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ResourceFilterTest" duration-ms="7843" started-at="2020-02-06T20:39:21 IST" finished-at="2020-02-06T20:39:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T20:39:29 IST" finished-at="2020-02-06T20:39:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourceFilterTest status=SUCCESS method=ViewsTest.ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="102462" started-at="2020-02-06T20:57:14 IST" finished-at="2020-02-06T20:58:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ViewsFilterTest" duration-ms="3099" started-at="2020-02-06T20:58:56 IST" finished-at="2020-02-06T20:58:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewsFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T20:58:59 IST" finished-at="2020-02-06T20:59:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewsFilterTest status=SUCCESS method=ViewsTest.ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="endReport" is-config="true" duration-ms="77" started-at="2020-02-06T20:59:00 IST" finished-at="2020-02-06T20:59:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsTest -->
      <class name="testcases.ViewsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T14:20:58 IST" finished-at="2020-02-06T14:20:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104640" started-at="2020-02-06T14:20:58 IST" finished-at="2020-02-06T14:22:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewAndPressCancelTest" duration-ms="8075" started-at="2020-02-06T14:22:43 IST" finished-at="2020-02-06T14:22:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="688" started-at="2020-02-06T14:22:51 IST" finished-at="2020-02-06T14:22:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="100738" started-at="2020-02-06T14:22:52 IST" finished-at="2020-02-06T14:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressCancelTest" duration-ms="20615" started-at="2020-02-06T14:24:32 IST" finished-at="2020-02-06T14:24:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T14:24:53 IST" finished-at="2020-02-06T14:24:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104884" started-at="2020-02-06T14:24:53 IST" finished-at="2020-02-06T14:26:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressDoNotSaveTest" duration-ms="26269" started-at="2020-02-06T14:26:38 IST" finished-at="2020-02-06T14:27:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="629" started-at="2020-02-06T14:27:05 IST" finished-at="2020-02-06T14:27:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="118525" started-at="2020-02-06T14:27:05 IST" finished-at="2020-02-06T14:29:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressSaveTest" duration-ms="26297" started-at="2020-02-06T14:29:04 IST" finished-at="2020-02-06T14:29:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="808" started-at="2020-02-06T14:29:30 IST" finished-at="2020-02-06T14:29:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="119028" started-at="2020-02-06T14:29:31 IST" finished-at="2020-02-06T14:31:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndCancelTest" duration-ms="18038" started-at="2020-02-06T14:31:30 IST" finished-at="2020-02-06T14:31:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="565" started-at="2020-02-06T14:31:48 IST" finished-at="2020-02-06T14:31:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103421" started-at="2020-02-06T14:31:48 IST" finished-at="2020-02-06T14:33:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndDoNotSaveTest" duration-ms="24448" started-at="2020-02-06T14:33:32 IST" finished-at="2020-02-06T14:33:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="630" started-at="2020-02-06T14:33:56 IST" finished-at="2020-02-06T14:33:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="102346" started-at="2020-02-06T14:33:57 IST" finished-at="2020-02-06T14:35:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndSaveTest" duration-ms="3826" started-at="2020-02-06T14:35:39 IST" finished-at="2020-02-06T14:35:43 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.ViewsElementsTest.AddNewViewWithLayoutExitAndSaveTest(ViewsElementsTest.java:266)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="614" started-at="2020-02-06T14:35:43 IST" finished-at="2020-02-06T14:35:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndSaveTest status=FAILURE method=ViewsElementsTest.AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="102341" started-at="2020-02-06T14:35:44 IST" finished-at="2020-02-06T14:37:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndCancelTest" duration-ms="17213" started-at="2020-02-06T14:37:26 IST" finished-at="2020-02-06T14:37:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T14:37:43 IST" finished-at="2020-02-06T14:37:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103136" started-at="2020-02-06T14:37:44 IST" finished-at="2020-02-06T14:39:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest" duration-ms="24112" started-at="2020-02-06T14:39:27 IST" finished-at="2020-02-06T14:39:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="628" started-at="2020-02-06T14:39:51 IST" finished-at="2020-02-06T14:39:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="100903" started-at="2020-02-06T14:39:52 IST" finished-at="2020-02-06T14:41:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndSaveTest" duration-ms="17520" started-at="2020-02-06T14:41:33 IST" finished-at="2020-02-06T14:41:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T14:41:50 IST" finished-at="2020-02-06T14:41:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105557" started-at="2020-02-06T15:18:16 IST" finished-at="2020-02-06T15:20:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutAndPressCancelTest" duration-ms="25393" started-at="2020-02-06T15:20:01 IST" finished-at="2020-02-06T15:20:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [9] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [9] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutAndPressCancelTest(ViewsElementsTest.java:1331)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="697" started-at="2020-02-06T15:20:26 IST" finished-at="2020-02-06T15:20:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutAndPressCancelTest status=FAILURE method=ViewsElementsTest.ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="102562" started-at="2020-02-06T15:20:27 IST" finished-at="2020-02-06T15:22:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressCancelTest" duration-ms="37598" started-at="2020-02-06T15:22:10 IST" finished-at="2020-02-06T15:22:47 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [4] but found [9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [4] but found [9]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutExitAndPressCancelTest(ViewsElementsTest.java:1403)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="934" started-at="2020-02-06T15:22:47 IST" finished-at="2020-02-06T15:22:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressCancelTest status=FAILURE method=ViewsElementsTest.ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="108799" started-at="2020-02-06T15:22:48 IST" finished-at="2020-02-06T15:24:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressDontSaveTest" duration-ms="45918" started-at="2020-02-06T15:24:37 IST" finished-at="2020-02-06T15:25:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressDontSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="852" started-at="2020-02-06T15:25:23 IST" finished-at="2020-02-06T15:25:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressDontSaveTest status=SUCCESS method=ViewsElementsTest.ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="110875" started-at="2020-02-06T15:25:24 IST" finished-at="2020-02-06T15:27:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressSaveTest" duration-ms="103788" started-at="2020-02-06T15:27:15 IST" finished-at="2020-02-06T15:28:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="635" started-at="2020-02-06T15:28:59 IST" finished-at="2020-02-06T15:28:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="124593" started-at="2020-02-06T15:30:48 IST" finished-at="2020-02-06T15:32:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameAndPressCancelTest" duration-ms="69528" started-at="2020-02-06T15:32:53 IST" finished-at="2020-02-06T15:34:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="822" started-at="2020-02-06T15:34:02 IST" finished-at="2020-02-06T15:34:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="110607" started-at="2020-02-06T15:38:32 IST" finished-at="2020-02-06T15:40:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressCancelTest" duration-ms="37556" started-at="2020-02-06T15:40:23 IST" finished-at="2020-02-06T15:41:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-06T15:41:00 IST" finished-at="2020-02-06T15:41:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="111682" started-at="2020-02-06T15:41:01 IST" finished-at="2020-02-06T15:42:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressDoNotSaveTest" duration-ms="28531" started-at="2020-02-06T15:42:52 IST" finished-at="2020-02-06T15:43:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="633" started-at="2020-02-06T15:43:21 IST" finished-at="2020-02-06T15:43:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="109677" started-at="2020-02-06T15:43:22 IST" finished-at="2020-02-06T15:45:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressSaveTest" duration-ms="85567" started-at="2020-02-06T15:45:11 IST" finished-at="2020-02-06T15:46:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T15:46:37 IST" finished-at="2020-02-06T15:46:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="120598" started-at="2020-02-06T16:33:03 IST" finished-at="2020-02-06T16:35:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksAndPressCancelTest" duration-ms="56085" started-at="2020-02-06T16:35:04 IST" finished-at="2020-02-06T16:36:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="921" started-at="2020-02-06T16:36:00 IST" finished-at="2020-02-06T16:36:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="101331" started-at="2020-02-06T16:40:38 IST" finished-at="2020-02-06T16:42:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressCancelTest" duration-ms="24965" started-at="2020-02-06T16:42:19 IST" finished-at="2020-02-06T16:42:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-06T16:42:44 IST" finished-at="2020-02-06T16:42:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104167" started-at="2020-02-06T16:42:45 IST" finished-at="2020-02-06T16:44:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressDoNotSaveTest" duration-ms="73041" started-at="2020-02-06T16:44:29 IST" finished-at="2020-02-06T16:45:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="635" started-at="2020-02-06T16:45:42 IST" finished-at="2020-02-06T16:45:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="102684" started-at="2020-02-06T16:45:43 IST" finished-at="2020-02-06T16:47:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressSaveTest" duration-ms="25999" started-at="2020-02-06T16:47:26 IST" finished-at="2020-02-06T16:47:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="630" started-at="2020-02-06T16:47:52 IST" finished-at="2020-02-06T16:47:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="101595" started-at="2020-02-06T17:52:14 IST" finished-at="2020-02-06T17:53:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusAndPressCancelTest" duration-ms="29212" started-at="2020-02-06T17:53:55 IST" finished-at="2020-02-06T17:54:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T17:54:25 IST" finished-at="2020-02-06T17:54:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="100865" started-at="2020-02-06T17:58:45 IST" finished-at="2020-02-06T18:00:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressCancelTest" duration-ms="92849" started-at="2020-02-06T18:00:26 IST" finished-at="2020-02-06T18:01:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T18:01:59 IST" finished-at="2020-02-06T18:02:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="101130" started-at="2020-02-06T18:02:00 IST" finished-at="2020-02-06T18:03:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressDoNotSaveTest" duration-ms="37241" started-at="2020-02-06T18:03:41 IST" finished-at="2020-02-06T18:04:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="629" started-at="2020-02-06T18:04:18 IST" finished-at="2020-02-06T18:04:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103554" started-at="2020-02-06T18:04:19 IST" finished-at="2020-02-06T18:06:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressSaveTest" duration-ms="33904" started-at="2020-02-06T18:06:02 IST" finished-at="2020-02-06T18:06:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="633" started-at="2020-02-06T18:06:36 IST" finished-at="2020-02-06T18:06:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="108060" started-at="2020-02-06T18:22:36 IST" finished-at="2020-02-06T18:24:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewAndPressCancelTest" duration-ms="11500" started-at="2020-02-06T18:24:24 IST" finished-at="2020-02-06T18:24:36 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [1] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [1] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ClearViewAndPressCancelTest(ViewsElementsTest.java:1107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="663" started-at="2020-02-06T18:24:36 IST" finished-at="2020-02-06T18:24:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndPressCancelTest status=FAILURE method=ViewsElementsTest.ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="111796" started-at="2020-02-06T18:24:36 IST" finished-at="2020-02-06T18:26:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressCancelTest" duration-ms="96480" started-at="2020-02-06T18:26:28 IST" finished-at="2020-02-06T18:28:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="956" started-at="2020-02-06T18:28:05 IST" finished-at="2020-02-06T18:28:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="109852" started-at="2020-02-06T18:28:06 IST" finished-at="2020-02-06T18:29:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressDoNotSaveTest" duration-ms="37749" started-at="2020-02-06T18:29:55 IST" finished-at="2020-02-06T18:30:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="535" started-at="2020-02-06T18:30:33 IST" finished-at="2020-02-06T18:30:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="111435" started-at="2020-02-06T18:30:34 IST" finished-at="2020-02-06T18:32:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressSaveTest" duration-ms="26077" started-at="2020-02-06T18:32:25 IST" finished-at="2020-02-06T18:32:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="789" started-at="2020-02-06T18:32:51 IST" finished-at="2020-02-06T18:32:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="endReport" is-config="true" duration-ms="235" started-at="2020-02-06T18:32:52 IST" finished-at="2020-02-06T18:32:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsElementsTest -->
      <class name="testcases.MonitoringView">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="setup" is-config="true" duration-ms="48430" started-at="2020-02-06T21:01:03 IST" finished-at="2020-02-06T21:01:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="GoToViewPage" is-config="true" duration-ms="12206" started-at="2020-02-06T21:01:52 IST" finished-at="2020-02-06T21:02:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="addViewTest" duration-ms="25067" started-at="2020-02-06T21:02:04 IST" finished-at="2020-02-06T21:02:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addViewTest -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="endReport" is-config="true" duration-ms="5118" started-at="2020-02-06T21:02:29 IST" finished-at="2020-02-06T21:02:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-06T21:02:29 IST" finished-at="2020-02-06T21:02:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addViewTest status=SUCCESS method=MonitoringView.addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.MonitoringView -->
      <class name="testcases.ToursElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-06T13:37:09 IST" finished-at="2020-02-06T13:37:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-06T13:59:31 IST" finished-at="2020-02-06T13:59:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101586" started-at="2020-02-06T13:59:31 IST" finished-at="2020-02-06T14:01:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourAndCancelTest" duration-ms="6993" started-at="2020-02-06T14:01:13 IST" finished-at="2020-02-06T14:01:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="950" started-at="2020-02-06T14:01:20 IST" finished-at="2020-02-06T14:01:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="99738" started-at="2020-02-06T14:01:21 IST" finished-at="2020-02-06T14:03:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndCancelTest" duration-ms="21473" started-at="2020-02-06T14:03:00 IST" finished-at="2020-02-06T14:03:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="931" started-at="2020-02-06T14:03:22 IST" finished-at="2020-02-06T14:03:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="98532" started-at="2020-02-06T14:03:23 IST" finished-at="2020-02-06T14:05:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndDoNotSaveTest" duration-ms="31953" started-at="2020-02-06T14:05:01 IST" finished-at="2020-02-06T14:05:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T14:05:33 IST" finished-at="2020-02-06T14:05:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="116719" started-at="2020-02-06T14:05:34 IST" finished-at="2020-02-06T14:07:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndSaveTest" duration-ms="32254" started-at="2020-02-06T14:07:30 IST" finished-at="2020-02-06T14:08:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T14:08:03 IST" finished-at="2020-02-06T14:08:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100430" started-at="2020-02-06T14:13:26 IST" finished-at="2020-02-06T14:15:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewAndCancelTest" duration-ms="5204" started-at="2020-02-06T14:15:07 IST" finished-at="2020-02-06T14:15:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T14:15:12 IST" finished-at="2020-02-06T14:15:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="99214" started-at="2020-02-06T14:15:13 IST" finished-at="2020-02-06T14:16:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndCancelTest" duration-ms="16362" started-at="2020-02-06T14:16:52 IST" finished-at="2020-02-06T14:17:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T14:17:08 IST" finished-at="2020-02-06T14:17:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100689" started-at="2020-02-06T14:17:09 IST" finished-at="2020-02-06T14:18:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndDoNotSaveTest" duration-ms="26133" started-at="2020-02-06T14:18:49 IST" finished-at="2020-02-06T14:19:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T14:19:15 IST" finished-at="2020-02-06T14:19:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="97510" started-at="2020-02-06T14:19:16 IST" finished-at="2020-02-06T14:20:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndSaveTest" duration-ms="4054" started-at="2020-02-06T14:20:54 IST" finished-at="2020-02-06T14:20:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T14:20:58 IST" finished-at="2020-02-06T14:20:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="98638" started-at="2020-02-06T14:45:44 IST" finished-at="2020-02-06T14:47:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewAndCancelTest" duration-ms="14809" started-at="2020-02-06T14:47:23 IST" finished-at="2020-02-06T14:47:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T14:47:37 IST" finished-at="2020-02-06T14:47:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="98042" started-at="2020-02-06T14:47:38 IST" finished-at="2020-02-06T14:49:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndCancelTest" duration-ms="22891" started-at="2020-02-06T14:49:16 IST" finished-at="2020-02-06T14:49:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1020" started-at="2020-02-06T14:49:39 IST" finished-at="2020-02-06T14:49:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104373" started-at="2020-02-06T14:49:40 IST" finished-at="2020-02-06T14:51:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndDoNotSaveTest" duration-ms="40861" started-at="2020-02-06T14:51:24 IST" finished-at="2020-02-06T14:52:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="685" started-at="2020-02-06T14:52:05 IST" finished-at="2020-02-06T14:52:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="97328" started-at="2020-02-06T14:52:06 IST" finished-at="2020-02-06T14:53:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndSaveTest" duration-ms="42369" started-at="2020-02-06T14:53:43 IST" finished-at="2020-02-06T14:54:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T14:54:26 IST" finished-at="2020-02-06T14:54:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102636" started-at="2020-02-06T15:28:59 IST" finished-at="2020-02-06T15:30:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameAndCancelTest" duration-ms="5357" started-at="2020-02-06T15:30:42 IST" finished-at="2020-02-06T15:30:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="913" started-at="2020-02-06T15:30:47 IST" finished-at="2020-02-06T15:30:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="106759" started-at="2020-02-06T15:34:03 IST" finished-at="2020-02-06T15:35:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndCancelTest" duration-ms="20680" started-at="2020-02-06T15:35:50 IST" finished-at="2020-02-06T15:36:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="758" started-at="2020-02-06T15:36:10 IST" finished-at="2020-02-06T15:36:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103552" started-at="2020-02-06T15:36:11 IST" finished-at="2020-02-06T15:37:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndDoNotSaveTest" duration-ms="36476" started-at="2020-02-06T15:37:55 IST" finished-at="2020-02-06T15:38:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="767" started-at="2020-02-06T15:38:31 IST" finished-at="2020-02-06T15:38:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103084" started-at="2020-02-06T15:46:37 IST" finished-at="2020-02-06T15:48:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndSaveTest" duration-ms="35516" started-at="2020-02-06T15:48:20 IST" finished-at="2020-02-06T15:48:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T15:48:56 IST" finished-at="2020-02-06T15:48:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="116342" started-at="2020-02-06T16:31:00 IST" finished-at="2020-02-06T16:32:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksAndCancelTest" duration-ms="5888" started-at="2020-02-06T16:32:57 IST" finished-at="2020-02-06T16:33:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="579" started-at="2020-02-06T16:33:03 IST" finished-at="2020-02-06T16:33:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104719" started-at="2020-02-06T16:36:01 IST" finished-at="2020-02-06T16:37:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndCancelTest" duration-ms="25221" started-at="2020-02-06T16:37:45 IST" finished-at="2020-02-06T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T16:38:11 IST" finished-at="2020-02-06T16:38:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103972" started-at="2020-02-06T16:38:11 IST" finished-at="2020-02-06T16:39:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndDoNotSaveTest" duration-ms="42486" started-at="2020-02-06T16:39:55 IST" finished-at="2020-02-06T16:40:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T16:40:38 IST" finished-at="2020-02-06T16:40:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101460" started-at="2020-02-06T16:47:52 IST" finished-at="2020-02-06T16:49:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndSaveTest" duration-ms="45969" started-at="2020-02-06T16:49:34 IST" finished-at="2020-02-06T16:50:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T16:50:20 IST" finished-at="2020-02-06T16:50:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101354" started-at="2020-02-06T17:22:31 IST" finished-at="2020-02-06T17:24:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeAndCancelTest" duration-ms="6372" started-at="2020-02-06T17:24:13 IST" finished-at="2020-02-06T17:24:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="575" started-at="2020-02-06T17:24:19 IST" finished-at="2020-02-06T17:24:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100177" started-at="2020-02-06T17:24:20 IST" finished-at="2020-02-06T17:26:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersAndCancelTest" duration-ms="25630" started-at="2020-02-06T17:26:00 IST" finished-at="2020-02-06T17:26:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T17:26:26 IST" finished-at="2020-02-06T17:26:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="107530" started-at="2020-02-06T17:26:26 IST" finished-at="2020-02-06T17:28:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndCancelTest" duration-ms="6168" started-at="2020-02-06T17:28:14 IST" finished-at="2020-02-06T17:28:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="861" started-at="2020-02-06T17:28:20 IST" finished-at="2020-02-06T17:28:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="99031" started-at="2020-02-06T17:28:21 IST" finished-at="2020-02-06T17:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndDoNotSaveTest" duration-ms="53117" started-at="2020-02-06T17:30:00 IST" finished-at="2020-02-06T17:30:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="811" started-at="2020-02-06T17:30:53 IST" finished-at="2020-02-06T17:30:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103380" started-at="2020-02-06T17:30:54 IST" finished-at="2020-02-06T17:32:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="FAIL" signature="ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndSaveTest" duration-ms="226884" started-at="2020-02-06T17:32:37 IST" finished-at="2020-02-06T17:36:24 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //div[@class = 'modal-footer-confirm']/button[contains(text(), 'Save')] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:25358/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: cd37a518-f5b5-425e-8161-66ce39571d04
*** Element info: {Using=xpath, value=//div[@class = 'modal-footer-confirm']/button[contains(text(), 'Save')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //div[@class = 'modal-footer-confirm']/button[contains(text(), 'Save')] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:25358/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: cd37a518-f5b5-425e-8161-66ce39571d04
*** Element info: {Using=xpath, value=//div[@class = 'modal-footer-confirm']/button[contains(text(), 'Save')]}
at sun.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy14.isEnabled(Unknown Source)
at Utilities.Page.SaveUnsavedChangesButtonIsEnabled(Page.java:369)
at testcases.ToursElementsTest.ChangeViewTimeBySpinnersExitAndSaveTest(ToursElementsTest.java:1782)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="810" started-at="2020-02-06T17:36:24 IST" finished-at="2020-02-06T17:36:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndSaveTest status=FAILURE method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="98292" started-at="2020-02-06T17:38:55 IST" finished-at="2020-02-06T17:40:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndCancelTest" duration-ms="23081" started-at="2020-02-06T17:40:33 IST" finished-at="2020-02-06T17:40:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="860" started-at="2020-02-06T17:40:56 IST" finished-at="2020-02-06T17:40:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100645" started-at="2020-02-06T17:40:57 IST" finished-at="2020-02-06T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndDoNotSaveTest" duration-ms="36575" started-at="2020-02-06T17:42:38 IST" finished-at="2020-02-06T17:43:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T17:43:14 IST" finished-at="2020-02-06T17:43:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103199" started-at="2020-02-06T17:43:15 IST" finished-at="2020-02-06T17:44:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndSaveTest" duration-ms="6183" started-at="2020-02-06T17:44:58 IST" finished-at="2020-02-06T17:45:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="643" started-at="2020-02-06T17:45:04 IST" finished-at="2020-02-06T17:45:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101373" started-at="2020-02-06T17:50:28 IST" finished-at="2020-02-06T17:52:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusAndCancelTest" duration-ms="3542" started-at="2020-02-06T17:52:10 IST" finished-at="2020-02-06T17:52:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T17:52:13 IST" finished-at="2020-02-06T17:52:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100496" started-at="2020-02-06T17:54:25 IST" finished-at="2020-02-06T17:56:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndCancelTest" duration-ms="23644" started-at="2020-02-06T17:56:06 IST" finished-at="2020-02-06T17:56:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T17:56:29 IST" finished-at="2020-02-06T17:56:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104709" started-at="2020-02-06T17:56:30 IST" finished-at="2020-02-06T17:58:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndDoNotSaveTest" duration-ms="30356" started-at="2020-02-06T17:58:15 IST" finished-at="2020-02-06T17:58:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="527" started-at="2020-02-06T17:58:45 IST" finished-at="2020-02-06T17:58:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="109917" started-at="2020-02-06T18:06:37 IST" finished-at="2020-02-06T18:08:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndSaveTest" duration-ms="6324" started-at="2020-02-06T18:08:27 IST" finished-at="2020-02-06T18:08:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1049" started-at="2020-02-06T18:08:33 IST" finished-at="2020-02-06T18:08:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103554" started-at="2020-02-06T18:38:05 IST" finished-at="2020-02-06T18:39:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsAndCancelTest" duration-ms="6124" started-at="2020-02-06T18:39:48 IST" finished-at="2020-02-06T18:39:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="915" started-at="2020-02-06T18:39:55 IST" finished-at="2020-02-06T18:39:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100233" started-at="2020-02-06T18:39:55 IST" finished-at="2020-02-06T18:41:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndCancelTest" duration-ms="22053" started-at="2020-02-06T18:41:36 IST" finished-at="2020-02-06T18:41:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T18:41:58 IST" finished-at="2020-02-06T18:41:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102518" started-at="2020-02-06T18:41:58 IST" finished-at="2020-02-06T18:43:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndDoNotSaveTest" duration-ms="27301" started-at="2020-02-06T18:43:41 IST" finished-at="2020-02-06T18:44:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="638" started-at="2020-02-06T18:44:08 IST" finished-at="2020-02-06T18:44:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101638" started-at="2020-02-06T18:44:09 IST" finished-at="2020-02-06T18:45:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndSaveTest" duration-ms="3213" started-at="2020-02-06T18:45:50 IST" finished-at="2020-02-06T18:45:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="919" started-at="2020-02-06T18:45:54 IST" finished-at="2020-02-06T18:45:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102260" started-at="2020-02-06T19:09:08 IST" finished-at="2020-02-06T19:10:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewAndCancelTest" duration-ms="9077" started-at="2020-02-06T19:10:50 IST" finished-at="2020-02-06T19:10:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T19:10:59 IST" finished-at="2020-02-06T19:11:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="99222" started-at="2020-02-06T19:11:00 IST" finished-at="2020-02-06T19:12:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndCancelTest" duration-ms="345" started-at="2020-02-06T19:12:39 IST" finished-at="2020-02-06T19:12:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T19:12:40 IST" finished-at="2020-02-06T19:12:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102436" started-at="2020-02-06T19:12:40 IST" finished-at="2020-02-06T19:14:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndDoNotSaveTest" duration-ms="25577" started-at="2020-02-06T19:14:22 IST" finished-at="2020-02-06T19:14:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-06T19:14:48 IST" finished-at="2020-02-06T19:14:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="104858" started-at="2020-02-06T19:14:49 IST" finished-at="2020-02-06T19:16:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndSaveTest" duration-ms="1513" started-at="2020-02-06T19:16:33 IST" finished-at="2020-02-06T19:16:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="571" started-at="2020-02-06T19:16:35 IST" finished-at="2020-02-06T19:16:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="endReport" is-config="true" duration-ms="344" started-at="2020-02-06T19:16:36 IST" finished-at="2020-02-06T19:16:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursElementsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
