<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="26" ignored="66" total="261" passed="169">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="31136076" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-06T04:06:48 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="31136076" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-06T04:06:48 IST">
      <class name="testcases.ToursTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursTest@12405818]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursTest@12405818]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-05T20:04:12 IST" finished-at="2020-02-05T20:04:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="110789" started-at="2020-02-05T20:04:12 IST" finished-at="2020-02-05T20:06:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourTest" duration-ms="12069" started-at="2020-02-05T20:06:03 IST" finished-at="2020-02-05T20:06:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="682" started-at="2020-02-05T20:06:15 IST" finished-at="2020-02-05T20:06:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourTest status=SUCCESS method=ToursTest.AddNewTourTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="113283" started-at="2020-02-05T20:06:16 IST" finished-at="2020-02-05T20:08:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddNewTourWithAllParametersTest" duration-ms="75212" started-at="2020-02-05T20:08:09 IST" finished-at="2020-02-05T20:09:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithAllParametersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="839" started-at="2020-02-05T20:09:24 IST" finished-at="2020-02-05T20:09:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithAllParametersTest status=SUCCESS method=ToursTest.AddNewTourWithAllParametersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="111682" started-at="2020-02-05T20:59:24 IST" finished-at="2020-02-05T21:01:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="AddViewTest" duration-ms="44389" started-at="2020-02-05T21:01:16 IST" finished-at="2020-02-05T21:02:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T21:02:00 IST" finished-at="2020-02-05T21:02:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewTest status=SUCCESS method=ToursTest.AddViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="108679" started-at="2020-02-05T22:18:18 IST" finished-at="2020-02-05T22:20:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeNameTest" duration-ms="43573" started-at="2020-02-05T22:20:06 IST" finished-at="2020-02-05T22:20:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-05T22:20:50 IST" finished-at="2020-02-05T22:20:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=ToursTest.ChangeNameTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="113272" started-at="2020-02-05T22:23:06 IST" finished-at="2020-02-05T22:25:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeOrderForViewTest" duration-ms="7000" started-at="2020-02-05T22:25:00 IST" finished-at="2020-02-05T22:25:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeOrderForViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="981" started-at="2020-02-05T22:25:07 IST" finished-at="2020-02-05T22:25:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeOrderForViewTest status=SUCCESS method=ToursTest.ChangeOrderForViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="123298" started-at="2020-02-05T23:17:56 IST" finished-at="2020-02-05T23:19:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeRemarksTest" duration-ms="36334" started-at="2020-02-05T23:19:59 IST" finished-at="2020-02-05T23:20:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="639" started-at="2020-02-05T23:20:36 IST" finished-at="2020-02-05T23:20:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ToursTest.ChangeRemarksTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="111864" started-at="2020-02-06T00:07:40 IST" finished-at="2020-02-06T00:09:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeBySpinnersTest" duration-ms="50916" started-at="2020-02-06T00:09:32 IST" finished-at="2020-02-06T00:10:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="723" started-at="2020-02-06T00:10:23 IST" finished-at="2020-02-06T00:10:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersTest status=SUCCESS method=ToursTest.ChangeViewTimeBySpinnersTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="109075" started-at="2020-02-06T00:18:53 IST" finished-at="2020-02-06T00:20:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="FAIL" signature="ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeTest" duration-ms="10756" started-at="2020-02-06T00:20:42 IST" finished-at="2020-02-06T00:20:53 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [72728] but found [7272]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [72728] but found [7272]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.ToursTest.ChangeViewTimeTest(ToursTest.java:750)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="714" started-at="2020-02-06T00:20:53 IST" finished-at="2020-02-06T00:20:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeTest status=FAILURE method=ToursTest.ChangeViewTimeTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="171646" started-at="2020-02-06T00:20:53 IST" finished-at="2020-02-06T00:23:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToLessThanMinValueTest" duration-ms="8200" started-at="2020-02-06T00:23:45 IST" finished-at="2020-02-06T00:23:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToLessThanMinValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="641" started-at="2020-02-06T00:23:53 IST" finished-at="2020-02-06T00:23:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToLessThanMinValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToLessThanMinValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="173110" started-at="2020-02-06T00:23:54 IST" finished-at="2020-02-06T00:26:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeViewTimeToMoreThanMaxValueTest" duration-ms="7601" started-at="2020-02-06T00:26:47 IST" finished-at="2020-02-06T00:26:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeToMoreThanMaxValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="545" started-at="2020-02-06T00:26:55 IST" finished-at="2020-02-06T00:26:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeToMoreThanMaxValueTest status=SUCCESS method=ToursTest.ChangeViewTimeToMoreThanMaxValueTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="123687" started-at="2020-02-06T00:50:45 IST" finished-at="2020-02-06T00:52:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818]" name="ChangeVisibilityStatusTest" duration-ms="42833" started-at="2020-02-06T00:52:48 IST" finished-at="2020-02-06T00:53:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="801" started-at="2020-02-06T00:53:31 IST" finished-at="2020-02-06T00:53:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ToursTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="112817" started-at="2020-02-06T01:29:30 IST" finished-at="2020-02-06T01:31:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteAllViewsTest" duration-ms="5960" started-at="2020-02-06T01:31:23 IST" finished-at="2020-02-06T01:31:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="987" started-at="2020-02-06T01:31:29 IST" finished-at="2020-02-06T01:31:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsTest status=SUCCESS method=ToursTest.DeleteAllViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="112064" started-at="2020-02-06T01:42:43 IST" finished-at="2020-02-06T01:44:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonAndPressNoTest" duration-ms="33560" started-at="2020-02-06T01:44:35 IST" finished-at="2020-02-06T01:45:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="661" started-at="2020-02-06T01:45:09 IST" finished-at="2020-02-06T01:45:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByButtonAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="108801" started-at="2020-02-06T01:45:09 IST" finished-at="2020-02-06T01:46:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByButtonTest" duration-ms="31731" started-at="2020-02-06T01:46:58 IST" finished-at="2020-02-06T01:47:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="852" started-at="2020-02-06T01:47:30 IST" finished-at="2020-02-06T01:47:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByButtonTest status=SUCCESS method=ToursTest.DeleteTourByButtonTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="104594" started-at="2020-02-06T01:47:31 IST" finished-at="2020-02-06T01:49:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconAndPressNoTest" duration-ms="18309" started-at="2020-02-06T01:49:15 IST" finished-at="2020-02-06T01:49:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="750" started-at="2020-02-06T01:49:33 IST" finished-at="2020-02-06T01:49:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconAndPressNoTest status=SUCCESS method=ToursTest.DeleteTourByIconAndPressNoTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="103078" started-at="2020-02-06T01:49:34 IST" finished-at="2020-02-06T01:51:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteTourByIconTest" duration-ms="68095" started-at="2020-02-06T01:51:17 IST" finished-at="2020-02-06T01:52:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteTourByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T01:52:25 IST" finished-at="2020-02-06T01:52:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteTourByIconTest status=SUCCESS method=ToursTest.DeleteTourByIconTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="104475" started-at="2020-02-06T02:03:05 IST" finished-at="2020-02-06T02:04:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewFromViewsPageTest" duration-ms="59838" started-at="2020-02-06T02:04:50 IST" finished-at="2020-02-06T02:05:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewFromViewsPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T02:05:50 IST" finished-at="2020-02-06T02:05:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewFromViewsPageTest status=SUCCESS method=ToursTest.DeleteViewFromViewsPageTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="162765" started-at="2020-02-06T02:05:50 IST" finished-at="2020-02-06T02:08:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="DeleteViewTest" duration-ms="5145" started-at="2020-02-06T02:08:33 IST" finished-at="2020-02-06T02:08:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="527" started-at="2020-02-06T02:08:38 IST" finished-at="2020-02-06T02:08:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewTest status=SUCCESS method=ToursTest.DeleteViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="158538" started-at="2020-02-06T02:21:21 IST" finished-at="2020-02-06T02:23:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterToursTest" duration-ms="3179" started-at="2020-02-06T02:23:59 IST" finished-at="2020-02-06T02:24:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterToursTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-06T02:24:02 IST" finished-at="2020-02-06T02:24:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterToursTest status=SUCCESS method=ToursTest.FilterToursTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="100180" started-at="2020-02-06T02:24:03 IST" finished-at="2020-02-06T02:25:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818]" name="FilterViewsTest" duration-ms="5550" started-at="2020-02-06T02:25:43 IST" finished-at="2020-02-06T02:25:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterViewsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="579" started-at="2020-02-06T02:25:49 IST" finished-at="2020-02-06T02:25:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterViewsTest status=SUCCESS method=ToursTest.FilterViewsTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursTest@12405818]" name="GoToToursPage" is-config="true" duration-ms="118429" started-at="2020-02-06T02:41:41 IST" finished-at="2020-02-06T02:43:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818]" name="NewTourWithEmptyViewTest" duration-ms="18082" started-at="2020-02-06T02:43:40 IST" finished-at="2020-02-06T02:43:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NewTourWithEmptyViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursTest@12405818]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T02:43:58 IST" finished-at="2020-02-06T02:43:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NewTourWithEmptyViewTest status=SUCCESS method=ToursTest.NewTourWithEmptyViewTest()[pri:0, instance:testcases.ToursTest@12405818] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursTest@12405818]" name="endReport" is-config="true" duration-ms="41" started-at="2020-02-06T02:43:58 IST" finished-at="2020-02-06T02:43:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursTest -->
      <class name="testcases.NVRsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="setup" is-config="true" duration-ms="3" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52419" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:28:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddAlreadyUsedNVRManuallyTest" duration-ms="16762" started-at="2020-02-05T19:28:44 IST" finished-at="2020-02-05T19:29:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddAlreadyUsedNVRManuallyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="631" started-at="2020-02-05T19:29:01 IST" finished-at="2020-02-05T19:29:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddAlreadyUsedNVRManuallyTest status=SUCCESS method=NVRsTest.AddAlreadyUsedNVRManuallyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52565" started-at="2020-02-05T19:31:45 IST" finished-at="2020-02-05T19:32:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndCheckStatusVTest" duration-ms="87054" started-at="2020-02-05T19:32:37 IST" finished-at="2020-02-05T19:34:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRAndCheckStatusVTest(NVRsTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndCheckStatusVTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1122" started-at="2020-02-05T19:34:04 IST" finished-at="2020-02-05T19:34:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndCheckStatusVTest status=FAILURE method=NVRsTest.AddNVRAndCheckStatusVTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52420" started-at="2020-02-05T19:34:05 IST" finished-at="2020-02-05T19:34:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRAndPressApplyTest" duration-ms="44165" started-at="2020-02-05T19:34:58 IST" finished-at="2020-02-05T19:35:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="610" started-at="2020-02-05T19:35:42 IST" finished-at="2020-02-05T19:35:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51258" started-at="2020-02-05T19:35:43 IST" finished-at="2020-02-05T19:36:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressApplyTest" duration-ms="43009" started-at="2020-02-05T19:36:34 IST" finished-at="2020-02-05T19:37:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressApplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="720" started-at="2020-02-05T19:37:17 IST" finished-at="2020-02-05T19:37:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressApplyTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressApplyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="50980" started-at="2020-02-05T19:37:18 IST" finished-at="2020-02-05T19:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndPressCloseTest" duration-ms="22672" started-at="2020-02-05T19:38:08 IST" finished-at="2020-02-05T19:38:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndPressCloseTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="914" started-at="2020-02-05T19:38:31 IST" finished-at="2020-02-05T19:38:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndPressCloseTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndPressCloseTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="51153" started-at="2020-02-05T19:38:32 IST" finished-at="2020-02-05T19:39:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyAndSwitchONSecuredTest" duration-ms="56445" started-at="2020-02-05T19:39:23 IST" finished-at="2020-02-05T19:40:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="678" started-at="2020-02-05T19:40:20 IST" finished-at="2020-02-05T19:40:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyAndSwitchONSecuredTest status=SUCCESS method=NVRsTest.AddNVRManuallyAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53582" started-at="2020-02-05T19:40:20 IST" finished-at="2020-02-05T19:41:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyCheckStatusTest" duration-ms="78675" started-at="2020-02-05T19:41:14 IST" finished-at="2020-02-05T19:42:33 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyCheckStatusTest(NVRsTest.java:507)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="779" started-at="2020-02-05T19:42:33 IST" finished-at="2020-02-05T19:42:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyCheckStatusTest status=FAILURE method=NVRsTest.AddNVRManuallyCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="69439" started-at="2020-02-05T19:42:33 IST" finished-at="2020-02-05T19:43:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest" duration-ms="78442" started-at="2020-02-05T19:43:43 IST" finished-at="2020-02-05T19:45:01 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest(NVRsTest.java:884)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="724" started-at="2020-02-05T19:45:01 IST" finished-at="2020-02-05T19:45:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest status=FAILURE method=NVRsTest.AddNVRManuallyWithSecuredPortAndSwitchONSecuredTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="68215" started-at="2020-02-05T19:45:02 IST" finished-at="2020-02-05T19:46:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRManuallyWithSecuredPortTest" duration-ms="210829" started-at="2020-02-05T19:46:10 IST" finished-at="2020-02-05T19:49:41 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Communication Failure] but found [Connecting...]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Communication Failure] but found [Connecting...]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRManuallyWithSecuredPortTest(NVRsTest.java:812)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRManuallyWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1066" started-at="2020-02-05T19:49:41 IST" finished-at="2020-02-05T19:49:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRManuallyWithSecuredPortTest status=FAILURE method=NVRsTest.AddNVRManuallyWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53947" started-at="2020-02-05T19:49:42 IST" finished-at="2020-02-05T19:50:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="AddNVRWithSecuredPortTest" duration-ms="122984" started-at="2020-02-05T19:50:36 IST" finished-at="2020-02-05T19:52:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.AddNVRWithSecuredPortTest(NVRsTest.java:163)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNVRWithSecuredPortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="679" started-at="2020-02-05T19:52:39 IST" finished-at="2020-02-05T19:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNVRWithSecuredPortTest status=FAILURE method=NVRsTest.AddNVRWithSecuredPortTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="70538" started-at="2020-02-05T21:02:01 IST" finished-at="2020-02-05T21:03:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByButtonTest" duration-ms="16505" started-at="2020-02-05T21:03:11 IST" finished-at="2020-02-05T21:03:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="643" started-at="2020-02-05T21:03:28 IST" finished-at="2020-02-05T21:03:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByButtonTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByButtonTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="67722" started-at="2020-02-05T21:03:28 IST" finished-at="2020-02-05T21:04:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="CancelRemovalNVRsByIconTest" duration-ms="14624" started-at="2020-02-05T21:04:36 IST" finished-at="2020-02-05T21:04:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovalNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="843" started-at="2020-02-05T21:04:51 IST" finished-at="2020-02-05T21:04:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovalNVRsByIconTest status=SUCCESS method=NVRsTest.CancelRemovalNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="56027" started-at="2020-02-05T21:09:25 IST" finished-at="2020-02-05T21:10:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeIPAdressAndCheckStatusTest" duration-ms="191566" started-at="2020-02-05T21:10:21 IST" finished-at="2020-02-05T21:13:33 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP] but found [IP]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP] but found [IP]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeIPAdressAndCheckStatusTest(NVRsTest.java:1356)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="679" started-at="2020-02-05T21:13:33 IST" finished-at="2020-02-05T21:13:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeIPAdressAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54351" started-at="2020-02-05T22:16:52 IST" finished-at="2020-02-05T22:17:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeNameTest" duration-ms="31097" started-at="2020-02-05T22:17:46 IST" finished-at="2020-02-05T22:18:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="803" started-at="2020-02-05T22:18:17 IST" finished-at="2020-02-05T22:18:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=NVRsTest.ChangeNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54183" started-at="2020-02-05T22:25:08 IST" finished-at="2020-02-05T22:26:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePasswordToInvalidAndCheckStatusTest" duration-ms="214952" started-at="2020-02-05T22:26:02 IST" finished-at="2020-02-05T22:29:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePasswordToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="643" started-at="2020-02-05T22:29:37 IST" finished-at="2020-02-05T22:29:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePasswordToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangePasswordToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54784" started-at="2020-02-05T22:29:37 IST" finished-at="2020-02-05T22:30:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangePortAndCheckStatusTest" duration-ms="140484" started-at="2020-02-05T22:30:32 IST" finished-at="2020-02-05T22:32:53 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [85] but found [8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [85] but found [8]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangePortAndCheckStatusTest(NVRsTest.java:1407)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1127" started-at="2020-02-05T22:32:53 IST" finished-at="2020-02-05T22:32:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortAndCheckStatusTest status=FAILURE method=NVRsTest.ChangePortAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54830" started-at="2020-02-05T23:22:48 IST" finished-at="2020-02-05T23:23:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeSecuredAndCheckStatusTest" duration-ms="265152" started-at="2020-02-05T23:23:43 IST" finished-at="2020-02-05T23:28:08 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [V] but found [NVR cannot be synced. Its system unique id belongs to another NVR.]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.ChangeSecuredAndCheckStatusTest(NVRsTest.java:1533)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeSecuredAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="800" started-at="2020-02-05T23:28:08 IST" finished-at="2020-02-05T23:28:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeSecuredAndCheckStatusTest status=FAILURE method=NVRsTest.ChangeSecuredAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54958" started-at="2020-02-05T23:49:53 IST" finished-at="2020-02-05T23:50:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="ChangeUserNameToInvalidAndCheckStatusTest" duration-ms="211337" started-at="2020-02-05T23:50:48 IST" finished-at="2020-02-05T23:54:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameToInvalidAndCheckStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T23:54:19 IST" finished-at="2020-02-05T23:54:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameToInvalidAndCheckStatusTest status=SUCCESS method=NVRsTest.ChangeUserNameToInvalidAndCheckStatusTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53714" started-at="2020-02-06T01:36:40 IST" finished-at="2020-02-06T01:37:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest" duration-ms="28332" started-at="2020-02-06T01:37:34 IST" finished-at="2020-02-06T01:38:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1045" started-at="2020-02-06T01:38:02 IST" finished-at="2020-02-06T01:38:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest status=SUCCESS method=NVRsTest.DeleteOneNVRClickOnAnotherNVRAndCheckPropertiesPanelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="55546" started-at="2020-02-06T02:19:02 IST" finished-at="2020-02-06T02:19:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterDiscoveredNVRsTest" duration-ms="21614" started-at="2020-02-06T02:19:57 IST" finished-at="2020-02-06T02:20:19 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.53] but found [172.20.1.50]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.53] but found [172.20.1.50]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsTest.FilterDiscoveredNVRsTest(NVRsTest.java:280)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="3498" started-at="2020-02-06T02:20:19 IST" finished-at="2020-02-06T02:20:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterDiscoveredNVRsTest status=FAILURE method=NVRsTest.FilterDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52378" started-at="2020-02-06T02:20:22 IST" finished-at="2020-02-06T02:21:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="FilterNVRsTest" duration-ms="5493" started-at="2020-02-06T02:21:15 IST" finished-at="2020-02-06T02:21:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T02:21:20 IST" finished-at="2020-02-06T02:21:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterNVRsTest status=SUCCESS method=NVRsTest.FilterNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54305" started-at="2020-02-06T02:33:03 IST" finished-at="2020-02-06T02:33:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidIPAdressInAddNVRManualyTest" duration-ms="22703" started-at="2020-02-06T02:33:57 IST" finished-at="2020-02-06T02:34:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidIPAdressInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="655" started-at="2020-02-06T02:34:20 IST" finished-at="2020-02-06T02:34:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidIPAdressInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidIPAdressInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53861" started-at="2020-02-06T02:34:20 IST" finished-at="2020-02-06T02:35:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPasswordInAddNVRManualyTest" duration-ms="46346" started-at="2020-02-06T02:35:14 IST" finished-at="2020-02-06T02:36:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPasswordInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="940" started-at="2020-02-06T02:36:01 IST" finished-at="2020-02-06T02:36:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPasswordInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPasswordInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54156" started-at="2020-02-06T02:36:02 IST" finished-at="2020-02-06T02:36:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidPortInAddNVRManualyTest" duration-ms="50548" started-at="2020-02-06T02:36:56 IST" finished-at="2020-02-06T02:37:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidPortInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="851" started-at="2020-02-06T02:37:46 IST" finished-at="2020-02-06T02:37:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidPortInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidPortInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54256" started-at="2020-02-06T02:37:47 IST" finished-at="2020-02-06T02:38:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="InputInvalidUserNameInAddNVRManualyTest" duration-ms="47361" started-at="2020-02-06T02:38:41 IST" finished-at="2020-02-06T02:39:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputInvalidUserNameInAddNVRManualyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="737" started-at="2020-02-06T02:39:29 IST" finished-at="2020-02-06T02:39:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InputInvalidUserNameInAddNVRManualyTest status=SUCCESS method=NVRsTest.InputInvalidUserNameInAddNVRManualyTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="52297" started-at="2020-02-06T02:39:30 IST" finished-at="2020-02-06T02:40:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="MultipleNVRsAdditingTest" duration-ms="78435" started-at="2020-02-06T02:40:22 IST" finished-at="2020-02-06T02:41:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [12] but found [11]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [12] but found [11]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.NVRsTest.MultipleNVRsAdditingTest(NVRsTest.java:354)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleNVRsAdditingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="988" started-at="2020-02-06T02:41:40 IST" finished-at="2020-02-06T02:41:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MultipleNVRsAdditingTest status=FAILURE method=NVRsTest.MultipleNVRsAdditingTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="72536" started-at="2020-02-06T02:43:58 IST" finished-at="2020-02-06T02:45:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByIconTest" duration-ms="24341" started-at="2020-02-06T02:45:11 IST" finished-at="2020-02-06T02:45:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-06T02:45:35 IST" finished-at="2020-02-06T02:45:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByIconTest status=SUCCESS method=NVRsTest.RemoveNVRsByIconTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="69283" started-at="2020-02-06T03:33:56 IST" finished-at="2020-02-06T03:35:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SelectNVRandPressCancelTest" duration-ms="25810" started-at="2020-02-06T03:35:06 IST" finished-at="2020-02-06T03:35:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectNVRandPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="927" started-at="2020-02-06T03:35:31 IST" finished-at="2020-02-06T03:35:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectNVRandPressCancelTest status=SUCCESS method=NVRsTest.SelectNVRandPressCancelTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="69677" started-at="2020-02-06T03:35:32 IST" finished-at="2020-02-06T03:36:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingDiscoveredNVRsTest" duration-ms="23830" started-at="2020-02-06T03:36:42 IST" finished-at="2020-02-06T03:37:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingDiscoveredNVRsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="881" started-at="2020-02-06T03:37:06 IST" finished-at="2020-02-06T03:37:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingDiscoveredNVRsTest status=SUCCESS method=NVRsTest.SortingDiscoveredNVRsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="69631" started-at="2020-02-06T03:37:07 IST" finished-at="2020-02-06T03:38:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByIPAdressTest" duration-ms="142632" started-at="2020-02-06T03:38:16 IST" finished-at="2020-02-06T03:40:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="1030" started-at="2020-02-06T03:40:39 IST" finished-at="2020-02-06T03:40:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByIPAdressTest status=SUCCESS method=NVRsTest.SortingNVRsByIPAdressTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="65684" started-at="2020-02-06T03:40:40 IST" finished-at="2020-02-06T03:41:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByNameTest" duration-ms="12387" started-at="2020-02-06T03:41:46 IST" finished-at="2020-02-06T03:41:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="970" started-at="2020-02-06T03:41:58 IST" finished-at="2020-02-06T03:41:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByNameTest status=SUCCESS method=NVRsTest.SortingNVRsByNameTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="65811" started-at="2020-02-06T03:41:59 IST" finished-at="2020-02-06T03:43:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SortingNVRsByVersionTest" duration-ms="11307" started-at="2020-02-06T03:43:05 IST" finished-at="2020-02-06T03:43:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SortingNVRsByVersionTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="660" started-at="2020-02-06T03:43:16 IST" finished-at="2020-02-06T03:43:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SortingNVRsByVersionTest status=SUCCESS method=NVRsTest.SortingNVRsByVersionTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="69624" started-at="2020-02-06T03:43:17 IST" finished-at="2020-02-06T03:44:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchOffStorageDefinitionsAndPressNoTest" duration-ms="48779" started-at="2020-02-06T03:44:26 IST" finished-at="2020-02-06T03:45:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchOffStorageDefinitionsAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="544" started-at="2020-02-06T03:45:15 IST" finished-at="2020-02-06T03:45:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchOffStorageDefinitionsAndPressNoTest status=SUCCESS method=NVRsTest.SwitchOffStorageDefinitionsAndPressNoTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="53682" started-at="2020-02-06T03:53:06 IST" finished-at="2020-02-06T03:54:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="SwitchStorageDefinitionsTest" duration-ms="35777" started-at="2020-02-06T03:54:00 IST" finished-at="2020-02-06T03:54:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="654" started-at="2020-02-06T03:54:36 IST" finished-at="2020-02-06T03:54:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsTest status=SUCCESS method=NVRsTest.SwitchStorageDefinitionsTest()[pri:0, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="gotoNVRPage" is-config="true" duration-ms="54691" started-at="2020-02-06T04:05:23 IST" finished-at="2020-02-06T04:06:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8]" name="RemoveNVRsByButtonTest" duration-ms="28831" started-at="2020-02-06T04:06:18 IST" finished-at="2020-02-06T04:06:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveNVRsByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsTest@25359ed8]" name="afterMethod" is-config="true" duration-ms="991" started-at="2020-02-06T04:06:47 IST" finished-at="2020-02-06T04:06:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveNVRsByButtonTest status=SUCCESS method=NVRsTest.RemoveNVRsByButtonTest()[pri:1, instance:testcases.NVRsTest@25359ed8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsTest@25359ed8]" name="endReport" is-config="true" duration-ms="38" started-at="2020-02-06T04:06:48 IST" finished-at="2020-02-06T04:06:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsTest -->
      <class name="testcases.WebPagesTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T20:44:23 IST" finished-at="2020-02-05T20:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104111" started-at="2020-02-05T20:44:23 IST" finished-at="2020-02-05T20:46:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="AddNewWebPageTest" duration-ms="588" started-at="2020-02-05T20:46:07 IST" finished-at="2020-02-05T20:46:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewWebPageTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="573" started-at="2020-02-05T20:46:08 IST" finished-at="2020-02-05T20:46:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewWebPageTest status=SUCCESS method=WebPagesTest.AddNewWebPageTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="114458" started-at="2020-02-05T21:04:51 IST" finished-at="2020-02-05T21:06:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByButtonTest" duration-ms="30148" started-at="2020-02-05T21:06:46 IST" finished-at="2020-02-05T21:07:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="871" started-at="2020-02-05T21:07:16 IST" finished-at="2020-02-05T21:07:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByButtonTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="100617" started-at="2020-02-05T21:07:17 IST" finished-at="2020-02-05T21:08:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="CancelWebPageRemovingByIconTest" duration-ms="27139" started-at="2020-02-05T21:08:58 IST" finished-at="2020-02-05T21:09:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelWebPageRemovingByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-05T21:09:25 IST" finished-at="2020-02-05T21:09:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelWebPageRemovingByIconTest status=SUCCESS method=WebPagesTest.CancelWebPageRemovingByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="101188" started-at="2020-02-05T22:20:51 IST" finished-at="2020-02-05T22:22:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeNameTest" duration-ms="34135" started-at="2020-02-05T22:22:32 IST" finished-at="2020-02-05T22:23:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="561" started-at="2020-02-05T22:23:06 IST" finished-at="2020-02-05T22:23:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=SUCCESS method=WebPagesTest.ChangeNameTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="114314" started-at="2020-02-05T22:45:40 IST" finished-at="2020-02-05T22:47:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeStatusTest" duration-ms="26078" started-at="2020-02-05T22:47:34 IST" finished-at="2020-02-05T22:48:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="693" started-at="2020-02-05T22:48:00 IST" finished-at="2020-02-05T22:48:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeStatusTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="104281" started-at="2020-02-05T22:48:01 IST" finished-at="2020-02-05T22:49:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueBySpinnerTest" duration-ms="100229" started-at="2020-02-05T22:49:45 IST" finished-at="2020-02-05T22:51:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueBySpinnerTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="604" started-at="2020-02-05T22:51:25 IST" finished-at="2020-02-05T22:51:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueBySpinnerTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueBySpinnerTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="119713" started-at="2020-02-05T22:51:26 IST" finished-at="2020-02-05T22:53:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRefreshTimeValueTest" duration-ms="28479" started-at="2020-02-05T22:53:26 IST" finished-at="2020-02-05T22:53:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRefreshTimeValueTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-05T22:53:54 IST" finished-at="2020-02-05T22:53:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRefreshTimeValueTest status=SUCCESS method=WebPagesTest.ChangeRefreshTimeValueTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="101921" started-at="2020-02-05T23:20:36 IST" finished-at="2020-02-05T23:22:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeRemarksTest" duration-ms="29097" started-at="2020-02-05T23:22:18 IST" finished-at="2020-02-05T23:22:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="1001" started-at="2020-02-05T23:22:47 IST" finished-at="2020-02-05T23:22:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=WebPagesTest.ChangeRemarksTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="115358" started-at="2020-02-05T23:28:09 IST" finished-at="2020-02-05T23:30:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeURLTest" duration-ms="32137" started-at="2020-02-05T23:30:05 IST" finished-at="2020-02-05T23:30:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="834" started-at="2020-02-05T23:30:37 IST" finished-at="2020-02-05T23:30:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeURLTest status=SUCCESS method=WebPagesTest.ChangeURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="167382" started-at="2020-02-06T00:53:32 IST" finished-at="2020-02-06T00:56:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="ChangeVisibilityStatusTest" duration-ms="34776" started-at="2020-02-06T00:56:19 IST" finished-at="2020-02-06T00:56:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="698" started-at="2020-02-06T00:56:54 IST" finished-at="2020-02-06T00:56:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=WebPagesTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="161855" started-at="2020-02-06T01:52:26 IST" finished-at="2020-02-06T01:55:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteURLTest" duration-ms="11076" started-at="2020-02-06T01:55:08 IST" finished-at="2020-02-06T01:55:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteURLTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="912" started-at="2020-02-06T01:55:19 IST" finished-at="2020-02-06T01:55:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteURLTest status=SUCCESS method=WebPagesTest.DeleteURLTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="162896" started-at="2020-02-06T02:08:39 IST" finished-at="2020-02-06T02:11:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByButtonTest" duration-ms="73321" started-at="2020-02-06T02:11:22 IST" finished-at="2020-02-06T02:12:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="955" started-at="2020-02-06T02:12:35 IST" finished-at="2020-02-06T02:12:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByButtonTest status=SUCCESS method=WebPagesTest.DeleteWebPageByButtonTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="163899" started-at="2020-02-06T02:12:36 IST" finished-at="2020-02-06T02:15:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="DeleteWebPageByIconTest" duration-ms="13471" started-at="2020-02-06T02:15:20 IST" finished-at="2020-02-06T02:15:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWebPageByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="748" started-at="2020-02-06T02:15:33 IST" finished-at="2020-02-06T02:15:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWebPageByIconTest status=SUCCESS method=WebPagesTest.DeleteWebPageByIconTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToWebPagesPage()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="GoToWebPagesPage" is-config="true" duration-ms="100210" started-at="2020-02-06T03:56:27 IST" finished-at="2020-02-06T03:58:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToWebPagesPage -->
        <test-method status="PASS" signature="WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="WebPagesFilterTest" duration-ms="12455" started-at="2020-02-06T03:58:07 IST" finished-at="2020-02-06T03:58:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebPagesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesTest@314c508a]" name="afterMethod" is-config="true" duration-ms="974" started-at="2020-02-06T03:58:19 IST" finished-at="2020-02-06T03:58:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WebPagesFilterTest status=SUCCESS method=WebPagesTest.WebPagesFilterTest()[pri:0, instance:testcases.WebPagesTest@314c508a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.WebPagesTest@314c508a]" name="endReport" is-config="true" duration-ms="59" started-at="2020-02-06T03:58:20 IST" finished-at="2020-02-06T03:58:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.WebPagesTest -->
      <class name="testcases.GroupsHierarchyTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="startReport" is-config="true" duration-ms="86" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T19:29:01 IST" finished-at="2020-02-05T19:29:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="94327" started-at="2020-02-05T19:29:01 IST" finished-at="2020-02-05T19:30:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddGroupAndCheckInMonitoringTest" duration-ms="67857" started-at="2020-02-05T19:30:36 IST" finished-at="2020-02-05T19:31:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="955" started-at="2020-02-05T19:31:44 IST" finished-at="2020-02-05T19:31:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.AddGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103497" started-at="2020-02-05T20:46:09 IST" finished-at="2020-02-05T20:47:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="AddSubGroupTest" duration-ms="38549" started-at="2020-02-05T20:47:52 IST" finished-at="2020-02-05T20:48:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddSubGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="699" started-at="2020-02-05T20:48:31 IST" finished-at="2020-02-05T20:48:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddSubGroupTest status=SUCCESS method=GroupsHierarchyTest.AddSubGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="100253" started-at="2020-02-06T01:31:30 IST" finished-at="2020-02-06T01:33:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndCheckInMonitoringTest" duration-ms="76085" started-at="2020-02-06T01:33:10 IST" finished-at="2020-02-06T01:34:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="859" started-at="2020-02-06T01:34:26 IST" finished-at="2020-02-06T01:34:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="100867" started-at="2020-02-06T01:34:27 IST" finished-at="2020-02-06T01:36:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteGroupAndPressNoTest" duration-ms="30662" started-at="2020-02-06T01:36:08 IST" finished-at="2020-02-06T01:36:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteGroupAndPressNoTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="965" started-at="2020-02-06T01:36:39 IST" finished-at="2020-02-06T01:36:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteGroupAndPressNoTest status=SUCCESS method=GroupsHierarchyTest.DeleteGroupAndPressNoTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="160393" started-at="2020-02-06T01:38:03 IST" finished-at="2020-02-06T01:40:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCancelRemovingTest" duration-ms="4620" started-at="2020-02-06T01:40:43 IST" finished-at="2020-02-06T01:40:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCancelRemovingTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="1053" started-at="2020-02-06T01:40:48 IST" finished-at="2020-02-06T01:40:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCancelRemovingTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCancelRemovingTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="109130" started-at="2020-02-06T01:40:49 IST" finished-at="2020-02-06T01:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DeleteResourceByButtonAndCheckInMonitoringTest" duration-ms="4178" started-at="2020-02-06T01:42:38 IST" finished-at="2020-02-06T01:42:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteResourceByButtonAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="627" started-at="2020-02-06T01:42:42 IST" finished-at="2020-02-06T01:42:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteResourceByButtonAndCheckInMonitoringTest status=SUCCESS method=GroupsHierarchyTest.DeleteResourceByButtonAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="160632" started-at="2020-02-06T02:15:34 IST" finished-at="2020-02-06T02:18:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="DragResourceToGroupTest" duration-ms="46598" started-at="2020-02-06T02:18:15 IST" finished-at="2020-02-06T02:19:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DragResourceToGroupTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-06T02:19:01 IST" finished-at="2020-02-06T02:19:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DragResourceToGroupTest status=SUCCESS method=GroupsHierarchyTest.DragResourceToGroupTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="161122" started-at="2020-02-06T02:45:36 IST" finished-at="2020-02-06T02:48:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="FAIL" signature="RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndCheckInMonitoringTest" duration-ms="46036" started-at="2020-02-06T02:48:17 IST" finished-at="2020-02-06T02:49:03 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest(GroupsHierarchyTest.java:309)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndCheckInMonitoringTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="1255" started-at="2020-02-06T02:49:03 IST" finished-at="2020-02-06T02:49:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndCheckInMonitoringTest status=FAILURE method=GroupsHierarchyTest.RenameGroupAndCheckInMonitoringTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="111918" started-at="2020-02-06T02:49:04 IST" finished-at="2020-02-06T02:50:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="RenameGroupAndClickCancelIconTest" duration-ms="2687" started-at="2020-02-06T02:50:56 IST" finished-at="2020-02-06T02:50:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RenameGroupAndClickCancelIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="934" started-at="2020-02-06T02:50:59 IST" finished-at="2020-02-06T02:51:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RenameGroupAndClickCancelIconTest status=SUCCESS method=GroupsHierarchyTest.RenameGroupAndClickCancelIconTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103014" started-at="2020-02-06T02:51:00 IST" finished-at="2020-02-06T02:52:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="ResourcesFilterTest" duration-ms="3731" started-at="2020-02-06T02:52:43 IST" finished-at="2020-02-06T02:52:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourcesFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="afterMethod" is-config="true" duration-ms="593" started-at="2020-02-06T02:52:46 IST" finished-at="2020-02-06T02:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourcesFilterTest status=SUCCESS method=GroupsHierarchyTest.ResourcesFilterTest()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.GroupsHierarchyTest@1445d7f]" name="endReport" is-config="true" duration-ms="32" started-at="2020-02-06T02:52:47 IST" finished-at="2020-02-06T02:52:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.GroupsHierarchyTest -->
      <class name="testcases.WebPagesElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="GoToGroupsHierarchyPage()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="GoToGroupsHierarchyPage" is-config="true" duration-ms="103289" started-at="2020-02-05T20:42:38 IST" finished-at="2020-02-05T20:44:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToGroupsHierarchyPage -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T20:42:38 IST" finished-at="2020-02-05T20:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="AddNewWebPageExitAndSaveTest()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="AddNewWebPageExitAndSaveTest" duration-ms="911" started-at="2020-02-05T20:44:21 IST" finished-at="2020-02-05T20:44:22 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testcases.WebPagesElementsTest.AddNewWebPageExitAndSaveTest(WebPagesElementsTest.java:171)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewWebPageExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="afterMethod" is-config="true" duration-ms="921" started-at="2020-02-05T20:44:22 IST" finished-at="2020-02-05T20:44:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewWebPageExitAndSaveTest status=FAILURE method=WebPagesElementsTest.AddNewWebPageExitAndSaveTest()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.WebPagesElementsTest@21a947fe]" name="endReport" is-config="true" duration-ms="186" started-at="2020-02-05T20:44:23 IST" finished-at="2020-02-05T20:44:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.WebPagesElementsTest -->
      <class name="testcases.NVRsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T21:13:33 IST" finished-at="2020-02-05T21:13:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52848" started-at="2020-02-05T21:13:33 IST" finished-at="2020-02-05T21:14:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitCancelUnsavedChangesTest" duration-ms="209854" started-at="2020-02-05T21:14:26 IST" finished-at="2020-02-05T21:17:56 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46IP30] but found [IP30]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46IP30] but found [IP30]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest(NVRsElementsTest.java:377)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="925" started-at="2020-02-05T21:17:56 IST" finished-at="2020-02-05T21:17:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeIPAdressExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54718" started-at="2020-02-05T21:17:57 IST" finished-at="2020-02-05T21:18:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitPressDontSaveUnsavedChangesTest" duration-ms="255122" started-at="2020-02-05T21:18:52 IST" finished-at="2020-02-05T21:23:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="560" started-at="2020-02-05T21:23:07 IST" finished-at="2020-02-05T21:23:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55996" started-at="2020-02-05T21:23:08 IST" finished-at="2020-02-05T21:24:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangeIPAdressExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressExitPressSaveUnsavedChangesTest" duration-ms="244623" started-at="2020-02-05T21:24:04 IST" finished-at="2020-02-05T21:28:08 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testcases.NVRsElementsTest.ChangeIPAdressExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:472)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="951" started-at="2020-02-05T21:28:08 IST" finished-at="2020-02-05T21:28:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.ChangeIPAdressExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="71226" started-at="2020-02-05T21:28:09 IST" finished-at="2020-02-05T21:29:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeIPAdressPressCancelExitTest" duration-ms="234968" started-at="2020-02-05T21:29:20 IST" finished-at="2020-02-05T21:33:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeIPAdressPressCancelExitTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-05T21:33:15 IST" finished-at="2020-02-05T21:33:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeIPAdressPressCancelExitTest status=SUCCESS method=NVRsElementsTest.ChangeIPAdressPressCancelExitTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53947" started-at="2020-02-05T22:08:20 IST" finished-at="2020-02-05T22:09:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressDontSaveUnsavedChangesTest" duration-ms="74714" started-at="2020-02-05T22:09:14 IST" finished-at="2020-02-05T22:10:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T22:10:29 IST" finished-at="2020-02-05T22:10:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52107" started-at="2020-02-05T22:10:30 IST" finished-at="2020-02-05T22:11:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitPressSaveUnsavedChangesTest" duration-ms="262197" started-at="2020-02-05T22:11:22 IST" finished-at="2020-02-05T22:15:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="540" started-at="2020-02-05T22:15:44 IST" finished-at="2020-02-05T22:15:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55228" started-at="2020-02-05T22:15:45 IST" finished-at="2020-02-05T22:16:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNamePressCancelTest" duration-ms="11109" started-at="2020-02-05T22:16:40 IST" finished-at="2020-02-05T22:16:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNamePressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="680" started-at="2020-02-05T22:16:51 IST" finished-at="2020-02-05T22:16:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNamePressCancelTest status=SUCCESS method=NVRsElementsTest.ChangeNamePressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55867" started-at="2020-02-05T22:32:54 IST" finished-at="2020-02-05T22:33:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitCancelUnsavedChangesTest" duration-ms="31277" started-at="2020-02-05T22:33:50 IST" finished-at="2020-02-05T22:34:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="544" started-at="2020-02-05T22:34:21 IST" finished-at="2020-02-05T22:34:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52189" started-at="2020-02-05T22:34:22 IST" finished-at="2020-02-05T22:35:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressDontSaveUnsavedChangesTest" duration-ms="246741" started-at="2020-02-05T22:35:14 IST" finished-at="2020-02-05T22:39:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="744" started-at="2020-02-05T22:39:20 IST" finished-at="2020-02-05T22:39:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54005" started-at="2020-02-05T22:39:21 IST" finished-at="2020-02-05T22:40:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortExitPressSaveUnsavedChangesTest" duration-ms="243217" started-at="2020-02-05T22:40:15 IST" finished-at="2020-02-05T22:44:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="533" started-at="2020-02-05T22:44:18 IST" finished-at="2020-02-05T22:44:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52606" started-at="2020-02-05T22:44:19 IST" finished-at="2020-02-05T22:45:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangePortPressCancelTest" duration-ms="27192" started-at="2020-02-05T22:45:12 IST" finished-at="2020-02-05T22:45:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [80] but found [291]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [80] but found [291]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.ChangePortPressCancelTest(NVRsElementsTest.java:557)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangePortPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="962" started-at="2020-02-05T22:45:39 IST" finished-at="2020-02-05T22:45:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangePortPressCancelTest status=FAILURE method=NVRsElementsTest.ChangePortPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69324" started-at="2020-02-05T23:30:37 IST" finished-at="2020-02-05T23:31:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameAndPressCancel" duration-ms="189549" started-at="2020-02-05T23:31:47 IST" finished-at="2020-02-05T23:34:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameAndPressCancel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="875" started-at="2020-02-05T23:34:56 IST" finished-at="2020-02-05T23:34:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameAndPressCancel status=SUCCESS method=NVRsElementsTest.ChangeUserNameAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="71824" started-at="2020-02-05T23:34:57 IST" finished-at="2020-02-05T23:36:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitCancelUnsavedChangesTest" duration-ms="227120" started-at="2020-02-05T23:36:09 IST" finished-at="2020-02-05T23:39:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="796" started-at="2020-02-05T23:39:56 IST" finished-at="2020-02-05T23:39:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitCancelUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69689" started-at="2020-02-05T23:39:57 IST" finished-at="2020-02-05T23:41:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressDontSaveUnsavedChangesTest" duration-ms="235467" started-at="2020-02-05T23:41:07 IST" finished-at="2020-02-05T23:45:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-05T23:45:02 IST" finished-at="2020-02-05T23:45:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressDontSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53960" started-at="2020-02-05T23:45:03 IST" finished-at="2020-02-05T23:45:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeUserNameExitPressSaveUnsavedChangesTest" duration-ms="235408" started-at="2020-02-05T23:45:57 IST" finished-at="2020-02-05T23:49:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeUserNameExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="959" started-at="2020-02-05T23:49:52 IST" finished-at="2020-02-05T23:49:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeUserNameExitPressSaveUnsavedChangesTest status=SUCCESS method=NVRsElementsTest.ChangeUserNameExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53532" started-at="2020-02-06T00:56:55 IST" finished-at="2020-02-06T00:57:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeIPAdressTest" duration-ms="59101" started-at="2020-02-06T00:57:48 IST" finished-at="2020-02-06T00:58:48 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest(NVRsElementsTest.java:522)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeIPAdressTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1058" started-at="2020-02-06T00:58:48 IST" finished-at="2020-02-06T00:58:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeIPAdressTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeIPAdressTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53377" started-at="2020-02-06T00:58:49 IST" finished-at="2020-02-06T00:59:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeNameTest" duration-ms="62648" started-at="2020-02-06T00:59:42 IST" finished-at="2020-02-06T01:00:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="530" started-at="2020-02-06T01:00:45 IST" finished-at="2020-02-06T01:00:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeNameTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangeNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52202" started-at="2020-02-06T01:00:45 IST" finished-at="2020-02-06T01:01:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePasswordTest" duration-ms="67348" started-at="2020-02-06T01:01:37 IST" finished-at="2020-02-06T01:02:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePasswordTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="652" started-at="2020-02-06T01:02:45 IST" finished-at="2020-02-06T01:02:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePasswordTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangePasswordTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="56341" started-at="2020-02-06T01:02:45 IST" finished-at="2020-02-06T01:03:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangePortTest" duration-ms="74903" started-at="2020-02-06T01:03:42 IST" finished-at="2020-02-06T01:04:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangePortTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-06T01:04:57 IST" finished-at="2020-02-06T01:04:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangePortTest status=SUCCESS method=NVRsElementsTest.CheckPropertiesAfterChangePortTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="64622" started-at="2020-02-06T01:04:57 IST" finished-at="2020-02-06T01:06:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="CheckPropertiesAfterChangeUserNameTest" duration-ms="65015" started-at="2020-02-06T01:06:02 IST" finished-at="2020-02-06T01:07:07 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [172.20.1.46] but found [172.20.1.42 Name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [172.20.1.46] but found [172.20.1.42 Name]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at testcases.NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest(NVRsElementsTest.java:1126)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckPropertiesAfterChangeUserNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="651" started-at="2020-02-06T01:07:07 IST" finished-at="2020-02-06T01:07:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CheckPropertiesAfterChangeUserNameTest status=FAILURE method=NVRsElementsTest.CheckPropertiesAfterChangeUserNameTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="53590" started-at="2020-02-06T01:17:11 IST" finished-at="2020-02-06T01:18:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="DecreasePortExitCancelUnsavedChangesTest" duration-ms="15426" started-at="2020-02-06T01:18:04 IST" finished-at="2020-02-06T01:18:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest(NVRsElementsTest.java:811)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DecreasePortExitCancelUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="702" started-at="2020-02-06T01:18:20 IST" finished-at="2020-02-06T01:18:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DecreasePortExitCancelUnsavedChangesTest status=FAILURE method=NVRsElementsTest.DecreasePortExitCancelUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55359" started-at="2020-02-06T02:25:49 IST" finished-at="2020-02-06T02:26:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="IncreasePortAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="IncreasePortAndPressCancel" duration-ms="133052" started-at="2020-02-06T02:26:45 IST" finished-at="2020-02-06T02:28:58 IST">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for value to contain "false". Current value: "null" (tried for 15 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:2240/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 833dfb4c-cb45-4441-a61c-bc2852701c32]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for value to contain "false". Current value: "null" (tried for 15 second(s) with 500 MILLISECONDS interval)
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:2240/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 833dfb4c-cb45-4441-a61c-bc2852701c32
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at pageObjects.NVRsPage.CancelChangesButton(NVRsPage.java:432)
at testcases.NVRsElementsTest.IncreasePortAndPressCancel(NVRsElementsTest.java:776)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IncreasePortAndPressCancel -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="732" started-at="2020-02-06T02:28:58 IST" finished-at="2020-02-06T02:28:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IncreasePortAndPressCancel status=FAILURE method=NVRsElementsTest.IncreasePortAndPressCancel()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="52698" started-at="2020-02-06T02:28:58 IST" finished-at="2020-02-06T02:29:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="IncreasePortExitPressDontSaveUnsavedChangesTest" duration-ms="190897" started-at="2020-02-06T02:29:51 IST" finished-at="2020-02-06T02:33:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest(NVRsElementsTest.java:851)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IncreasePortExitPressDontSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="741" started-at="2020-02-06T02:33:02 IST" finished-at="2020-02-06T02:33:03 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=IncreasePortExitPressDontSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.IncreasePortExitPressDontSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55315" started-at="2020-02-06T03:45:16 IST" finished-at="2020-02-06T03:46:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsAndPressCancelTest" duration-ms="27788" started-at="2020-02-06T03:46:11 IST" finished-at="2020-02-06T03:46:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="1003" started-at="2020-02-06T03:46:39 IST" finished-at="2020-02-06T03:46:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54146" started-at="2020-02-06T03:46:40 IST" finished-at="2020-02-06T03:47:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressCancelTest" duration-ms="44153" started-at="2020-02-06T03:47:34 IST" finished-at="2020-02-06T03:48:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="526" started-at="2020-02-06T03:48:18 IST" finished-at="2020-02-06T03:48:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressCancelTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressCancelTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69840" started-at="2020-02-06T03:48:19 IST" finished-at="2020-02-06T03:49:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressDontSaveButtonTest" duration-ms="72719" started-at="2020-02-06T03:49:28 IST" finished-at="2020-02-06T03:50:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressDontSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="697" started-at="2020-02-06T03:50:41 IST" finished-at="2020-02-06T03:50:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressDontSaveButtonTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressDontSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="69788" started-at="2020-02-06T03:50:42 IST" finished-at="2020-02-06T03:51:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="SwitchStorageDefinitionsExitAndPressSaveButtonTest" duration-ms="73805" started-at="2020-02-06T03:51:52 IST" finished-at="2020-02-06T03:53:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchStorageDefinitionsExitAndPressSaveButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="703" started-at="2020-02-06T03:53:06 IST" finished-at="2020-02-06T03:53:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SwitchStorageDefinitionsExitAndPressSaveButtonTest status=SUCCESS method=NVRsElementsTest.SwitchStorageDefinitionsExitAndPressSaveButtonTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="55388" started-at="2020-02-06T03:59:56 IST" finished-at="2020-02-06T04:00:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="FAIL" signature="uDecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="uDecreasePortExitPressSaveUnsavedChangesTest" duration-ms="186786" started-at="2020-02-06T04:00:51 IST" finished-at="2020-02-06T04:03:58 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases.NVRsElementsTest.uDecreasePortExitPressSaveUnsavedChangesTest(NVRsElementsTest.java:901)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uDecreasePortExitPressSaveUnsavedChangesTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="825" started-at="2020-02-06T04:03:58 IST" finished-at="2020-02-06T04:03:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=uDecreasePortExitPressSaveUnsavedChangesTest status=FAILURE method=NVRsElementsTest.uDecreasePortExitPressSaveUnsavedChangesTest()[pri:0, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gotoNVRPage()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="gotoNVRPage" is-config="true" duration-ms="54580" started-at="2020-02-06T04:03:59 IST" finished-at="2020-02-06T04:04:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gotoNVRPage -->
        <test-method status="PASS" signature="ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b]" name="ChangeNameExitCancelUnsavedChangesExitCancelTest" duration-ms="29019" started-at="2020-02-06T04:04:53 IST" finished-at="2020-02-06T04:05:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitCancelUnsavedChangesExitCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="afterMethod" is-config="true" duration-ms="742" started-at="2020-02-06T04:05:22 IST" finished-at="2020-02-06T04:05:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitCancelUnsavedChangesExitCancelTest status=SUCCESS method=NVRsElementsTest.ChangeNameExitCancelUnsavedChangesExitCancelTest()[pri:1, instance:testcases.NVRsElementsTest@5606c0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.NVRsElementsTest@5606c0b]" name="endReport" is-config="true" duration-ms="49" started-at="2020-02-06T04:05:23 IST" finished-at="2020-02-06T04:05:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.NVRsElementsTest -->
      <class name="testcases.ViewsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-06T02:52:47 IST" finished-at="2020-02-06T02:52:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="163625" started-at="2020-02-06T02:52:47 IST" finished-at="2020-02-06T02:55:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewTest" duration-ms="56742" started-at="2020-02-06T02:55:31 IST" finished-at="2020-02-06T02:56:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="934" started-at="2020-02-06T02:56:27 IST" finished-at="2020-02-06T02:56:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewTest status=SUCCESS method=ViewsTest.AddNewViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="167183" started-at="2020-02-06T02:56:28 IST" finished-at="2020-02-06T02:59:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="AddNewViewWithoutLayoutTest" duration-ms="6122" started-at="2020-02-06T02:59:16 IST" finished-at="2020-02-06T02:59:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="726" started-at="2020-02-06T02:59:22 IST" finished-at="2020-02-06T02:59:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutTest status=SUCCESS method=ViewsTest.AddNewViewWithoutLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="164147" started-at="2020-02-06T02:59:22 IST" finished-at="2020-02-06T03:02:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelDeletingViewByButton" duration-ms="31075" started-at="2020-02-06T03:02:07 IST" finished-at="2020-02-06T03:02:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelDeletingViewByButton -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="660" started-at="2020-02-06T03:02:38 IST" finished-at="2020-02-06T03:02:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelDeletingViewByButton status=SUCCESS method=ViewsTest.CancelDeletingViewByButton()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="167753" started-at="2020-02-06T03:02:38 IST" finished-at="2020-02-06T03:05:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="CancelRemovingViewByIconTest" duration-ms="32095" started-at="2020-02-06T03:05:26 IST" finished-at="2020-02-06T03:05:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelRemovingViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T03:05:58 IST" finished-at="2020-02-06T03:05:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelRemovingViewByIconTest status=SUCCESS method=ViewsTest.CancelRemovingViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="167644" started-at="2020-02-06T03:05:59 IST" finished-at="2020-02-06T03:08:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeLayoutTest" duration-ms="94151" started-at="2020-02-06T03:08:46 IST" finished-at="2020-02-06T03:10:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="573" started-at="2020-02-06T03:10:20 IST" finished-at="2020-02-06T03:10:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutTest status=SUCCESS method=ViewsTest.ChangeLayoutTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="116702" started-at="2020-02-06T03:10:21 IST" finished-at="2020-02-06T03:12:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeNameTest" duration-ms="60372" started-at="2020-02-06T03:12:18 IST" finished-at="2020-02-06T03:13:18 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with xpath == //div[@class='ui-grid-canvas']//div[@title='new view name12482'] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:4384/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: d58660a3-2321-488c-a681-048067da625c
*** Element info: {Using=xpath, value=//div[@class='ui-grid-canvas']//div[@title='new view name12482']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //div[@class='ui-grid-canvas']//div[@title='new view name12482'] (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z'
System info: host: 'BORSE-PC', ip: '172.20.1.42', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserName: internet explorer, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ie.useLegacyFileUploadDialogHandling: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:4384/, nativeEvents: true, requireWindowFocus: false}, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: d58660a3-2321-488c-a681-048067da625c
*** Element info: {Using=xpath, value=//div[@class='ui-grid-canvas']//div[@title='new view name12482']}
at sun.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)
at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
at pageObjects.ViewsPage.ClickOnViewByName(ViewsPage.java:378)
at testcases.ViewsTest.ChangeNameTest(ViewsTest.java:283)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="822" started-at="2020-02-06T03:13:18 IST" finished-at="2020-02-06T03:13:19 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameTest status=FAILURE method=ViewsTest.ChangeNameTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="115164" started-at="2020-02-06T03:13:19 IST" finished-at="2020-02-06T03:15:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeRemarksTest" duration-ms="40272" started-at="2020-02-06T03:15:14 IST" finished-at="2020-02-06T03:15:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="1027" started-at="2020-02-06T03:15:54 IST" finished-at="2020-02-06T03:15:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksTest status=SUCCESS method=ViewsTest.ChangeRemarksTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="105271" started-at="2020-02-06T03:15:55 IST" finished-at="2020-02-06T03:17:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ChangeVisibilityStatusTest" duration-ms="57713" started-at="2020-02-06T03:17:41 IST" finished-at="2020-02-06T03:18:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="881" started-at="2020-02-06T03:18:38 IST" finished-at="2020-02-06T03:18:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusTest status=SUCCESS method=ViewsTest.ChangeVisibilityStatusTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="114025" started-at="2020-02-06T03:18:39 IST" finished-at="2020-02-06T03:20:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewAndDragResourceTest" duration-ms="81310" started-at="2020-02-06T03:20:33 IST" finished-at="2020-02-06T03:21:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndDragResourceTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="747" started-at="2020-02-06T03:21:55 IST" finished-at="2020-02-06T03:21:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndDragResourceTest status=SUCCESS method=ViewsTest.ClearViewAndDragResourceTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="104228" started-at="2020-02-06T03:21:55 IST" finished-at="2020-02-06T03:23:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ClearViewTest" duration-ms="81395" started-at="2020-02-06T03:23:40 IST" finished-at="2020-02-06T03:25:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="645" started-at="2020-02-06T03:25:01 IST" finished-at="2020-02-06T03:25:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewTest status=SUCCESS method=ViewsTest.ClearViewTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="164273" started-at="2020-02-06T03:25:02 IST" finished-at="2020-02-06T03:27:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByButtonTest" duration-ms="43759" started-at="2020-02-06T03:27:46 IST" finished-at="2020-02-06T03:28:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="541" started-at="2020-02-06T03:28:30 IST" finished-at="2020-02-06T03:28:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByButtonTest status=SUCCESS method=ViewsTest.DeleteViewByButtonTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="106499" started-at="2020-02-06T03:28:30 IST" finished-at="2020-02-06T03:30:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="DeleteViewByIconTest" duration-ms="43282" started-at="2020-02-06T03:30:17 IST" finished-at="2020-02-06T03:31:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewByIconTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="534" started-at="2020-02-06T03:31:00 IST" finished-at="2020-02-06T03:31:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewByIconTest status=SUCCESS method=ViewsTest.DeleteViewByIconTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="167639" started-at="2020-02-06T03:31:01 IST" finished-at="2020-02-06T03:33:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ResourceFilterTest" duration-ms="7263" started-at="2020-02-06T03:33:48 IST" finished-at="2020-02-06T03:33:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="852" started-at="2020-02-06T03:33:55 IST" finished-at="2020-02-06T03:33:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ResourceFilterTest status=SUCCESS method=ViewsTest.ResourceFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="GoToViewPage" is-config="true" duration-ms="107150" started-at="2020-02-06T03:54:36 IST" finished-at="2020-02-06T03:56:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="ViewsFilterTest" duration-ms="2686" started-at="2020-02-06T03:56:23 IST" finished-at="2020-02-06T03:56:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ViewsFilterTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-06T03:56:26 IST" finished-at="2020-02-06T03:56:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ViewsFilterTest status=SUCCESS method=ViewsTest.ViewsFilterTest()[pri:0, instance:testcases.ViewsTest@6a396c1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsTest@6a396c1e]" name="endReport" is-config="true" duration-ms="70" started-at="2020-02-06T03:56:27 IST" finished-at="2020-02-06T03:56:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsTest -->
      <class name="testcases.ViewsElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="startReport" is-config="true" duration-ms="1" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="166924" started-at="2020-02-05T20:17:28 IST" finished-at="2020-02-05T20:20:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T20:17:28 IST" finished-at="2020-02-05T20:17:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewAndPressCancelTest" duration-ms="9578" started-at="2020-02-05T20:20:15 IST" finished-at="2020-02-05T20:20:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="777" started-at="2020-02-05T20:20:25 IST" finished-at="2020-02-05T20:20:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="182977" started-at="2020-02-05T20:20:26 IST" finished-at="2020-02-05T20:23:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressCancelTest" duration-ms="22139" started-at="2020-02-05T20:23:29 IST" finished-at="2020-02-05T20:23:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-05T20:23:51 IST" finished-at="2020-02-05T20:23:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="123486" started-at="2020-02-05T20:23:51 IST" finished-at="2020-02-05T20:25:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressDoNotSaveTest" duration-ms="29021" started-at="2020-02-05T20:25:55 IST" finished-at="2020-02-05T20:26:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="544" started-at="2020-02-05T20:26:24 IST" finished-at="2020-02-05T20:26:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="120858" started-at="2020-02-05T20:26:24 IST" finished-at="2020-02-05T20:28:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewExitAndPressSaveTest" duration-ms="27826" started-at="2020-02-05T20:28:25 IST" finished-at="2020-02-05T20:28:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-05T20:28:53 IST" finished-at="2020-02-05T20:28:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="165024" started-at="2020-02-05T20:28:53 IST" finished-at="2020-02-05T20:31:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndCancelTest" duration-ms="18742" started-at="2020-02-05T20:31:38 IST" finished-at="2020-02-05T20:31:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="578" started-at="2020-02-05T20:31:57 IST" finished-at="2020-02-05T20:31:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105453" started-at="2020-02-05T20:31:58 IST" finished-at="2020-02-05T20:33:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndDoNotSaveTest" duration-ms="25325" started-at="2020-02-05T20:33:43 IST" finished-at="2020-02-05T20:34:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="588" started-at="2020-02-05T20:34:09 IST" finished-at="2020-02-05T20:34:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104619" started-at="2020-02-05T20:34:09 IST" finished-at="2020-02-05T20:35:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithLayoutExitAndSaveTest" duration-ms="5686" started-at="2020-02-05T20:35:54 IST" finished-at="2020-02-05T20:35:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithLayoutExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="678" started-at="2020-02-05T20:35:59 IST" finished-at="2020-02-05T20:36:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithLayoutExitAndSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithLayoutExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="121006" started-at="2020-02-05T20:36:00 IST" finished-at="2020-02-05T20:38:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndCancelTest" duration-ms="19060" started-at="2020-02-05T20:38:01 IST" finished-at="2020-02-05T20:38:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="943" started-at="2020-02-05T20:38:20 IST" finished-at="2020-02-05T20:38:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndCancelTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="105733" started-at="2020-02-05T20:38:21 IST" finished-at="2020-02-05T20:40:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndDoNotSaveTest" duration-ms="24816" started-at="2020-02-05T20:40:07 IST" finished-at="2020-02-05T20:40:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="556" started-at="2020-02-05T20:40:32 IST" finished-at="2020-02-05T20:40:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndDoNotSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104544" started-at="2020-02-05T20:40:32 IST" finished-at="2020-02-05T20:42:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="AddNewViewWithoutLayoutAndExitAndSaveTest" duration-ms="20051" started-at="2020-02-05T20:42:17 IST" finished-at="2020-02-05T20:42:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewViewWithoutLayoutAndExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="1052" started-at="2020-02-05T20:42:37 IST" finished-at="2020-02-05T20:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewViewWithoutLayoutAndExitAndSaveTest status=SUCCESS method=ViewsElementsTest.AddNewViewWithoutLayoutAndExitAndSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="166520" started-at="2020-02-05T21:33:16 IST" finished-at="2020-02-05T21:36:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutAndPressCancelTest" duration-ms="21891" started-at="2020-02-05T21:36:02 IST" finished-at="2020-02-05T21:36:24 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutAndPressCancelTest(ViewsElementsTest.java:1331)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="810" started-at="2020-02-05T21:36:24 IST" finished-at="2020-02-05T21:36:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutAndPressCancelTest status=FAILURE method=ViewsElementsTest.ChangeLayoutAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="106406" started-at="2020-02-05T21:36:25 IST" finished-at="2020-02-05T21:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressCancelTest" duration-ms="31849" started-at="2020-02-05T21:38:11 IST" finished-at="2020-02-05T21:38:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="650" started-at="2020-02-05T21:38:43 IST" finished-at="2020-02-05T21:38:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeLayoutExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="106355" started-at="2020-02-05T21:38:44 IST" finished-at="2020-02-05T21:40:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressDontSaveTest" duration-ms="47629" started-at="2020-02-05T21:40:30 IST" finished-at="2020-02-05T21:41:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressDontSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-05T21:41:18 IST" finished-at="2020-02-05T21:41:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressDontSaveTest status=SUCCESS method=ViewsElementsTest.ChangeLayoutExitAndPressDontSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="107450" started-at="2020-02-05T21:41:18 IST" finished-at="2020-02-05T21:43:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeLayoutExitAndPressSaveTest" duration-ms="52781" started-at="2020-02-05T21:43:06 IST" finished-at="2020-02-05T21:43:59 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [9] but found [16]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [9] but found [16]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ChangeLayoutExitAndPressSaveTest(ViewsElementsTest.java:1560)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeLayoutExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="843" started-at="2020-02-05T21:43:59 IST" finished-at="2020-02-05T21:44:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeLayoutExitAndPressSaveTest status=FAILURE method=ViewsElementsTest.ChangeLayoutExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="166101" started-at="2020-02-05T21:46:54 IST" finished-at="2020-02-05T21:49:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameAndPressCancelTest" duration-ms="14445" started-at="2020-02-05T21:49:40 IST" finished-at="2020-02-05T21:49:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="838" started-at="2020-02-05T21:49:55 IST" finished-at="2020-02-05T21:49:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="166136" started-at="2020-02-05T21:55:31 IST" finished-at="2020-02-05T21:58:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressCancelTest" duration-ms="25457" started-at="2020-02-05T21:58:17 IST" finished-at="2020-02-05T21:58:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-05T21:58:43 IST" finished-at="2020-02-05T21:58:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="164573" started-at="2020-02-05T21:58:43 IST" finished-at="2020-02-05T22:01:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressDoNotSaveTest" duration-ms="76945" started-at="2020-02-05T22:01:28 IST" finished-at="2020-02-05T22:02:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="644" started-at="2020-02-05T22:02:45 IST" finished-at="2020-02-05T22:02:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="122553" started-at="2020-02-05T22:02:45 IST" finished-at="2020-02-05T22:04:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeNameExitAndPressSaveTest" duration-ms="57331" started-at="2020-02-05T22:04:48 IST" finished-at="2020-02-05T22:05:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="528" started-at="2020-02-05T22:05:45 IST" finished-at="2020-02-05T22:05:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeNameExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="117160" started-at="2020-02-05T22:57:07 IST" finished-at="2020-02-05T22:59:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksAndPressCancelTest" duration-ms="79273" started-at="2020-02-05T22:59:04 IST" finished-at="2020-02-05T23:00:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="929" started-at="2020-02-05T23:00:23 IST" finished-at="2020-02-05T23:00:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="113149" started-at="2020-02-05T23:06:38 IST" finished-at="2020-02-05T23:08:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressCancelTest" duration-ms="40223" started-at="2020-02-05T23:08:31 IST" finished-at="2020-02-05T23:09:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="748" started-at="2020-02-05T23:09:12 IST" finished-at="2020-02-05T23:09:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="161929" started-at="2020-02-05T23:09:12 IST" finished-at="2020-02-05T23:11:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressDoNotSaveTest" duration-ms="49871" started-at="2020-02-05T23:11:54 IST" finished-at="2020-02-05T23:12:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-05T23:12:44 IST" finished-at="2020-02-05T23:12:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="104129" started-at="2020-02-05T23:12:45 IST" finished-at="2020-02-05T23:14:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeRemarksExitAndPressSaveTest" duration-ms="37962" started-at="2020-02-05T23:14:29 IST" finished-at="2020-02-05T23:15:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="629" started-at="2020-02-05T23:15:07 IST" finished-at="2020-02-05T23:15:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeRemarksExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="158978" started-at="2020-02-06T00:28:54 IST" finished-at="2020-02-06T00:31:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusAndPressCancelTest" duration-ms="14660" started-at="2020-02-06T00:31:33 IST" finished-at="2020-02-06T00:31:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="845" started-at="2020-02-06T00:31:47 IST" finished-at="2020-02-06T00:31:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="161973" started-at="2020-02-06T00:37:45 IST" finished-at="2020-02-06T00:40:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressCancelTest" duration-ms="66895" started-at="2020-02-06T00:40:27 IST" finished-at="2020-02-06T00:41:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T00:41:34 IST" finished-at="2020-02-06T00:41:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="163415" started-at="2020-02-06T00:41:34 IST" finished-at="2020-02-06T00:44:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressDoNotSaveTest" duration-ms="43029" started-at="2020-02-06T00:44:17 IST" finished-at="2020-02-06T00:45:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="536" started-at="2020-02-06T00:45:00 IST" finished-at="2020-02-06T00:45:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="101915" started-at="2020-02-06T00:45:01 IST" finished-at="2020-02-06T00:46:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ChangeVisibilityStatusExitAndPressSaveTest" duration-ms="26260" started-at="2020-02-06T00:46:43 IST" finished-at="2020-02-06T00:47:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="537" started-at="2020-02-06T00:47:09 IST" finished-at="2020-02-06T00:47:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ChangeVisibilityStatusExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="103011" started-at="2020-02-06T01:07:07 IST" finished-at="2020-02-06T01:08:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="FAIL" signature="ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewAndPressCancelTest" duration-ms="23975" started-at="2020-02-06T01:08:50 IST" finished-at="2020-02-06T01:09:14 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at testcases.ViewsElementsTest.ClearViewAndPressCancelTest(ViewsElementsTest.java:1107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="697" started-at="2020-02-06T01:09:14 IST" finished-at="2020-02-06T01:09:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewAndPressCancelTest status=FAILURE method=ViewsElementsTest.ClearViewAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="101334" started-at="2020-02-06T01:09:15 IST" finished-at="2020-02-06T01:10:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressCancelTest" duration-ms="52279" started-at="2020-02-06T01:10:56 IST" finished-at="2020-02-06T01:11:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="703" started-at="2020-02-06T01:11:49 IST" finished-at="2020-02-06T01:11:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressCancelTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressCancelTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="111367" started-at="2020-02-06T01:11:49 IST" finished-at="2020-02-06T01:13:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressDoNotSaveTest" duration-ms="72108" started-at="2020-02-06T01:13:41 IST" finished-at="2020-02-06T01:14:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="538" started-at="2020-02-06T01:14:53 IST" finished-at="2020-02-06T01:14:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressDoNotSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressDoNotSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="GoToViewPage" is-config="true" duration-ms="102206" started-at="2020-02-06T01:14:53 IST" finished-at="2020-02-06T01:16:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="ClearViewExitAndPressSaveTest" duration-ms="34385" started-at="2020-02-06T01:16:36 IST" finished-at="2020-02-06T01:17:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClearViewExitAndPressSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="afterMethod" is-config="true" duration-ms="661" started-at="2020-02-06T01:17:10 IST" finished-at="2020-02-06T01:17:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClearViewExitAndPressSaveTest status=SUCCESS method=ViewsElementsTest.ClearViewExitAndPressSaveTest()[pri:0, instance:testcases.ViewsElementsTest@10b48321] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ViewsElementsTest@10b48321]" name="endReport" is-config="true" duration-ms="69" started-at="2020-02-06T01:17:11 IST" finished-at="2020-02-06T01:17:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ViewsElementsTest -->
      <class name="testcases.MonitoringView">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="setup" is-config="true" duration-ms="53918" started-at="2020-02-06T03:58:20 IST" finished-at="2020-02-06T03:59:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToViewPage()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="GoToViewPage" is-config="true" duration-ms="11645" started-at="2020-02-06T03:59:14 IST" finished-at="2020-02-06T03:59:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToViewPage -->
        <test-method status="PASS" signature="addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="addViewTest" duration-ms="24608" started-at="2020-02-06T03:59:26 IST" finished-at="2020-02-06T03:59:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addViewTest -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="endReport" is-config="true" duration-ms="5035" started-at="2020-02-06T03:59:51 IST" finished-at="2020-02-06T03:59:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.MonitoringView@6c3f5566]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-06T03:59:51 IST" finished-at="2020-02-06T03:59:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addViewTest status=SUCCESS method=MonitoringView.addViewTest()[pri:0, instance:testcases.MonitoringView@6c3f5566] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.MonitoringView -->
      <class name="testcases.ToursElementsTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="startReport" is-config="true" duration-ms="2" started-at="2020-02-05T19:27:52 IST" finished-at="2020-02-05T19:27:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-05T19:52:40 IST" finished-at="2020-02-05T19:52:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="162614" started-at="2020-02-05T19:52:40 IST" finished-at="2020-02-05T19:55:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourAndCancelTest" duration-ms="9840" started-at="2020-02-05T19:55:22 IST" finished-at="2020-02-05T19:55:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="744" started-at="2020-02-05T19:55:32 IST" finished-at="2020-02-05T19:55:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="161297" started-at="2020-02-05T19:55:33 IST" finished-at="2020-02-05T19:58:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndCancelTest" duration-ms="23974" started-at="2020-02-05T19:58:14 IST" finished-at="2020-02-05T19:58:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="822" started-at="2020-02-05T19:58:38 IST" finished-at="2020-02-05T19:58:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="100792" started-at="2020-02-05T19:58:39 IST" finished-at="2020-02-05T20:00:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndDoNotSaveTest" duration-ms="36084" started-at="2020-02-05T20:00:20 IST" finished-at="2020-02-05T20:00:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="665" started-at="2020-02-05T20:00:56 IST" finished-at="2020-02-05T20:00:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="160772" started-at="2020-02-05T20:00:57 IST" finished-at="2020-02-05T20:03:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourExitAndSaveTest" duration-ms="34243" started-at="2020-02-05T20:03:37 IST" finished-at="2020-02-05T20:04:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="664" started-at="2020-02-05T20:04:12 IST" finished-at="2020-02-05T20:04:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103977" started-at="2020-02-05T20:09:25 IST" finished-at="2020-02-05T20:11:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewAndCancelTest" duration-ms="5052" started-at="2020-02-05T20:11:09 IST" finished-at="2020-02-05T20:11:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="526" started-at="2020-02-05T20:11:14 IST" finished-at="2020-02-05T20:11:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="112854" started-at="2020-02-05T20:11:15 IST" finished-at="2020-02-05T20:13:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndCancelTest" duration-ms="19415" started-at="2020-02-05T20:13:08 IST" finished-at="2020-02-05T20:13:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="790" started-at="2020-02-05T20:13:27 IST" finished-at="2020-02-05T20:13:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102711" started-at="2020-02-05T20:13:28 IST" finished-at="2020-02-05T20:15:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndDoNotSaveTest" duration-ms="26237" started-at="2020-02-05T20:15:10 IST" finished-at="2020-02-05T20:15:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="985" started-at="2020-02-05T20:15:37 IST" finished-at="2020-02-05T20:15:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="105416" started-at="2020-02-05T20:15:38 IST" finished-at="2020-02-05T20:17:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddNewTourWithoutViewExitAndSaveTest" duration-ms="4519" started-at="2020-02-05T20:17:23 IST" finished-at="2020-02-05T20:17:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddNewTourWithoutViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="695" started-at="2020-02-05T20:17:28 IST" finished-at="2020-02-05T20:17:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddNewTourWithoutViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddNewTourWithoutViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="102561" started-at="2020-02-05T20:48:31 IST" finished-at="2020-02-05T20:50:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewAndCancelTest" duration-ms="10971" started-at="2020-02-05T20:50:14 IST" finished-at="2020-02-05T20:50:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="559" started-at="2020-02-05T20:50:25 IST" finished-at="2020-02-05T20:50:25 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101705" started-at="2020-02-05T20:50:25 IST" finished-at="2020-02-05T20:52:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndCancelTest" duration-ms="27086" started-at="2020-02-05T20:52:07 IST" finished-at="2020-02-05T20:52:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="892" started-at="2020-02-05T20:52:34 IST" finished-at="2020-02-05T20:52:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.AddViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="162898" started-at="2020-02-05T20:52:35 IST" finished-at="2020-02-05T20:55:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndDoNotSaveTest" duration-ms="40220" started-at="2020-02-05T20:55:18 IST" finished-at="2020-02-05T20:55:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-05T20:55:58 IST" finished-at="2020-02-05T20:55:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="164341" started-at="2020-02-05T20:55:59 IST" finished-at="2020-02-05T20:58:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="AddViewExitAndSaveTest" duration-ms="40224" started-at="2020-02-05T20:58:43 IST" finished-at="2020-02-05T20:59:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="702" started-at="2020-02-05T20:59:23 IST" finished-at="2020-02-05T20:59:24 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.AddViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="165246" started-at="2020-02-05T21:44:00 IST" finished-at="2020-02-05T21:46:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameAndCancelTest" duration-ms="8828" started-at="2020-02-05T21:46:45 IST" finished-at="2020-02-05T21:46:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="648" started-at="2020-02-05T21:46:54 IST" finished-at="2020-02-05T21:46:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="161829" started-at="2020-02-05T21:49:56 IST" finished-at="2020-02-05T21:52:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndCancelTest" duration-ms="22977" started-at="2020-02-05T21:52:37 IST" finished-at="2020-02-05T21:53:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="532" started-at="2020-02-05T21:53:00 IST" finished-at="2020-02-05T21:53:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101289" started-at="2020-02-05T21:53:01 IST" finished-at="2020-02-05T21:54:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndDoNotSaveTest" duration-ms="48088" started-at="2020-02-05T21:54:42 IST" finished-at="2020-02-05T21:55:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="621" started-at="2020-02-05T21:55:30 IST" finished-at="2020-02-05T21:55:31 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="112238" started-at="2020-02-05T22:05:46 IST" finished-at="2020-02-05T22:07:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeNameExitAndSaveTest" duration-ms="42028" started-at="2020-02-05T22:07:38 IST" finished-at="2020-02-05T22:08:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeNameExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="553" started-at="2020-02-05T22:08:20 IST" finished-at="2020-02-05T22:08:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeNameExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeNameExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="185704" started-at="2020-02-05T22:53:55 IST" finished-at="2020-02-05T22:57:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksAndCancelTest" duration-ms="5673" started-at="2020-02-05T22:57:00 IST" finished-at="2020-02-05T22:57:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="550" started-at="2020-02-05T22:57:06 IST" finished-at="2020-02-05T22:57:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="191503" started-at="2020-02-05T23:00:24 IST" finished-at="2020-02-05T23:03:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndCancelTest" duration-ms="26030" started-at="2020-02-05T23:03:35 IST" finished-at="2020-02-05T23:04:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="965" started-at="2020-02-05T23:04:02 IST" finished-at="2020-02-05T23:04:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="111633" started-at="2020-02-05T23:04:02 IST" finished-at="2020-02-05T23:05:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndDoNotSaveTest" duration-ms="43166" started-at="2020-02-05T23:05:54 IST" finished-at="2020-02-05T23:06:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="915" started-at="2020-02-05T23:06:37 IST" finished-at="2020-02-05T23:06:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="122884" started-at="2020-02-05T23:15:07 IST" finished-at="2020-02-05T23:17:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeRemarksExitAndSaveTest" duration-ms="45002" started-at="2020-02-05T23:17:10 IST" finished-at="2020-02-05T23:17:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeRemarksExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="827" started-at="2020-02-05T23:17:55 IST" finished-at="2020-02-05T23:17:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeRemarksExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeRemarksExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="111387" started-at="2020-02-05T23:54:20 IST" finished-at="2020-02-05T23:56:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeAndCancelTest" duration-ms="5381" started-at="2020-02-05T23:56:11 IST" finished-at="2020-02-05T23:56:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="647" started-at="2020-02-05T23:56:17 IST" finished-at="2020-02-05T23:56:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="111471" started-at="2020-02-05T23:56:17 IST" finished-at="2020-02-05T23:58:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersAndCancelTest" duration-ms="8436" started-at="2020-02-05T23:58:09 IST" finished-at="2020-02-05T23:58:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="974" started-at="2020-02-05T23:58:17 IST" finished-at="2020-02-05T23:58:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="171524" started-at="2020-02-05T23:58:18 IST" finished-at="2020-02-06T00:01:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndCancelTest" duration-ms="46583" started-at="2020-02-06T00:01:10 IST" finished-at="2020-02-06T00:01:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1021" started-at="2020-02-06T00:01:56 IST" finished-at="2020-02-06T00:01:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="108567" started-at="2020-02-06T00:01:57 IST" finished-at="2020-02-06T00:03:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndDoNotSaveTest" duration-ms="72792" started-at="2020-02-06T00:03:46 IST" finished-at="2020-02-06T00:04:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="529" started-at="2020-02-06T00:04:59 IST" finished-at="2020-02-06T00:04:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="109415" started-at="2020-02-06T00:04:59 IST" finished-at="2020-02-06T00:06:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeBySpinnersExitAndSaveTest" duration-ms="51012" started-at="2020-02-06T00:06:49 IST" finished-at="2020-02-06T00:07:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeBySpinnersExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="570" started-at="2020-02-06T00:07:40 IST" finished-at="2020-02-06T00:07:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeBySpinnersExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeBySpinnersExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="116898" started-at="2020-02-06T00:10:24 IST" finished-at="2020-02-06T00:12:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndCancelTest" duration-ms="22479" started-at="2020-02-06T00:12:21 IST" finished-at="2020-02-06T00:12:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="609" started-at="2020-02-06T00:12:43 IST" finished-at="2020-02-06T00:12:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="170898" started-at="2020-02-06T00:12:44 IST" finished-at="2020-02-06T00:15:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndDoNotSaveTest" duration-ms="43035" started-at="2020-02-06T00:15:35 IST" finished-at="2020-02-06T00:16:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="645" started-at="2020-02-06T00:16:18 IST" finished-at="2020-02-06T00:16:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="110545" started-at="2020-02-06T00:16:18 IST" finished-at="2020-02-06T00:18:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeViewTimeExitAndSaveTest" duration-ms="43023" started-at="2020-02-06T00:18:09 IST" finished-at="2020-02-06T00:18:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeViewTimeExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1013" started-at="2020-02-06T00:18:52 IST" finished-at="2020-02-06T00:18:53 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeViewTimeExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeViewTimeExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="110546" started-at="2020-02-06T00:26:55 IST" finished-at="2020-02-06T00:28:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusAndCancelTest" duration-ms="7383" started-at="2020-02-06T00:28:46 IST" finished-at="2020-02-06T00:28:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="823" started-at="2020-02-06T00:28:53 IST" finished-at="2020-02-06T00:28:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="188004" started-at="2020-02-06T00:31:48 IST" finished-at="2020-02-06T00:34:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndCancelTest" duration-ms="19740" started-at="2020-02-06T00:34:56 IST" finished-at="2020-02-06T00:35:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="671" started-at="2020-02-06T00:35:16 IST" finished-at="2020-02-06T00:35:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndCancelTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="109330" started-at="2020-02-06T00:35:17 IST" finished-at="2020-02-06T00:37:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndDoNotSaveTest" duration-ms="37735" started-at="2020-02-06T00:37:06 IST" finished-at="2020-02-06T00:37:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="868" started-at="2020-02-06T00:37:44 IST" finished-at="2020-02-06T00:37:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="172307" started-at="2020-02-06T00:47:10 IST" finished-at="2020-02-06T00:50:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="ChangeVisibilityStatusExitAndSaveTest" duration-ms="42020" started-at="2020-02-06T00:50:02 IST" finished-at="2020-02-06T00:50:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChangeVisibilityStatusExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="668" started-at="2020-02-06T00:50:44 IST" finished-at="2020-02-06T00:50:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ChangeVisibilityStatusExitAndSaveTest status=SUCCESS method=ToursElementsTest.ChangeVisibilityStatusExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="126667" started-at="2020-02-06T01:18:20 IST" finished-at="2020-02-06T01:20:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsAndCancelTest" duration-ms="6205" started-at="2020-02-06T01:20:27 IST" finished-at="2020-02-06T01:20:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="742" started-at="2020-02-06T01:20:33 IST" finished-at="2020-02-06T01:20:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="115491" started-at="2020-02-06T01:20:34 IST" finished-at="2020-02-06T01:22:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndCancelTest" duration-ms="25024" started-at="2020-02-06T01:22:30 IST" finished-at="2020-02-06T01:22:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="579" started-at="2020-02-06T01:22:55 IST" finished-at="2020-02-06T01:22:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="170330" started-at="2020-02-06T01:22:55 IST" finished-at="2020-02-06T01:25:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndDoNotSaveTest" duration-ms="31253" started-at="2020-02-06T01:25:46 IST" finished-at="2020-02-06T01:26:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="662" started-at="2020-02-06T01:26:17 IST" finished-at="2020-02-06T01:26:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="187855" started-at="2020-02-06T01:26:17 IST" finished-at="2020-02-06T01:29:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteAllViewsExitAndSaveTest" duration-ms="4525" started-at="2020-02-06T01:29:25 IST" finished-at="2020-02-06T01:29:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAllViewsExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="526" started-at="2020-02-06T01:29:30 IST" finished-at="2020-02-06T01:29:30 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAllViewsExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteAllViewsExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="111405" started-at="2020-02-06T01:55:20 IST" finished-at="2020-02-06T01:57:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewAndCancelTest" duration-ms="3385" started-at="2020-02-06T01:57:11 IST" finished-at="2020-02-06T01:57:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="531" started-at="2020-02-06T01:57:15 IST" finished-at="2020-02-06T01:57:15 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="101999" started-at="2020-02-06T01:57:15 IST" finished-at="2020-02-06T01:58:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndCancelTest" duration-ms="343" started-at="2020-02-06T01:58:57 IST" finished-at="2020-02-06T01:58:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndCancelTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="652" started-at="2020-02-06T01:58:57 IST" finished-at="2020-02-06T01:58:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndCancelTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndCancelTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="111780" started-at="2020-02-06T01:58:58 IST" finished-at="2020-02-06T02:00:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndDoNotSaveTest" duration-ms="23223" started-at="2020-02-06T02:00:50 IST" finished-at="2020-02-06T02:01:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndDoNotSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="1048" started-at="2020-02-06T02:01:13 IST" finished-at="2020-02-06T02:01:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndDoNotSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndDoNotSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="GoToToursPage()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="GoToToursPage" is-config="true" duration-ms="103889" started-at="2020-02-06T02:01:14 IST" finished-at="2020-02-06T02:02:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoToToursPage -->
        <test-method status="PASS" signature="DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="DeleteViewExitAndSaveTest" duration-ms="6438" started-at="2020-02-06T02:02:58 IST" finished-at="2020-02-06T02:03:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteViewExitAndSaveTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="afterMethod" is-config="true" duration-ms="869" started-at="2020-02-06T02:03:04 IST" finished-at="2020-02-06T02:03:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteViewExitAndSaveTest status=SUCCESS method=ToursElementsTest.DeleteViewExitAndSaveTest()[pri:0, instance:testcases.ToursElementsTest@80ec1f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testcases.ToursElementsTest@80ec1f8]" name="endReport" is-config="true" duration-ms="54" started-at="2020-02-06T02:03:05 IST" finished-at="2020-02-06T02:03:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.ToursElementsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
